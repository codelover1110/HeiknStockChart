{"version":3,"sources":["components/Sidebar/Sidebar.js","contexts/BackgroundColorContext.js","components/Dropdown/Dropdown.js","routes.js","components/Interactiveutils.js","components/trades-chart/TradesChart.js","components/performance-chart/MultiLineChart.js","components/performance-chart/GroupBarChart.js","components/performance-chart/PerformanceChart.js","api/Api.js","components/stock-chart/StockChart.js","contexts/authContext.js","layouts/User/HomePage.js","components/HeiknStockChart.js","components/MultiRangeSlider/MultiRangeSlider.js","components/ItemChart.js","components/HeiknStockSlicedChart.js","components/api-chart/contexts.js","components/api-chart/ChartGraph.js","components/api-chart/helpers.js","components/api-chart/ChartGraphWrap.js","components/api-chart/ChartOptions.js","components/api-chart/TradeChart.js","components/api-chart/ChartWithNewApi.js","utils/helper.js","layouts/User/Login.js","components/Navbars/AdminNavbar.js","layouts/Admin/Admin.js","layouts/Admin/UserManage.js","layouts/Admin/LinkManage.js","contexts/CsvDownloadContext.js","components/ButtonCsvDownload.js","contexts/DatatableContext.js","components/Spinner.js","components/HeiknDatatablePrice.js","components/Datatable/PriceDataTable.js","layouts/User/PriceData.js","components/HeiknDatatable.js","components/Datatable/TradeDataTable.js","layouts/User/TradeData.js","components/HybridViewChartTable/HybridViewTable.js","components/HybridViewChartTable/HybridViewChartTable.js","layouts/User/HybridView.js","components/FinancialDashboard/Header.js","components/FinancialDashboard/BarChart/interactiveutils.js","components/FinancialDashboard/BarChart/Chart.js","components/FinancialDashboard/ChartTools.js","components/FinancialDashboard/BarChart/index.js","components/FinancialDashboard/GraphTypes.js","components/FinancialDashboard/StockTypes.js","components/FinancialDashboard/FinancialDataTable.js","components/FinancialDashboard/FinancialStatementsDataTable.js","layouts/User/FinancialDashboard.js","components/NewsDashboard/Header.js","layouts/User/NewsDashboard.js","components/CustomSelect.js","components/TextEditor/Editor.js","components/SystemFileManager/FileManager.js","contexts/ThemeContext.js","components/ThemeWrapper/ThemeWrapper.js","components/BackgroundColorWrapper/BackgroundColorWrapper.js","layouts/Auth/PrivateRoute.js","layouts/User/SignUp.js","layouts/User/Verify.js","components/Floats/FloatsComponent.js","layouts/User/Floats.js","layouts/User/ForgotPassword.js","layouts/User/PasswordResetConfirm.js","components/FinancialDashboard/SmallBarChart/interactiveutils.js","components/FinancialDashboard/SmallBarChart/Chart.js","components/FinancialDashboard/SmallBarChart/index.js","components/WatchListEditColumnWidget/components/modal/dropDown/index.js","components/WatchListEditColumnWidget/components/modal/Widget.js","components/WatchListEditColumnWidget/WatchListEditColumnWidget.js","components/WatchListItem/WatchListItem.js","components/WatchList.js","layouts/User/MarketWatch.js","components/Scanner/ScannerComponent.js","layouts/User/Scanner.js","components/optimization-chart/MultiLineChart.js","components/optimization-chart/HeatMapChart.js","components/optimization-chart/GroupBarChart.js","components/optimization-chart/OptimizationChartItem.js","components/optimization-chart/OptimizationChart.js","components/optimization-chart/OptimizationChartPage.js","layouts/User/Optimization.js","contexts/DBDashboardContext.js","components/DBManagement/Collection.js","components/DBManagement/CollectionList.js","components/DBManagement/DatabaseActions.js","components/DBManagement/Pathway.js","components/DBManagement/ControlBar.js","components/DBManagement/Database.js","components/DBManagement/DatabaseList.js","components/DBManagement/Content.js","components/DBManagement/Sidebar.js","components/DBManagement/Dashboard.js","components/DBManagement/DashboardWrapper.js","index.js","assets/img/anime3.png"],"names":["ps","backgroundColors","BackgroundColorContext","createContext","color","changeColor","Dropdown","props","items","title","icon","instance","handleClick","isActive","subInstance","useState","isOpen","setOpen","className","onClick","map","item","e","pathname","id","label","Sidebar","history","useHistory","sidebarRef","React","useRef","JSON","parse","localStorage","getItem","user","userRole","setUserRole","useEffect","role","navigator","platform","indexOf","PerfectScrollbar","current","suppressScrollX","suppressScrollY","destroy","handleInstanceChange","locationState","initInstance","push","state","isAdminPage","routes","selectedInstance","handleSidebarChange","Consumer","data","ref","prop","key","name","is_admin","includes","defaultProps","rtlActive","adminRoutes","saveInteractiveNodes","type","chartId","node","isNotDefined","interactiveNodes","getInteractiveNodes","this","rsiAppearance","stroke","macd","signal","fille","bearPower","CandleStickChartWithEquidistantChannel","handleEvents","handleZoom","hideTextLabel","addTextLable","bind","onKeyPress","onDrawComplete","saveInteractiveNode","saveCanvasNode","handleSelection","enableInteractiveObject","x","y","channels_1","channels_3","valueText","dateText","status","isFullChart","canvasNode","document","addEventListener","subscribe","listener","unsubscribe","removeEventListener","setState","formatter","Intl","DateTimeFormat","month","formatterW","weekday","month2","format","datum","date","week2","dateElem","getDate","getFullYear","high","action","interactives","toObject","each","objects","indicator","indicators","filter","value","length","keyCode","which","console","log","selected","cancelDrag","terminate","isHomePage","index","isIncludeIndicators","ema20","ema","options","windowSize","merge","d","c","accessor","ema50","ha","heikinAshi","macdCalculator","fast","slow","atr14","atr","initialData","width","ratio","chartColumn","extendMarketTime","forEach","line","dayjs","toDate","calculatedData","discontinuousTimeScaleProvider","inputDateAccessor","xScaleProvider","xScale","xAccessor","displayXAccessor","defaultAnnotationProps","longAnnotationProps","yScale","low","calculateTooltipOffset0","fill","path","buyPath","tooltip","trades","trade","longShort","price","trade_date","replace","shortAnnotationProps","calculateTooltipOffset1","sellPath","xExtents","last","Math","max","xDisplayFormatProps","xDisplayFormat","timeFormat","ohlcFormat","volumeFormat","percentFormat","displayTexts","xDisplayFormatProps1","o","h","l","v","na","xDisplayFormatProps2","symbol","SMATooltipProps","valueFill","height","calculateHeight","margin","left","right","top","bottom","seriesName","redraw","yExtents","padding","axisAt","orient","tickStroke","ticks","at","displayFormat","close","open","wickStroke","origin","with","SvgPathAnnotation","when","strategy","microStrategy","usingProps","volume","w","calculateMainHeightOffset","tickFormat","yAccessor","rsi","calculateOffset","baseAt","side","yValue","yLabel","yDisplayFormat","appearance","rsi2","rsi3","heik","heik2","enabled","drawingObjectMap","EquidistantChannel","onSelect","classes","CandleChart","rx","ry","CandleChart_type_date","textAnchor","dy","CandleChart_type_value","Component","fitWidth","withStyles","fontSize","borderRadius","fontWeight","deal_green_shadowed","textShadow","deal_red_shadowed","MultiLineChart","series","getSeries","chart","zoom","dataLabels","show","curve","lineCap","colors","undefined","dashArray","text","isPercent","align","style","grid","xaxis","categories","getCategories","labels","val","opt","moment","utc","datetimeUTC","yaxis","toFixed","axisBorder","min","getMinValue","getMaxValue","legend","position","chartData","property","percent","efficiency","prevProps","rows","getWiningData","isAverage","isTotal","avgWinning","totWinning","winning","getLosingData","avgLosing","totLosing","losing","getSymbols","optionCreator","formatAvg","parseFloat","toolbar","events","click","event","chartContext","config","states","normal","active","offsetX","offsetY","plotOptions","bar","endingShape","columnWidth","barHeight","opts","horizontalAlign","markers","radius","itemMargin","horizontal","vertical","onItemHover","highlightDataSeries","GroupApexBar","setOptions","setSeries","PerformanceChart","mainData","totalPercentGainLost","percentEfficiency","winningLosing","winningLosingAvg","totWinLose","http","Axios","create","baseURL","process","headers","request","req","a","method","url","params","body","response","success","error","getStrategyListReq","getTablesReq","getDataReq","getDataSliceReq","getDataExtendedSliceReq","getDataExtendedReq","getBacktestingResultReq","filterPriceData","timeFrame","tradeStartDate","tradeEndDate","currentPage","pageAmount","requestOptions","stringify","fetch","then","json","candles","page_total","filterTradesData","macroStrategy","trades_data","macro_strategy","micro_strategy","quantity","getAllSymbols","temp_data","tables","createSignUpLink","roles","link","res","getActiveLinks","sendSignUpLink","email","forgotPassword","passwordConfirmReset","password1","password2","getModuleTypeNames","getFileTypeNames","moduleType","param_type","convertArraytoString","src","dest","comma","convertStringtoArray","split","transformingProcessConfigToQuery","settings","watchlist","position_sizing","order_routing","data_source","live_trading","starting_cash","extended_hours","indicator_signalling","asset_class","transformingProcessConfigFromParam","saveConfigFile","config_collection","saveScriptFile","filename","contents","isUpdate","getUserList","updateUserRole","deleteUser","getConfigFileList","collection","getBotConfigFileList","getConfigFileDetail","result","getBotStatusList","updateBotStatus","botName","botAction","apiUrl","message","getBotConfigList","getNewsFinancialData","getIncomeStatement","getBalanceSheet","getCashStatement","getFinancialTotalData","getStockModalData","getMultiFinancials","symbols","statement_type","results","saveScannerView","chart_number","fields","getScannerViewData","getScannerDetails","exchange","industry","sector","apiURL","getTickerScannerOptions","getFloatsFilterOptions","getFloatsDetails","pageNumber","saveScannerAllViewData","allViewData","getScannerAllViewData","getSymbolsByMicroStrategy","macroStrat","microStrat","getIndicators","getIndicatorSignallingList","apiGetDatabases","header","apiGetCollections","dbName","URL","search","URLSearchParams","db_name","toString","apiDeleteCollection","collectionName","collection_name","apiDeleteDatabase","getWatchListAll","apiCreateBackup","apiExecuteBackup","backup_id","contentType","get","blob","window","createObjectURL","createElement","href","download","apiStopBackup","apiGetGoogleNews","StockChart","viewType","multiSymbol","selectedTradeDB","chartPeriod","selectedSymbolType","startDate","endDate","isSliced","dbname","setDbname","setChartData","get_data","requestBody","dataRes","converDate","Date","filteredSymbols","backtestingResultRes","displayChart","authContext","authUser","isAuthenticated","signin","password","formData","username","user_id","Error","catch","err","signup","first_name","last_name","signup_path","verify","userId","code","num","signout","removeItem","useAuth","useContext","ProvideAuth","children","auth","useProvideAuth","Provider","HeiknStockChart","handleChartRedirect","setSymbol","setIndicators","isShowMicro","setIsShowMicro","symbolList","setSymbolList","collapseOpen","setChartColumn","selectedViewType","setSelectedViewType","setMicroStrategy","setStrategy","strategyList","setStrategyList","setExtendMarketTime","optionsViewTypes","setOptionsViewTypes","optionsMicroStrategy","setOptionsMicroStrategy","optionsStratgy","setOptionsStrategy","optionsIndicator","setOptionsIndicator","optionsIndicatorExtend","setOptionsIndicatorExtend","optionsMarketTime","getStrategyList","useCallback","strategyListRes","strategyOptions","macro","flag","microStrategyOptions","micro","symbolOptions","get_tables","tablesRes","indicatorList","disableScroll","on","off","handleStrategy","handleMicroStrategyChange","calculateGridColumn","to","onChange","initStrategy","initMicroStrategy","initIndicators","initSymbol","placeholder","isMulti","option","navbar","caret","nav","preventDefault","alt","require","default","tag","divider","selectDateRange","startedDate","subtract","endedDate","setTradeStartDate","setTradeEndDate","handleDateRangeChange","rangeValue","isFlag","add","Form","Group","as","Row","disabled","defaultValue","step","onAfterChange","HeiknStockChartItem","location","setMultiSymbol","apiFlag","setApiFlag","handleStrategyChange","MultiRangeSlider","HeiknStockSlicedChart","ApiChartContext","useApiChartContext","ApiChartProvider","isLoading","setLoading","ChartGraph","scaleTime","timeIntervalBarWidth","utcHour","ChartGraphWrap","Placeholder","selectStyles","background","ChartOptions","sym","setSym","time","setTime","setBar","setClose","ext","setExt","timeframe","bars","rawData","row","displayEmpty","renderValue","target","TradeChart","ChartWithNewApi","HomePage","setViewType","isShowSidebar","setShowSidebar","setSelectedInstance","useLocation","mainPanelRef","documentElement","classList","remove","querySelectorAll","i","scrollTop","scrollingElement","renderChart","Fragment","validateEmail","test","String","toLowerCase","currentDateString","getMonth","day","Login","setError","setIsLoading","setMessage","setEmail","setPassword","login","alert","historyState","handleEmailChange","required","handlePasswordChange","htmlFor","AdminNavbar","modalSearch","setmodalSearch","setcolor","updateColor","innerWidth","toggleModalSearch","classNames","expand","fluid","modalClassName","toggle","Admin","UserManage","isRequest","setIsRequest","isShowUpdateRoleModal","setIsShowUpdateRoleModal","setRoles","userlist","setUserList","selectedUserId","setSelectedUserId","sidebarOpened","setsidebarOpened","optionsRole","fetchUserList","list","users","is_superuser","size","showUpdateUserRoleModal","confirm","toggleSidebar","getBrandText","layout","columns","field","handleRolesChange","handleUpdateRoleModalClose","transformUserRole","roleValues","coma","handleUserRoleUpdate","Modal","onHide","Header","closeButton","Title","Body","Footer","variant","brandText","btn","LinkManage","isShowSendModal","setIsShowSendModal","isShowCreateLinkModal","setShowCreateLinkModal","selectedLink","setSelectedLink","fetchActiveLinks","links","filteredLinks","expired","linklist","showSendEmailModal","setLinkList","handleCreateLinkModalClose","handleCreateLinkClick","handleLinkCreate","handleSendEmailModalClose","handleLinkToEmailSend","CsvDownloadContext","CsvDownloadUpdateContext","useCsvDownload","useCsvDownloadUpdate","CsvDownloadProvider","dataset","setDataset","ButtonCsvDownload","DatatableContext","DatatableLoadingContext","PaginationContext","PaginationUpdatingContext","useDatatableLoading","useDatatable","usePagination","usePaginationUpdate","DatatableProvider","itemsPerPage","setItemsPerPage","setCurrentPage","totalItems","setTotalItems","datatable","setDatatable","parseInt","Spinner","HeiknDatatable","isLoadingData","hover","entriesOptions","entries","pagesAmount","fullPagination","PriceDataTable","setTimeFrame","optionsSymbol","setOptionsSymbol","optionsTimeFrame","hearder_columns","useMemo","attributes","sort","setLoadingData","updateCsvDownload","getPriceTrades","PriceData","maxHeight","dark","noBottomColumns","small","striped","scrollY","displayEntries","info","paging","class","marginLeft","Pagination","Item","Prev","Next","TradeDataTable","setMacroStrategy","optionsStrategy","getTrades","TradeData","HybridViewTable","isLoaded","wholeRows","setWholeRows","get_trades","loadPriceDetails","HybridViewChartTable","setIsLoaded","HybridView","selectedHeaderNav","setSelectedHeaderNav","handleNavClicked","isDefined","ema26","ema12","dataPoints","calendarDate","ChartTools","aggregationTypeForOne","setAggregrationTypeForOne","handleAggregationForOneClicked","aggregationType","backgroundColor","GroupBarChart","globalAggregationType","currentData","setCurrentData","filterByAggregationTyoe","selectedData","filteredData","period","filteredSelectedData","borderColor","boxShadow","group","Chart","GraphTypes","selectedAggregationType","setSelectedAggregationType","handleAggregationTypeClicked","StockTypes","selectedStockType","setSelectedStockType","handleStockTypeClicked","stockType","FinancialDataTable","sorted","setSorted","wrapSetDatatable","calendarDateKey","Object","keys","scrollX","b","valueA","valueB","localeCompare","handleSortClicked","newRows","newObject","NaN","number","formatNumber","formatData","FinancialStatementsDataTable","selectedRow","setSelectedRow","isOpened","setIsOpened","realData","slice","author","amp_url","article_url","published_utc","dataId","description","publisher","pagination","handlePrevClick","handleNextClick","FinancialDashboard","setDataTable","financialStatements","setFinancialStatements","sortDataPointsByDate","sortedData","getNewsFinancials","getTotalData","getIncomeForDataTable","getBalanceForDataTable","getCashForDataTable","getIncome","revenus","costOfRevenue","grossProfit","EBITDAMargin","NetIncome","earningsPerBasicShare","revenues","netIncome","getBalance","assets","liabilitiesNonCurrent","debt","tradeAndNonTradeReceivables","tradeAndNonTradePayables","cashAndEquivalents","getCash","netCashFlowFromOperations","netCashFlowFromInvesting","netCashFlowFromFinancing","issuanceDebtSecurities","issuanceEquityShares","paymentDividendsOtherCashDistributions","BarChart","CustomSelect","isValid","customStyles","control","base","isFocused","styles","TextEditor","openAddIndicatorModal","isShowAddIndicatorModal","handleChange","checked","isCheckedStrategy","loadConfigFiles","configFiles","configFileOptions","selectedConfigFile","loadBotConfigFiles","botConfigFileOptions","selectedBotConfigFile","bot","loadBotStatusList","botStatusList","updated","headerColumnsBotStatus","botStatusDatatable","loadBotConfigList","botConfigList","hours","headerColumnsBotConfig","col","data1","headerColumnsSmallBotConfig","botConfigDatatable","botConfigSmallDatatable","loadModuleTypes","moduleTypes","moduleTypeOptions","selectedModuleType","handleScriptFileChange","selectedFileType","handleScriptFileSave","isSelectedStrategyFile","processConfigSetting","SaveScriptModalClose","handleScriptFileNameChange","onEditorStateChange","editorState","handleScriptFileCreate","scriptfiles","EditorState","createEmpty","handleOpenScriptFile","isShowOpenModal","handleOpenProcessConfigModal","isShowConfigOpenModal","handleFileTypeChange","handleFile1TypeChange","selectedFile1Type","handleConfigFileChange","handleBotConfigFileChange","handleModuleTypeChange","fileTypes","selectedModuleContents","fileTypeOptions","handleModule1TypeChange","selectedModule1Type","file1TypeOptions","handleSaveModalShow","isShowSaveModal","processConfigModalClose","botConfigModalClose","isShowBotConfigOpenModal","OpenScriptModalClose","AddIndicatorModalClose","handleScriptFileOpen","selectedFile","file","blocksFromHTML","convertFromHTML","blockContent","ContentState","createFromBlockArray","contentBlocks","entityMap","createWithContent","scriptfile","handleConfigFileOpen","handleBotConfigFileOpen","botConfigSetting","bot_name_config","macro_strategy_config","start_date_config","extended_hours_config","handleSave","content","convertToRaw","getCurrentContent","blocks","handleProcessConfigSettingSave","form","querySelector","checkValidity","isFormValid","validations","selectValidations","showFile","currFile","files","reader","FileReader","onload","readAsText","handleModuleAndTypeSelect","strategyIndicators","handleIndicatorDelete","handleBotNameChange","handleProcessChange","handleBotConfigBotNameChange","handleBotConfigInputChange","displayProcessEditor","processConfigOptions","handleIndicatorReset","textdata","module1TypeOptions","botConfigOptions","wdith","loadIndicatorSignallingOptions","updatedState","Tabs","activeKey","k","Tab","eventKey","onValueChange","highlight","languages","plaintext","fontFamily","minHeight","noValidate","sortable","FileManager","pushState","themes","white","red","darkBlue","lightBlue","textColor","actionButtonColor","actionButtonBg","tableTextColor","light","useThemeColors","ThemeContext","theme","changeTheme","ThemeContextWrapper","setTheme","BackgroundColorWrapper","setColor","PrivateRoute","rest","render","from","SignUp","setUserName","confirmPassword","setConfirmPassword","handleUserNameChange","handleConfirmPasswordChange","Verify","setCode","userInfo","user_email","setItem","token","handleCodeChange","FloatsComponent","setExchange","setSector","setIndustry","optionsExchange","setOptionsExchanges","optionsSector","setOptionsSector","optionsIndustry","setOptionsIndustry","loadFloatDetails","pageNum","floatDetails","floats","loadFloatsFilterOption","scannerOptions","exchanges","industries","sectors","handleSectorChange","handleExchangeChange","handleIndustryChange","column","Floats","ForgotPassword","handleForgotPassword","PasswordResetConfirm","setPassword1","setPassword2","delay","ms","Promise","setTimeout","handlePasswordResetConfirm","handlePassword1Change","handlePassword2Change","CustomDropDown","nodes","inputvalue","selectedNode","nodeOptions","child","Widget","checkedAvailableItem","expandedAvailableItem","nodesFilteredAvailableItem","nodesAvailableItem","restoreAvailableItems","restoreCurrentItems","currentNodes","checkedCurrrentItem","expandedCurrrentItem","onCheckAvailableItem","onExpandAvailableItem","onFilterChangeAvailableItem","onCheckCurrentItem","onExpandCurrentItem","onAddItems","onRemoveItems","onLoadDefaults","onMoveUp","onMoveDown","onRestoreClicked","onOkClicked","onCancelClicked","onGetAvailabelNodes","onLoadTotalNodes","isExistItem","currentItems","cloneDeep","totalNodes","availableNodes","totalNode","parentFlag","totalCurrentNode","totalCurrnetChildrens","totalCurrentChild","totalChild","childFlag","availableNode","checkedCurrentItem","expandedCurrentItem","filteredNodes","childNode","checkedItems","availableItems","newCurrentNodes","availableItem","currentChildItems","childItem","originCurrentNodes","totalNewCurrentNodes","newCurrentNode","exist","currentNode","newChildItem","parentExist","totalCurrentNodes","originNode","newNode","filteredNode","isExist","pushItem","availableChildItems","defaultNodes","direction","Array","isArray","moveEnable","parentSuffix","uniqParentSuffix","Set","parentValue","nodeIndex","parentIndex","childIndex","temp","moveItem","handleCurrentNodesChanged","handleVisible","expanded","onCheck","onExpand","WatchListEditColumnWidget","setTotalNodes","selectedColumns","setCurrentNodes","childNodes","getModalData","stockFinancialsData","stock_financials","ticker_news","tickerDetails","ticker_details","total","defaults","setColumns","visibleStatus","handleModalClose","WatchListItem","setAllViewData","isLoadedWatchListOptions","setIsLoadedWatchListOptions","isConnected","setIsConnected","setSelectedColumns","chartMultiData","setChartMultiData","ws","setWs","isOpenedEditColumnWidget","setIsOpenedEditColumnWidget","selectedWatchList","setSelectedWatchList","selectedWatchListOptions","setSelectedWatchListOptions","isUpdatedCols","setIsUpdatedCols","columnItems","setColumnItems","initColumnItems","isUpdatedWatchList","setIsUpdatedWatchList","selectedSymbols","setSelectedSymbols","watchListData","setWatchListData","watchListInitData","setWatchListInitData","loadWatchListOptions","getScannerAvailableFields","cols","temps","colObjects","loadRows","financials","loadMultiFinancials","object","updateChangeSymbol","isValidChartData","filtered","financial","getIncomeFromFinancial","getChartDataBySymbol","isChild","slicedChartData","splice","newData","init","symbol_type","send","loadview","view","indicatorStyle","rsi_side","rsi2_color","rsi3_color","heik1_color","heik_color","heik2_color","handleWatchListChange","createWebSocket","multiCharts","socket","WebSocket","onopen","onmessage","msg","onclose","isNaN","WatchList","defaultViewFields","allViewDataDefault","loadLayout","validViewDatas","chartNumbers","allViewDataFiltered","newAllViewData","reload","MarketWatch","ScannerComponent","loadWholeOptions","scannerDetails","loadScannerDetails","Scanner","HeatMapChart","generateData","count","randomArray","ceil","floor","random","chartOptions","seriesBuffer","OptimizationChartItem","OptimizationChart","OptimizationChartPage","Optimization","DBDashboardContext","DBDashboardUpdateContext","DBDashboardLoadingContext","DBDatabaseExportContext","DBDatabaseDeleteContext","DBBackupContext","useBackupStatus","useDBDashboard","useDBDashboardLoading","useActiveDatabase","hash","substring","useExportDatabase","useDeleteDatabase","DBDashboardProvider","databases","setDatabases","isBackupRunning","setBackupRunning","currentBackupId","setCurrentBackupId","databaseName","updatedDatabases","filteredDatabase","DBCollection","buttonStyle","textStyle","rowStyle","handleBackup","onDeleteClick","DBCollectionList","collections","setCollections","updatedCollections","filteredCollection","deleteCollection","DBDatabaseActions","handleDelete","DBPathway","DBControlBar","DBDatabase","onSaveClick","DBDatabaseList","DBContent","currentDb","overflowY","DBSidebar","activeDatabase","MDBContainer","MDBRow","MDBCol","DBDashboard","stopBackup","zIndex","DashboardWrapper","ReactDOM","NewsDashboard","getElementById"],"mappings":"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WAAY,CACV,gBAAiB,YACjB,aAAc,WAGlB,CACErzB,MAAO,SACPyuB,MAAO,UAET,CACEzuB,MAAO,YACPyuB,MAAO,aAET,CACEzuB,MAAO,OACPyuB,MAAO,QAET,CACEzuB,MAAO,cACPyuB,MAAO,eAET,CACEzuB,MAAO,oBACPyuB,MAAO,qBAET,CACEzuB,MAAO,cACPyuB,MAAO,eAET,CACEzuB,MAAO,MACPyuB,MAAO,OAET,CACEzuB,MAAO,WACPyuB,MAAO,YAET,CACEzuB,MAAO,WACPyuB,MAAO,YAET,CACEzuB,MAAO,UACPyuB,MAAO,WAET,CACEzuB,MAAO,SACPyuB,MAAO,UAET,CACEzuB,MAAO,UACPyuB,MAAO,WAET,CACEzuB,MAAO,gBACPyuB,MAAO,iBAET,CACEzuB,MAAO,gBACPyuB,MAAO,iBAET,CACEzuB,MAAO,uBACPyuB,MAAO,wBAET,CACEzuB,MAAO,SACPyuB,MAAO,UAET,CACEzuB,MAAO,UACPyuB,MAAO,WAET,CACEzuB,MAAO,WACPyuB,MAAO,YAET,CACEzuB,MAAO,YACPyuB,MAAO,aAET,CACEzuB,MAAO,mBACPyuB,MAAO,oBAET,CACEzuB,MAAO,gBACPyuB,MAAO,iBAET,CACEzuB,MAAO,MACPyuB,MAAO,OAET,CACEzuB,MAAO,qBACPyuB,MAAO,sBAET,CACEzuB,MAAO,eACPyuB,MAAO,gBAET,CACEzuB,MAAO,qBACPyuB,MAAO,sBAET,CACEzuB,MAAO,oBACPyuB,MAAO,qBAET,CACEzuB,MAAO,oBACPyuB,MAAO,qBAET,CACEzuB,MAAO,aACPyuB,MAAO,cAET,CACEzuB,MAAO,iBACPyuB,MAAO,kBAET,CACEzuB,MAAO,gBACPyuB,MAAO,iBAET,CACEzuB,MAAO,6BACPyuB,MAAO,8BAET,CACEzuB,MAAO,qBACPyuB,MAAO,sBAET,CACEzuB,MAAO,aACPyuB,MAAO,cAET,CACEzuB,MAAO,YACPyuB,MAAO,aAET,CACEzuB,MAAO,uBACPyuB,MAAO,wBAET,CACEzuB,MAAO,mBACPyuB,MAAO,oBAET,CACEzuB,MAAO,cACP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","file":"static/js/main.3df10466.chunk.js","sourcesContent":["/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// nodejs library to set properties for components\r\nimport { PropTypes } from \"prop-types\";\r\n\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\n\r\n// reactstrap components\r\nimport { Nav, NavLink as ReactstrapNavLink } from \"reactstrap\";\r\nimport {\r\n  BackgroundColorContext,\r\n} from \"contexts/BackgroundColorContext\";\r\n\r\nimport { Dropdown } from 'components/Dropdown/Dropdown'\r\n\r\nvar ps;\r\n\r\nfunction Sidebar(props) {\r\n  const history = useHistory();\r\n  const sidebarRef = React.useRef(null);\r\n  const [user] = useState(JSON.parse(localStorage.getItem('user-info')))\r\n  const [userRole, setUserRole] = useState('');\r\n  // verifies if routeName is the one active (in browser input)\r\n  useEffect(() => {\r\n    setUserRole(user?.role)\r\n  }, [])\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps = new PerfectScrollbar(sidebarRef.current, {\r\n        suppressScrollX: true,\r\n        suppressScrollY: false,\r\n      });\r\n    }\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      if (navigator.platform.indexOf(\"Win\") > -1) {\r\n        ps.destroy();\r\n      }\r\n    };\r\n  });\r\n  \r\n  const handleClick = (instance, pathname) => {\r\n    handleInstanceChange(instance)\r\n    const locationState = {\r\n      initInstance: instance\r\n    }\r\n    if (pathname) {\r\n      history.push({\r\n        pathname: pathname,\r\n        state: instance === 'stress_test'\r\n        || instance === 'optimization'\r\n        || instance === 'live_trading'\r\n        ?  locationState: null\r\n      })\r\n    }\r\n  }\r\n\r\n  const { isAdminPage, routes, selectedInstance, handleSidebarChange, handleInstanceChange, subInstance } = props;\r\n  \r\n  return (\r\n    <BackgroundColorContext.Consumer>\r\n      {({ color }) => (\r\n        <div className=\"sidebar hunter-sidebar\" data={color}>\r\n          <div className=\"sidebar-wrapper\" ref={sidebarRef}>\r\n            <div className=\"show-sidebar-button-area\">\r\n              <div className=\"show-sidebar-icon\">\r\n                <i className=\"tim-icons icon-align-left-2\" onClick={handleSidebarChange}/>\r\n              </div>\r\n            </div>\r\n            {isAdminPage ? (\r\n              <Nav>\r\n                {routes.map((prop, key) => {\r\n                  return (\r\n                    <li\r\n                      className={\r\n                        prop.instance === selectedInstance ? \"active-instance hunter-select-instance\" : \"hunter-select-instance\"\r\n                      }\r\n                      key={key}\r\n                      onClick={() => {\r\n                        handleInstanceChange(prop.instance)\r\n                        if (prop.pathname) {\r\n                          history.push({\r\n                            pathname: prop.pathname\r\n                          })\r\n                        }\r\n                      }}\r\n                    >\r\n                      <div\r\n                        className=\"nav-link\"\r\n                      >\r\n                        <i className={prop.icon} />\r\n                        <p>{prop.name}</p>\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </Nav>  \r\n            ) : (\r\n              <Nav>\r\n                {routes.map((prop, key) => {\r\n                  if (!user.is_admin && !userRole.includes(prop.instance)) {\r\n                    return (<></>)\r\n                  }\r\n                  return (\r\n                    <li\r\n                      className={\r\n                        prop.instance === selectedInstance ? \"active-instance hunter-select-instance\" : \"hunter-select-instance\"\r\n                      }\r\n                      key={key}\r\n                    >\r\n                      {prop.items ? (\r\n                        <div\r\n                          className=\"nav-link\"\r\n                        >\r\n                          <Dropdown \r\n                            title={prop.name}\r\n                            icon={prop.icon}\r\n                            items={prop.items}\r\n                            instance={prop.instance}\r\n                            subInstance={subInstance}\r\n                            handleClick={handleClick}\r\n                            isActive={prop.instance === selectedInstance}\r\n                            key={`${prop.instance}`}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <div\r\n                          className=\"nav-link\"\r\n                          onClick={() => {\r\n                            handleInstanceChange(prop.instance)\r\n                            const locationState = {\r\n                              initInstance: prop.instance\r\n                            }\r\n                            if (prop.pathname) {\r\n                              history.push({\r\n                                pathname: prop.pathname,\r\n                                state: prop.instance === 'stress_test'\r\n                                || prop.instance === 'optimization'\r\n                                || prop.instance === 'live_trading'\r\n                                ?  locationState: null\r\n                              })\r\n                            }\r\n                          }}\r\n                        >\r\n                          <i className={prop.icon} />\r\n                          <p className=\"hunter-ml-6\" >{prop.name}</p>\r\n                        </div>\r\n                      )\r\n                    }\r\n                    </li>\r\n                  );\r\n                })}\r\n              </Nav>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </BackgroundColorContext.Consumer>\r\n  );\r\n}\r\n\r\nSidebar.defaultProps = {\r\n  rtlActive: false,\r\n  routes: [{}],\r\n};\r\n\r\nSidebar.propTypes = {\r\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\r\n  // insde the links of this component\r\n  rtlActive: PropTypes.bool,\r\n  routes: PropTypes.arrayOf(PropTypes.object),\r\n  logo: PropTypes.shape({\r\n    // innerLink is for links that will direct the user within the app\r\n    // it will be rendered as <Link to=\"...\">...</Link> tag\r\n    innerLink: PropTypes.string,\r\n    // outterLink is for links that will direct the user outside the app\r\n    // it will be rendered as simple <a href=\"...\">...</a> tag\r\n    outterLink: PropTypes.string,\r\n    // the text of the logo\r\n    text: PropTypes.node,\r\n    // the image src of the logo\r\n    imgSrc: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default Sidebar;\r\n","import { createContext } from \"react\";\r\n\r\nexport const backgroundColors = {\r\n  primary: \"primary\",\r\n  blue: \"blue\",\r\n  green: \"green\",\r\n};\r\n\r\nexport const BackgroundColorContext = createContext({\r\n  color: backgroundColors.blue,\r\n  changeColor: (color) => {},\r\n});\r\n","import { useState } from 'react'\r\n\r\nexport const Dropdown = (props) => {\r\n  const { items, title, icon, instance, handleClick, isActive, subInstance } = props;\r\n  const [isOpen, setOpen] = useState(false);\r\n  const toggleDropdown = () => setOpen(!isOpen);\r\n  \r\n  return (\r\n    <div className='hunter-dropdown'>\r\n      <div className='hunter-dropdown-header' onClick={toggleDropdown}>\r\n        <i className={icon} />\r\n        {title}\r\n        <i className={`fa fa-chevron-right hunter-dropdown-icon icon ${isOpen && \"open\"}`}></i>\r\n      </div>\r\n      <div className={`hunter-dropdown-body ${isOpen && 'open'}`}>\r\n        {items.map(item => (\r\n          <div className={`hunter-dropdown-item ${isActive && item.instance === subInstance && 'hunter-selected'}`}\r\n            onClick={e => {\r\n              handleClick(instance, item.pathname)\r\n            }}\r\n            id={item.id}\r\n            key={`${instance}-${item.id}`}\r\n          >\r\n            {item.label}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}","export var routes = [\r\n  {\r\n    name: \"Admin\",\r\n    icon: \"tim-icons icon-app\",\r\n    instance: \"admin_tab\",\r\n    items: [\r\n      {\r\n        id: 0,\r\n        label: 'Paper Bot Management',\r\n        instance: \"systemfilemanager\",\r\n        pathname: '/botmanagement'\r\n      },\r\n      {\r\n        id: 0,\r\n        label: 'DB Management',\r\n        instance: \"dbmanager\",\r\n        pathname: '/db_management'\r\n      }\r\n    ],\r\n  },\r\n  {\r\n    name: \"Paper Trading\",\r\n    icon: \"tim-icons icon-chart-pie-36\",\r\n    instance: \"forward_test\",\r\n    pathname: '/'\r\n    // items: [\r\n    //   {\r\n    //     id: 0,\r\n    //     label: 'View',\r\n    //     instance: \"view\",\r\n    //     pathname: '/'\r\n    //   }\r\n    // ],\r\n  },\r\n  // {\r\n  //   name: \"Stress test\",\r\n  //   icon: \"tim-icons icon-attach-87\",\r\n  //   instance: \"stress_test\",\r\n  //   items: [\r\n  //     {\r\n  //       id: 0,\r\n  //       label: 'View',\r\n  //       instance: \"view\",\r\n  //       pathname: '/'\r\n  //     }\r\n  //   ],\r\n  // },\r\n  // {\r\n  //   name: \"Optimization\",\r\n  //   icon: \"tim-icons icon-atom\",\r\n  //   instance: \"optimization\",\r\n  //   items: [\r\n  //     {\r\n  //       id: 0,\r\n  //       label: 'View',\r\n  //       instance: \"view\",\r\n  //       pathname: '/optimization'\r\n  //     }\r\n  //   ],\r\n  // },\r\n  {\r\n    name: \"Live trading\",\r\n    icon: \"tim-icons icon-badge\",\r\n    instance: \"live_trading\",\r\n    pathname: '/'\r\n    // items: [\r\n    //   {\r\n    //     id: 0,\r\n    //     label: 'View',\r\n    //     instance: \"view\",\r\n    //     pathname: '/'\r\n    //   }\r\n    // ],\r\n  },\r\n  {\r\n    name: \"Market\",\r\n    icon: \"tim-icons icon-camera-18\",\r\n    instance: \"market_watch\",\r\n    pathname: '/market_watch'\r\n  },\r\n  {\r\n    name: \"Data Tables\",\r\n    icon: \"tim-icons icon-chart-bar-32\",\r\n    instance: \"trade_data\",\r\n    items: [\r\n      {\r\n        id: 0,\r\n        label: 'Price Data Table',\r\n        instance: \"pricedatatable\",\r\n        pathname: '/pricedatatable'\r\n      },\r\n      {\r\n        id: 1,\r\n        label: 'Trade Data Table',\r\n        instance: \"tradedatatable\",\r\n        pathname: '/tradedatatable'\r\n      }\r\n    ],\r\n  },\r\n  {\r\n    name: \"Hybrid View\",\r\n    icon: \"tim-icons icon-video-66\",\r\n    instance: \"hybrid_view\",\r\n    pathname: '/hybrid_view'\r\n  },\r\n  {\r\n    name: \"Financial Data\",\r\n    icon: \"tim-icons icon-coins\",\r\n    instance: \"financial_data\",\r\n    pathname: '/financial_data'\r\n  },\r\n  {\r\n    name: \"Scanner\",\r\n    icon: \"tim-icons icon-controller\",\r\n    instance: \"scanner\",\r\n    pathname: '/scanner'\r\n  },\r\n  {\r\n    name: \"Floats\",\r\n    icon: \"tim-icons icon-vector\",\r\n    instance: \"floats\",\r\n    pathname: '/floats'\r\n  },\r\n  {\r\n    name: \"News\",\r\n    icon: \"tim-icons icon-atom\",\r\n    instance: \"news_data\",\r\n    pathname: '/news_data'\r\n  },\r\n]\r\n\r\nexport var adminRoutes = [\r\n  {\r\n    name: \"User Manage\",\r\n    icon: \"tim-icons icon-chart-pie-36\",\r\n    instance: \"usermanage\",\r\n    pathname: '/admin/usermanage'\r\n  },\r\n  {\r\n    name: \"Link Manage\",\r\n    icon: \"tim-icons icon-attach-87\",\r\n    instance: \"linkmanage\",\r\n    pathname: '/admin/linkmanage'\r\n  },\r\n]\r\n\r\n","import { isNotDefined } from \"react-stockcharts/lib/utils\";\r\n\r\nexport function saveInteractiveNode(chartId) {\r\n\treturn node => {\r\n\t\tthis[`node_${chartId}`] = node;\r\n\t};\r\n}\r\n\r\nexport function handleSelection(type, chartId) {\r\n\treturn selectionArray => {\r\n\t\tconst key = `${type}_${chartId}`;\r\n\t\tconst interactive = this.state[key].map((each, idx) => {\r\n\t\t\treturn {\r\n\t\t\t\t...each,\r\n\t\t\t\tselected: selectionArray[idx]\r\n\t\t\t};\r\n\t\t});\r\n\t\tthis.setState({\r\n\t\t\t[key]: interactive\r\n\t\t});\r\n\t};\r\n}\r\n\r\nexport function saveInteractiveNodes(type, chartId) {\r\n\treturn node => {\r\n\t\tif (isNotDefined(this.interactiveNodes)) {\r\n\t\t\tthis.interactiveNodes = {};\r\n\t\t}\r\n\t\t// const key = `${type}_${chartId}`;\r\n\t\t// // if (isDefined(node) || isDefined(this.interactiveNodes[key])) {\r\n\t\t// // \t// console.error(node, key)\r\n\t\t// // \t// console.log(this.interactiveNodes)\r\n\t\t// // \t// eslint-disable-next-line fp/no-mutation\r\n\t\t// // \tthis.interactiveNodes = {\r\n\t\t// // \t\t...this.interactiveNodes,\r\n\t\t// // \t\t[key]: { type, chartId, node },\r\n\t\t// // \t};\r\n\t\t// }\r\n\t};\r\n}\r\n\r\nexport function getInteractiveNodes() {\r\n\treturn this.interactiveNodes;\r\n}","\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport { format } from \"d3-format\";\r\nimport dayjs from \"dayjs\";\r\nimport { timeFormat } from \"d3-time-format\";\r\n\r\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\r\nimport {\r\n\tBarSeries,\r\n\tCandlestickSeries,\r\n\tStraightLine,\r\n} from \"react-stockcharts/lib/series\";\r\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\r\nimport {\r\n\tCrossHairCursor,\r\n\tMouseCoordinateX,\r\n\tMouseCoordinateY,\r\n} from \"react-stockcharts/lib/coordinates\";\r\n\r\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\r\nimport {\r\n\tOHLCTooltip,\r\n\tToolTipText,\r\n\tSingleValueTooltip,\r\n} from \"react-stockcharts/lib/tooltip\";\r\nimport { atr, ema, macd, heikinAshi } from \"react-stockcharts/lib/indicator\";\r\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\r\nimport { DrawingObjectSelector } from \"react-stockcharts/lib/interactive\";\r\nimport { last, toObject } from \"react-stockcharts/lib/utils\";\r\nimport {\r\n\tsaveInteractiveNodes,\r\n\tgetInteractiveNodes,\r\n} from \"../Interactiveutils\";\r\nimport {\r\n\tAnnotate,\r\n\tSvgPathAnnotation,\r\n\tbuyPath,\r\n\tsellPath,\r\n} from \"react-stockcharts/lib/annotation\";\r\n\r\nconst rsiAppearance = {\r\n\tstroke: {\r\n\t\tmacd: \"#FF0000\",\r\n\t\tsignal: \"#00F300\",\r\n\t},\r\n\tfille: {\r\n\t\tbearPower: \"#4682B4\"\r\n\t}\r\n};\r\n\r\n// common stock chart\r\nclass CandleStickChartWithEquidistantChannel extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.addTextLable = this.addTextLable.bind(this);\r\n\t\tthis.onKeyPress = this.onKeyPress.bind(this);\r\n\t\tthis.onDrawComplete = this.onDrawComplete.bind(this);\r\n\t\tthis.saveInteractiveNode = this.saveInteractiveNode.bind(this);\r\n\t\tthis.saveCanvasNode = this.saveCanvasNode.bind(this);\r\n\t\tthis.handleSelection = this.handleSelection.bind(this);\r\n\t\t\r\n\t\tthis.saveInteractiveNodes = saveInteractiveNodes.bind(this);\r\n\t\tthis.getInteractiveNodes = getInteractiveNodes.bind(this);\r\n\r\n\t\tthis.state = {\r\n\t\t\tenableInteractiveObject: true,\r\n\t\t\tx: -200,\r\n      \t\ty: -200,\r\n\t\t\tchannels_1: [],\r\n\t\t\tchannels_3: [],\r\n\t\t\tvalueText: \"\",\r\n      \t\tdateText: \"\",\r\n\t\t\tstatus: '',\r\n\t\t\tisFullChart: false,\r\n\t\t};\r\n\t}\r\n\tsaveInteractiveNode(node) {\r\n\t\tthis.node = node;\r\n\t}\r\n\tsaveCanvasNode(node) {\r\n\t\tthis.canvasNode = node;\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tdocument.addEventListener(\"keyup\", this.onKeyPress);\r\n\t\tthis.canvasNode.subscribe(\"CandleStickChartWithEquidistantChannel\", { listener: this.handleEvents });\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tthis.canvasNode.unsubscribe(\"CandleStickChartWithEquidistantChannel\");\r\n\t\tdocument.removeEventListener(\"keyup\", this.onKeyPress);\r\n\t}\r\n\r\n\thandleEvents = (type) => {\r\n\t\tif (type === \"zoom\") {\r\n\t\t  this.handleZoom();\r\n\t\t}\r\n\t\tif (type === \"mousedown\") {\r\n\t\t  this.hideTextLabel();\r\n\t\t}\r\n\t};\r\n\r\n\thandleZoom() {\r\n\t\tif (this.state.x !== -200 && this.state.y !== -200) {\r\n\t\t  this.hideTextLabel();\r\n\t\t}\r\n\t}\r\n\r\n\thideTextLabel() {\r\n\t\tthis.setState({\r\n\t\t  x: -200,\r\n\t\t  y: -200\r\n\t\t});\r\n\t}\r\n\r\n\taddTextLable(e) {\r\n\t\tconst formatter = new Intl.DateTimeFormat(\"en\", { month: \"short\" });\r\n\t\tconst formatterW = new Intl.DateTimeFormat(\"en\", { weekday: \"long\" });\r\n\t\tconst month2 = formatter.format(e.datum.date);\r\n\t\tconst week2 = formatterW.format(e.datum.date);\r\n\t\tconst dateElem = `${week2}, ${month2} ${e.datum.date.getDate()}, ${e.datum.date.getFullYear()}`;\r\n\t\tthis.setState({\r\n\t\t\tx: 500,\r\n\t\t\ty: 30,\r\n\t\t\tvalueText: e.datum.high,\r\n\t\t\tdateText: dateElem,\r\n\t\t\tstatus: e.datum.action,\r\n\t\t});\r\n\t}\r\n\r\n\thandleSelection(interactives) {\r\n\t\tconst state = toObject(interactives, each => {\r\n\t\t\treturn [\r\n\t\t\t\t`channels_${each.chartId}`,\r\n\t\t\t\teach.objects,\r\n\t\t\t];\r\n\t\t});\r\n\t\tthis.setState(state);\r\n\t}\r\n\r\n\tisIncludeIndicators(indicator) {\r\n\t\tif (this.props.indicators) {\r\n\t\t\treturn this.props.indicators.filter((e) => e.value === indicator).length;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tonDrawComplete(channels_1) {\r\n\t\tthis.setState({\r\n\t\t\tenableInteractiveObject: false,\r\n\t\t\tchannels_1\r\n\t\t});\r\n\t}\r\n\tonKeyPress(e) {\r\n\t\tconst keyCode = e.which;\r\n\t\tconsole.log(keyCode);\r\n\t\tswitch (keyCode) {\r\n\t\t\tcase 46: { // DEL\r\n\t\t\t\tconst channels_1 = this.state.channels_1\r\n\t\t\t\t\t.filter(each => !each.selected);\r\n\t\t\t\tconst channels_3 = this.state.channels_3\r\n\t\t\t\t\t.filter(each => !each.selected);\r\n\r\n\t\t\t\tthis.canvasNode.cancelDrag();\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tchannels_1,\r\n\t\t\t\t\tchannels_3,\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 27: { // ESC\r\n\t\t\t\tthis.node.terminate();\r\n\t\t\t\tthis.canvasNode.cancelDrag();\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tenableInteractiveObject: false\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 68:   // D - Draw drawing object\r\n\t\t\tcase 69: { // E - Enable drawing object\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tenableInteractiveObject: true\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault: {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcalculateHeight (isFullChart) {\r\n\t\tif (this.props.isHomePage && !isFullChart) {\r\n\t\t\treturn 400;\r\n\t\t}\r\n\t\tlet index = 1\r\n\t\tif (this.props.indicators) {\r\n\t\t\tif (this.props.indicators.length > 1) {\r\n\t\t\t\tindex = this.props.indicators.length\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn 500 + index * 100\r\n\t}\r\n\r\n\tcalculateOffset (indicator, isFullChart) {\r\n\t\tif (!this.props.isHomePage || isFullChart) {\r\n\t\t\tif (indicator === 'rsi1') {\r\n\t\t\t\tconst filter = this.props.indicators.filter(indicator => ['rsi2', 'rsi3', 'heik', 'heik_diff'].includes(indicator.value))\r\n\t\t\t\treturn 300 + filter.length * 70;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (indicator === 'rsi2') {\r\n\t\t\t\tconst filter = this.props.indicators.filter(indicator => ['rsi3', 'heik', 'heik_diff'].includes(indicator.value))\r\n\t\t\t\treturn 300 + filter.length * 70;\r\n\t\t\t}\r\n\r\n\t\t\tif (indicator === 'rsi3') {\r\n\t\t\t\tconst filter = this.props.indicators.filter(indicator => ['heik', 'heik_diff'].includes(indicator.value))\r\n\t\t\t\treturn 300 + filter.length * 70;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (indicator === 'heik') {\r\n\t\t\t\tconst filter = this.props.indicators.filter(indicator => ['heik_diff'].includes(indicator.value))\r\n\t\t\t\treturn 300 + filter.length * 70;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (indicator === 'heik_diff') {\r\n\t\t\t\tconst filter = this.props.indicators.filter(indicator => [''].includes(indicator.value))\r\n\t\t\t\treturn 300 + filter.length * 70;\r\n\t\t\t}\r\n\t\t\treturn 0\t\r\n\t\t}\r\n\t\tif (indicator === 'rsi1') {\r\n\t\t\tif (this.isIncludeIndicators(indicator)) {\r\n\t\t\t\tif (this.isIncludeIndicators('volume')) {\r\n\t\t\t\t\tif (this.props.indicators.length > 1) {\r\n\t\t\t\t\t\treturn (this.props.indicators.length-1) * 50 + 50\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 80;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this.props.indicators.length > 1) {\r\n\t\t\t\t\t\treturn (this.props.indicators.length) * 50 + 50\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 80;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (indicator === 'heik') {\r\n\t\t\tif (this.isIncludeIndicators(indicator)) {\r\n\t\t\t\tif (this.isIncludeIndicators('heik_diff')) {\r\n\t\t\t\t\treturn 130;\r\n\t\t\t\t}\r\n\t\t\t\treturn 80;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (indicator === 'heik_diff') {\r\n\t\t\treturn 60;\r\n\t\t}\r\n\r\n\t\treturn 10\r\n\t}\r\n\r\n\tcalculateMainHeightOffset(isFullChart) {\r\n\t\tif (this.props.isHomePage && !isFullChart) {\r\n\t\t\treturn 100 + (this.props.indicators.length - 1) * 50\r\n\t\t}\r\n\t\tif ( this.props.indicators ) {\r\n\t\t\tif (this.props.indicators.length > 1) {\r\n\t\t\t\treturn 300 + (this.props.indicators.length - 1) * 100\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn 300\r\n\t}\r\n\r\n\tcalculateTooltipOffset0(isFullChart) {\r\n\t\treturn 0;\r\n\t\t// if (!this.props.isHomePage || isFullChart) {\r\n\t\t// \treturn 0;\r\n\t\t// }\r\n\t\t// if ( this.props.indicators ) {\r\n\t\t// \tif (this.props.indicators.length > 1) {\r\n\t\t// \t\treturn 0\r\n\t\t// \t}\r\n\t\t// }\r\n\t\t// return 0\r\n\t}\r\n\t\r\n\tcalculateTooltipOffset1(isFullChart) {\r\n\t\treturn 0;\r\n\t\t// if (!this.props.isHomePage || isFullChart) {\r\n\t\t// \treturn 0;\r\n\t\t// }\r\n\t\t// if ( this.props.indicators ) {\r\n\t\t// \tif (this.props.indicators.length > 1) {\r\n\t\t// \t\treturn 0\r\n\t\t// \t}\r\n\t\t// }\r\n\t\t// return 0\r\n\t}\r\n\r\n\t// computeAnnotation(dateLine) {\r\n\t// \tconst deal = this.props.deals.filter(\r\n\t// \t\tdealLine => {\r\n\t// \t\t\treturn dateLine.date.getTime() === dealLine.ddate.getTime()\r\n\t// \t\t}\r\n\t// \t\t);\r\n\t\t\t\r\n\t// \tif (deal.length > 0) {\r\n\t// \t\treturn deal[0].action;\r\n\t// \t}\r\n\t// }\r\n\r\n\trender() {\r\n\r\n\t\tconst ema20 = ema()\r\n\t\t\t.id(0)\r\n\t\t\t.options({ windowSize: 13 })\r\n\t\t\t.merge((d, c) => { d.ema20 = c; })\r\n\t\t\t.accessor(d => d.ema20);\r\n\r\n\t\tconst ema50 = ema()\r\n\t\t\t.id(2)\r\n\t\t\t.options({ windowSize: 50 })\r\n\t\t\t.merge((d, c) => { d.ema50 = c; })\r\n\t\t\t.accessor(d => d.ema50);\r\n\r\n\t\t\r\n\t\t// const longFillProps = {\r\n\t\t// \tstroke: \"#22a46e\",\r\n\t\t// \tfill: \"#22a46e\",\r\n\t\t// \tclassName: this.props.classes.deal_green_shadowed\r\n\t\t//   };\r\n\t  \r\n\t\t//   const shortFillProps = {\r\n\t\t// \tstroke: \"#cc4060\",\r\n\t\t// \tfill: \"#cc4060\",\r\n\t\t// \tclassName: this.props.classes.deal_red_shadowed\r\n\t\t//   };\r\n\t  \r\n\t\t//   const fontProps = {\r\n\t\t// \tfontFamily: \"Material Icons\",\r\n\t\t// \tfontSize: 24,\r\n\t\t// \tfontWeight: \"normal\",\r\n\t\t// \topacity: 1,\r\n\t\t// \tonClick: this.addTextLable\r\n\t\t//   };\r\n\t  \r\n\t\t// const yOpenProps = {\r\n\t\t// y: ({ yScale, datum }) => yScale(datum.high * 1.04 - 100)\r\n\t\t// };\r\n\t  \r\n\t\t// const yCloseProps = {\r\n\t\t// y: ({ yScale, datum }) => yScale(datum.high * 1.04 - 100)\r\n\t\t// };\r\n\t  \r\n\t\t// const buyTooltipProps = {\r\n\t\t// \ttooltip: (o) => {\r\n\t\t// \t\treturn `Buy: ${o.date} \\n Price: ${o.price}`\r\n\t\t// \t}\r\n\t\t// }\r\n\t\t\r\n\t\t// const sellTooltipProps = {\r\n\t\t// \ttooltip: (o) => {\r\n\t\t// \t\treturn `Sell: ${o.date}\\nPrice: ${o.price}`\r\n\t\t// \t}\r\n\t\t// }\r\n\r\n\t\t// const buy = {\r\n\t\t// \t...longFillProps,\r\n\t\t// \t...fontProps,\r\n\t\t// \t...yOpenProps,\r\n\t\t// \ttext: \"\\u25B2\",\r\n\t\t// \t...buyTooltipProps,\r\n\t\t// \trotate: 180\r\n\t\t// };\r\n\t  \r\n\t\t//   const sell = {\r\n\t\t// \t...shortFillProps,\r\n\t\t// \t...fontProps,\r\n\t\t// \t...yCloseProps,\r\n\t\t// \t...sellTooltipProps,\r\n\t\t// \ttext: \"\\u25B2\",\r\n\t\t// \trotate: 180\r\n\t\t// };\r\n\r\n\t\tconst ha = heikinAshi();\r\n\t\t\r\n\t\tconst macdCalculator = macd()\r\n\t\t\t.options({\r\n\t\t\t\tfast: 12,\r\n\t\t\t\tslow: 26,\r\n\t\t\t\tsignal: 9,\r\n\t\t\t})\r\n\t\t\t.merge((d, c) => { d.macd = c; })\r\n\t\t\t.accessor(d => d.macd);\r\n\r\n\t\tconst atr14 = atr()\r\n\t\t.options({ windowSize: 14 })\r\n\t\t.merge((d, c) => {d.atr14 = c;})\r\n\t\t.accessor(d => d.atr14);\t\r\n\r\n\t\tconst { type, data: initialData, width, ratio, chartColumn, extendMarketTime } = this.props;\r\n\r\n\t\tconst isFullChart = (chartColumn === 1 || chartColumn === 2);\r\n\r\n\t\tinitialData.forEach(line => {\r\n\t\t\tline.date = dayjs(line.date).toDate();\r\n\t\t  });\r\n\r\n\t\t// const margin = { left: 80, right: 80, top: 30, bottom: 50 };  \r\n\r\n\t\t// const height = 400;\r\n\r\n\t\t// const [yAxisLabelX, yAxisLabelY] = [width - margin.left - 40, margin.top + (height - margin.top - margin.bottom) / 2];\r\n\t\t\r\n\t\tconst calculatedData = macdCalculator((ha(atr14(initialData))));\r\n\t\t\r\n\t\tconst xScaleProvider = discontinuousTimeScaleProvider\r\n\t\t\t.inputDateAccessor(d => d.date);\r\n\t\tconst {\r\n\t\t\tdata,\r\n\t\t\txScale,\r\n\t\t\txAccessor,\r\n\t\t\tdisplayXAccessor,\r\n\t\t} = xScaleProvider(calculatedData);\r\n\r\n\r\n\t\tconst defaultAnnotationProps = {\r\n\t\t\tonClick: console.log.bind(console),\r\n\t\t};\r\n\r\n\t\tconst longAnnotationProps = {\r\n\t\t\t...defaultAnnotationProps,\r\n\t\t\ty: ({ yScale, datum }) => { return yScale(datum.low) - this.calculateTooltipOffset0(isFullChart) },\r\n\t\t\tfill: \"#006517\",\r\n\t\t\tpath: buyPath,\r\n\t\t\ttooltip: (e) => {\r\n\t\t\t\tconst contents = e.trades.map((trade) => `${trade.longShort === 'LONG' ? 'Buy:' : 'Sell:'} Price: ${trade.price} Date: ${trade.trade_date.replace('T', ' ')}\\n`)\r\n\t\t\t\treturn contents\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst shortAnnotationProps = {\r\n\t\t\t...defaultAnnotationProps,\r\n\t\t\ty: ({ yScale, datum }) => { return yScale(datum.high) - this.calculateTooltipOffset1(isFullChart)},\r\n\t\t\tfill: \"#FF0000\",\r\n\t\t\tpath: sellPath,\r\n\t\t\ttooltip: (e) => {\r\n\t\t\t\tconst contents = e.trades.map((trade) => `${trade.longShort === 'LONG' ? 'Buy:' : 'Sell:'} Price: ${trade.price} Trade Date: ${trade.trade_date.replace('T', ' ')}\\n`)\r\n\t\t\t\treturn contents\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst start = xAccessor(last(data));\r\n\t\t// const periodIndex = this.props.period === 'heikfilter-2mins-trades' \r\n\t\t// \t? 15\r\n\t\t// \t: this.props.period === 'heikfilter-12mins-trades'\r\n\t\t// \t? 30\r\n\t\t// \t: this.props.period === 'heikfilter-1hour-trades'\r\n\t\t// \t? 90\r\n\t\t// \t: this.props.period === 'heikfilter-4hours-trades'\r\n\t\t// \t? 200\r\n\t\t// \t: this.props.period === 'heikfilter-12hours-trades'\r\n\t\t// \t? 200 : 1000\r\n\t\t\r\n\t\t// const end = xAccessor(data[Math.max(0, data.length - periodIndex)]);\r\n\t\tconst end = xAccessor(data[Math.max(0, data.length - 150)]);\r\n\t\tconst xExtents = [start, end];\r\n\t\t// const xExtents = [\r\n\t\t// \tthis.props.data[0].date,\r\n\t\t// \tthis.props.data[this.props.data.length-1].date\r\n\t\t// ];\r\n\t\t// console.log(\"xExtents\", last(data).date, data[Math.max(0, data.length - 150)].date)\r\n\t\t// console.log(\"xExtents1\", this.props.data[0].date, this.props.data[this.props.data.length - 1].date)\r\n\t\t\r\n\t\tconst xDisplayFormatProps = {\r\n\t\t\txDisplayFormat: timeFormat(\"%Y-%m-%d : %H-%M-%S\"),\r\n\t\t\tohlcFormat: () => \"\",\r\n\t\t\tvolumeFormat: () => \"\",\r\n\t\t\tpercentFormat: () => \"\",\r\n\t\t\tdisplayTexts: {\r\n\t\t\t\td: \"Date: \",\r\n\t\t\t},\r\n\r\n\t\t}\r\n\t\tconst xDisplayFormatProps1 = {\r\n\t\t\txDisplayFormat: timeFormat(\"\"),\r\n\t\t\tdisplayTexts: {\r\n\t\t\t\to: \" O: \",\r\n\t\t\t\th: \" H: \",\r\n\t\t\t\tl: \" L: \",\r\n\t\t\t\tc: \" C: \",\r\n\t\t\t\tv: \" Vol: \",\r\n\t\t\t\tna: \"n/a\"\r\n\t\t\t},\r\n\t\t}\r\n\t\tconst xDisplayFormatProps2 = {\r\n\t\t\txDisplayFormat: timeFormat(\"\"),\r\n\t\t\tohlcFormat: () => \"\",\r\n\t\t\tvolumeFormat: () => this.props.symbol,\r\n\t\t\tpercentFormat: () => \"\",\r\n\t\t\tdisplayTexts: {\r\n\t\t\t\tv: \" Symbol: \",\r\n\t\t\t},\r\n\t\t}\r\n\t\t\r\n\t\tconst SMATooltipProps = {\r\n\t\t\tvalueFill: '#ffffff'\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<ChartCanvas\r\n\t\t\t\theight={this.calculateHeight(isFullChart)}\r\n\t\t\t\twidth={width}\r\n\t\t\t\tratio={ratio}\r\n\t\t\t\tmargin={{ left: 70, right: 70, top: 20, bottom: 30 }}\r\n\t\t\t\ttype={type}\r\n\t\t\t\tseriesName=\"MSFT\"\r\n\t\t\t\tdata={data}\r\n\t\t\t\txExtents={xExtents}\r\n\t\t\t\txScale={xScale}\r\n\t\t\t\tdisplayXAccessor={displayXAccessor}\r\n\t\t\t\txAccessor={xAccessor}\r\n\t\t\t\tref={node => {\r\n\t\t\t\t\tthis.canvasNode = node;\r\n\t\t\t\t}}\r\n\t\t\t\tredraw={true}\r\n\t\t\t>\r\n\t\t\t\t<Chart id={1}\r\n\t\t\t\t\theight={\r\n\t\t\t\t\t\t(!this.props.isHomePage || isFullChart)\r\n\t\t\t\t\t\t? this.isIncludeIndicators('volume') || this.props.indicators.length ? 250 : 400\r\n\t\t\t\t\t\t: 300 - this.props.indicators.length * 50\r\n\t\t\t\t\t}\r\n\t\t\t\t\tyExtents={[d => [d.high, d.low], ema20.accessor(), ema50.accessor()]}\r\n\t\t\t\t\tpadding={{ top: 10, bottom: 20 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"  stroke=\"white\" tickStroke=\"white\" />\r\n\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} stroke=\"white\" tickStroke=\"white\" />\r\n\r\n\t\t\t\t\t<MouseCoordinateX\r\n\t\t\t\t\t\tat=\"bottom\"\r\n\t\t\t\t\t\torient=\"bottom\"\r\n\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\r\n\t\t\t\t\t<MouseCoordinateY\r\n\t\t\t\t\t\tat=\"right\"\r\n\t\t\t\t\t\torient=\"right\"\r\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\r\n\r\n\t\t\t\t\t<CandlestickSeries \r\n\t\t\t\t\t\tstroke={d => d.close > d.open ? \"#6BA583\" : \"#DB0000\"}\r\n\t\t\t\t\t\twickStroke={d => d.close > d.open ? \"#6BA583\" : \"#DB0000\"}\r\n\t\t\t\t\t\tfill={d => d.close > d.open ? \"#6BA583\" : \"#DB0000\"}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<OHLCTooltip \r\n\t\t\t\t\t\torigin={[-50, -10]}\r\n\t\t\t\t\t\t{...xDisplayFormatProps}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<OHLCTooltip \r\n\t\t\t\t\t\torigin={[-50, 20]}\r\n\t\t\t\t\t\t{...xDisplayFormatProps1}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<OHLCTooltip \r\n\t\t\t\t\t\torigin={[100, -5]}\r\n\t\t\t\t\t\t{...xDisplayFormatProps2}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Annotate with={SvgPathAnnotation} when={ d => \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn this.props.selectedInstance !== 'live_trading'  \r\n\t\t\t\t\t\t\t&& d.trades\r\n\t\t\t\t\t\t\t&& d.trades[0].strategy === `${this.props.strategy.value}-${this.props.microStrategy}-trades`\r\n\t\t\t\t\t\t\t&& d.trades[0].longShort === \"LONG\" \r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tusingProps={longAnnotationProps} />\r\n\t\t\t\t\t<Annotate with={SvgPathAnnotation} when={d => \r\n\t\t\t\t\t\tthis.props.selectedInstance !== 'live_trading' \r\n\t\t\t\t\t\t&& d.trades\r\n\t\t\t\t\t\t&& d.trades[0].strategy === `${this.props.strategy.value}-${this.props.microStrategy}-trades`\r\n\t\t\t\t\t\t&& d.trades[0].longShort === \"SHORT\" }\r\n\t\t\t\t\t\tusingProps={shortAnnotationProps} />\r\n\r\n\t\t\t\t</Chart>\r\n\t\t\t\t{this.isIncludeIndicators('volume') && (\r\n\t\t\t\t\t<Chart id={2} height={(!this.props.isHomePage || isFullChart) ? 100 : 50}\r\n\t\t\t\t\t\tyExtents={[d => d.volume]}\r\n\t\t\t\t\t\torigin={(w, h) => [0, h - this.calculateMainHeightOffset(isFullChart)]}\r\n\t\t\t\t\t\tpadding={{ top: 10, bottom: 10 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" stroke=\"white\" tickStroke=\"white\" />\r\n\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} tickFormat={format(\".2s\")} stroke=\"white\" tickStroke=\"white\" />\r\n\r\n\t\t\t\t\t\t<MouseCoordinateY\r\n\t\t\t\t\t\t\tat=\"left\"\r\n\t\t\t\t\t\t\torient=\"left\"\r\n\t\t\t\t\t\t\tdisplayFormat={format(\".4s\")} />\r\n\r\n\t\t\t\t\t\t<BarSeries yAccessor={d => d.volume} fill={d => d.close > d.open ? \"#6BA583\" : \"#FF0000\"} />\r\n\t\t\t\t\t</Chart>\r\n\t\t\t\t)}\r\n\t\t\t\t{this.isIncludeIndicators('rsi1') && (\r\n\t\t\t\t\t<Chart id={3} \r\n\t\t\t\t\t\t// height={(!this.props.isHomePage || isFullChart) ? 100 : 70}\r\n\t\t\t\t\t\theight={70}\r\n\t\t\t\t\t\tyExtents={[0, d => d.rsi.bearPower]}\r\n\t\t\t\t\t\torigin={(w, h) => [0, h - this.calculateOffset('rsi1', isFullChart)]}\r\n\t\t\t\t\t\tpadding={{ top: 40, bottom: 10 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" stroke=\"white\" tickStroke=\"white\" />\r\n\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" stroke=\"white\" tickStroke=\"white\" ticks={4} tickFormat={format(\".2f\")}/>\r\n\t\t\t\t\t\t<MouseCoordinateX\r\n\t\t\t\t\t\t\tat=\"bottom\"\r\n\t\t\t\t\t\t\torient=\"bottom\"\r\n\t\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\r\n\t\t\t\t\t\t<MouseCoordinateY\r\n\t\t\t\t\t\t\tat=\"right\"\r\n\t\t\t\t\t\t\torient=\"right\"\r\n\t\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\r\n\t\t\t\t\t\t<BarSeries\r\n\t\t\t\t\t\t\tyAccessor={d => d.rsi.bearPower}\r\n\t\t\t\t\t\t\tbaseAt={(xScale, yScale, d) => yScale(0)}\r\n\t\t\t\t\t\t\tfill={d => d.rsi.side === 'buy' ? '#800080' : d.rsi.side === 'sell' ? '#FFA500' : d.rsi.side === 'hold' ? '#00FF00' : '#FF0000'} />\r\n\t\t\t\t\t\t<StraightLine yValue={0} />\r\n\r\n\t\t\t\t\t\t<SingleValueTooltip\r\n\t\t\t\t\t\t\tyAccessor={d => d.rsi.bearPower}\r\n\t\t\t\t\t\t\tyLabel=\"RSI - Bear power\"\r\n\t\t\t\t\t\t\tyDisplayFormat={format(\".2f\")}\r\n\t\t\t\t\t\t\tappearance={rsiAppearance}\r\n\t\t\t\t\t\t\t{...SMATooltipProps}\r\n\t\t\t\t\t\t\torigin={[-40, 35]}/>\r\n\t\t\t\t\t</Chart>\r\n\t\t\t\t)}\r\n\t\t\t\t{this.isIncludeIndicators('rsi2') && (\r\n\t\t\t\t\t<Chart id={4} \r\n\t\t\t\t\t\t// height={(!this.props.isHomePage || isFullChart) ? 100 : 70}\r\n\t\t\t\t\t\theight={70}\r\n\t\t\t\t\t\tyExtents={[0, d => d.rsi2.bearPower]}\r\n\t\t\t\t\t\torigin={(w, h) => [0, h - this.calculateOffset('rsi2', isFullChart)]}\r\n\t\t\t\t\t\tpadding={{ top: 40, bottom: 10 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" stroke=\"white\" tickStroke=\"white\" />\r\n\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" stroke=\"white\" tickStroke=\"white\" ticks={4} tickFormat={format(\".2f\")}/>\r\n\t\t\t\t\t\t<MouseCoordinateX\r\n\t\t\t\t\t\t\tat=\"bottom\"\r\n\t\t\t\t\t\t\torient=\"bottom\"\r\n\t\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\r\n\t\t\t\t\t\t<MouseCoordinateY\r\n\t\t\t\t\t\t\tat=\"right\"\r\n\t\t\t\t\t\t\torient=\"right\"\r\n\t\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\r\n\t\t\t\t\t\t<BarSeries\r\n\t\t\t\t\t\t\tyAccessor={d => d.rsi2.bearPower}\r\n\t\t\t\t\t\t\tbaseAt={(xScale, yScale, d) => yScale(0)}\r\n\t\t\t\t\t\t\tfill={d => \r\n\t\t\t\t\t\t\t\td.rsi2.color === 'l_g' ? '#90EE90' : d.rsi2.color === 'd_g' ? '#006400' : d.rsi2.color === 'l_r' ? '#ED0800' : '#8B0000'\r\n\t\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t<StraightLine yValue={0} />\r\n\r\n\t\t\t\t\t\t<SingleValueTooltip\r\n\t\t\t\t\t\t\tyAccessor={d => d.rsi2.bearPower}\r\n\t\t\t\t\t\t\tyLabel=\"RSI2 - Bear power\"\r\n\t\t\t\t\t\t\tyDisplayFormat={format(\".2f\")}\r\n\t\t\t\t\t\t\tappearance={rsiAppearance}\r\n\t\t\t\t\t\t\t{...SMATooltipProps}\r\n\t\t\t\t\t\t\torigin={[-40, 35]}/>\r\n\t\t\t\t\t</Chart>\r\n\t\t\t\t)}\r\n\t\t\t\t{this.isIncludeIndicators('rsi3') && (\r\n\t\t\t\t\t<Chart id={5} \r\n\t\t\t\t\t\t// height={(!this.props.isHomePage || isFullChart) ? 100 : 70}\r\n\t\t\t\t\t\theight={70}\r\n\t\t\t\t\t\tyExtents={[0, d => d.rsi3.bearPower]}\r\n\t\t\t\t\t\torigin={(w, h) => [0, h - this.calculateOffset('rsi3', isFullChart)]}\r\n\t\t\t\t\t\tpadding={{ top: 40, bottom: 10 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" stroke=\"white\" tickStroke=\"white\" />\r\n\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" stroke=\"white\" tickStroke=\"white\" ticks={4} tickFormat={format(\".2f\")}/>\r\n\t\t\t\t\t\t<MouseCoordinateX\r\n\t\t\t\t\t\t\tat=\"bottom\"\r\n\t\t\t\t\t\t\torient=\"bottom\"\r\n\t\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\r\n\t\t\t\t\t\t<MouseCoordinateY\r\n\t\t\t\t\t\t\tat=\"right\"\r\n\t\t\t\t\t\t\torient=\"right\"\r\n\t\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\r\n\t\t\t\t\t\t<BarSeries\r\n\t\t\t\t\t\t\tyAccessor={d => d.rsi3.bearPower}\r\n\t\t\t\t\t\t\tbaseAt={(xScale, yScale, d) => yScale(0)}\r\n\t\t\t\t\t\t\tfill={d => \r\n\t\t\t\t\t\t\t\td.rsi3.color === 'l_g' ? '#90EE90' : d.rsi3.color === 'd_g' ? '#006400' : d.rsi3.color === 'l_r' ? '#ED0800' : '#8B0000'\r\n\t\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t<StraightLine yValue={0} />\r\n\r\n\t\t\t\t\t\t<SingleValueTooltip\r\n\t\t\t\t\t\t\tyAccessor={d => d.rsi3.bearPower}\r\n\t\t\t\t\t\t\tyLabel=\"RSI3 - Bear power\"\r\n\t\t\t\t\t\t\tyDisplayFormat={format(\".2f\")}\r\n\t\t\t\t\t\t\tappearance={rsiAppearance}\r\n\t\t\t\t\t\t\t{...SMATooltipProps}\r\n\t\t\t\t\t\t\torigin={[-40, 35]}/>\r\n\t\t\t\t\t</Chart>\r\n\t\t\t\t)}\r\n\t\t\t\t{this.isIncludeIndicators('heik') && (\r\n\t\t\t\t\t<Chart id={6} \r\n\t\t\t\t\t\t// height={(!this.props.isHomePage || isFullChart) ? 100 : 70}\r\n\t\t\t\t\t\theight={70}\r\n\t\t\t\t\t\tyExtents={[0, d => d.heik.bearPower]}\r\n\t\t\t\t\t\torigin={(w, h) => [0, h - this.calculateOffset('heik', isFullChart)]}\r\n\t\t\t\t\t\tpadding={{ top: 40, bottom: 10 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" stroke=\"white\" tickStroke=\"white\" />\r\n\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" stroke=\"white\" tickStroke=\"white\" ticks={4} tickFormat={format(\".2f\")}/>\r\n\t\t\t\t\t\t<MouseCoordinateX\r\n\t\t\t\t\t\t\tat=\"bottom\"\r\n\t\t\t\t\t\t\torient=\"bottom\"\r\n\t\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\r\n\t\t\t\t\t\t<MouseCoordinateY\r\n\t\t\t\t\t\t\tat=\"right\"\r\n\t\t\t\t\t\t\torient=\"right\"\r\n\t\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\r\n\t\t\t\t\t\t<BarSeries\r\n\t\t\t\t\t\t\tyAccessor={d => d.heik.bearPower}\r\n\t\t\t\t\t\t\tbaseAt={(xScale, yScale, d) => yScale(0)}\r\n\t\t\t\t\t\t\tfill={d => \r\n\t\t\t\t\t\t\t\td.heik.color === 'l_g' ? '#90EE90' : d.heik.color === 'd_g' ? '#006400' : d.heik.color === 'l_r' ? '#ED0800' : '#8B0000'\r\n\t\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t<StraightLine yValue={0} />\r\n\r\n\t\t\t\t\t\t<SingleValueTooltip\r\n\t\t\t\t\t\t\tyAccessor={d => d.heik.bearPower}\r\n\t\t\t\t\t\t\tyLabel=\"HEIK1 - Bear power\"\r\n\t\t\t\t\t\t\tyDisplayFormat={format(\".2f\")}\r\n\t\t\t\t\t\t\tappearance={rsiAppearance}\r\n\t\t\t\t\t\t\t{...SMATooltipProps}\r\n\t\t\t\t\t\t\torigin={[-40, 35]}/>\r\n\t\t\t\t\t</Chart>\r\n\t\t\t\t)}\r\n\t\t\t\t{this.isIncludeIndicators('heik_diff') && (\r\n\t\t\t\t\t<Chart id={7} \r\n\t\t\t\t\t\t// height={(!this.props.isHomePage || isFullChart) ? 100 : 70}\r\n\t\t\t\t\t\theight={70}\r\n\t\t\t\t\t\tyExtents={[0, d => d.heik2.bearPower]}\r\n\t\t\t\t\t\torigin={(w, h) => [0, h - this.calculateOffset('heik_diff', isFullChart)]}\r\n\t\t\t\t\t\tpadding={{ top: 40, bottom: 10 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" stroke=\"white\" tickStroke=\"white\" />\r\n\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" stroke=\"white\" tickStroke=\"white\" ticks={4} tickFormat={format(\".2f\")}/>\r\n\t\t\t\t\t\t<MouseCoordinateX\r\n\t\t\t\t\t\t\tat=\"bottom\"\r\n\t\t\t\t\t\t\torient=\"bottom\"\r\n\t\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\r\n\t\t\t\t\t\t<MouseCoordinateY\r\n\t\t\t\t\t\t\tat=\"right\"\r\n\t\t\t\t\t\t\torient=\"right\"\r\n\t\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\r\n\t\t\t\t\t\t<BarSeries\r\n\t\t\t\t\t\t\tyAccessor={d => d.heik2.bearPower}\r\n\t\t\t\t\t\t\tbaseAt={(xScale, yScale, d) => yScale(0)}\r\n\t\t\t\t\t\t\tfill={d => \r\n\t\t\t\t\t\t\t\td.heik2.color === 'l_g' ? '#90EE90' : d.heik2.color === 'd_g' ? '#006400' : d.heik2.color === 'l_r' ? '#ED0800' : '#8B0000'\r\n\t\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t<StraightLine yValue={0} />\r\n\r\n\t\t\t\t\t\t<SingleValueTooltip\r\n\t\t\t\t\t\t\tyAccessor={d => d.heik2.bearPower}\r\n\t\t\t\t\t\t\tyLabel=\"HEIK2 - Bear power\"\r\n\t\t\t\t\t\t\tyDisplayFormat={format(\".2f\")}\r\n\t\t\t\t\t\t\tappearance={rsiAppearance}\r\n\t\t\t\t\t\t\t{...SMATooltipProps}\r\n\t\t\t\t\t\t\torigin={[-40, 35]}/>\r\n\t\t\t\t\t</Chart>\r\n\t\t\t\t)}\r\n\t\t\t\t{/* {this.isIncludeIndicators('RSI3') && (\r\n\t\t\t\t\t<Chart id={5} \r\n\t\t\t\t\t\t// height={(!this.props.isHomePage || isFullChart) ? 100 : 70}\r\n\t\t\t\t\t\theight={70}\r\n\t\t\t\t\t\tyExtents={[0, d => d.rsi2.bearPower]}\r\n\t\t\t\t\t\torigin={(w, h) => [0, h - this.calculateOffset('RSI3', isFullChart)]}\r\n\t\t\t\t\t\tpadding={{ top: 40, bottom: 10 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" stroke=\"white\" tickStroke=\"white\" />\r\n\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" stroke=\"white\" tickStroke=\"white\" ticks={4} tickFormat={format(\".2f\")}/>\r\n\t\t\t\t\t\t<MouseCoordinateX\r\n\t\t\t\t\t\t\tat=\"bottom\"\r\n\t\t\t\t\t\t\torient=\"bottom\"\r\n\t\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\r\n\t\t\t\t\t\t<MouseCoordinateY\r\n\t\t\t\t\t\t\tat=\"right\"\r\n\t\t\t\t\t\t\torient=\"right\"\r\n\t\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\r\n\t\t\t\t\t\t<BarSeries\r\n\t\t\t\t\t\t\tyAccessor={d => d.rsi3.bearPower}\r\n\t\t\t\t\t\t\tbaseAt={(yScale) => yScale(0)}\r\n\t\t\t\t\t\t\tfill={d => d.side === 'buy' ? '#800080' : d.side === 'sell' ? '#FFA500' : d.side === 'hold' ? '#00FF00' : '#FF0000'} />\r\n\t\t\t\t\t\t<StraightLine yValue={0} />\r\n\r\n\t\t\t\t\t\t<SingleValueTooltip\r\n\t\t\t\t\t\t\tyAccessor={d => d.rsi3.bearPower}\r\n\t\t\t\t\t\t\tyLabel=\"RSI3 - Bear power\"\r\n\t\t\t\t\t\t\tyDisplayFormat={format(\".2f\")}\r\n\t\t\t\t\t\t\tappearance={rsiAppearance}\r\n\t\t\t\t\t\t\t{...SMATooltipProps}\r\n\t\t\t\t\t\t\torigin={[-40, this.props.isHompage ? 40 : 25]}/>\r\n\t\t\t\t\t</Chart>\r\n\t\t\t\t)} */}\r\n\t\t\t\t{/* {this.isIncludeIndicators('HEIK1') && (\r\n\t\t\t\t\t<Chart id={6} \r\n\t\t\t\t\t\t// height={(!this.props.isHomePage || isFullChart) ? 100 : 70}\r\n\t\t\t\t\t\theight={70}\r\n\t\t\t\t\t\tyExtents={[0, d => {console.log(d); return d.heik.bearPower}]}\r\n\t\t\t\t\t\torigin={(w, h) => [0, h - this.calculateOffset('HEIK1', isFullChart)]}\r\n\t\t\t\t\t\tpadding={{ top: 40, bottom: 10 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" stroke=\"white\" tickStroke=\"white\" />\r\n\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" stroke=\"white\" tickStroke=\"white\" ticks={4} tickFormat={format(\".2f\")}/>\r\n\t\t\t\t\t\t<MouseCoordinateX\r\n\t\t\t\t\t\t\tat=\"bottom\"\r\n\t\t\t\t\t\t\torient=\"bottom\"\r\n\t\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\r\n\t\t\t\t\t\t<MouseCoordinateY\r\n\t\t\t\t\t\t\tat=\"right\"\r\n\t\t\t\t\t\t\torient=\"right\"\r\n\t\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\r\n\t\t\t\t\t\t<BarSeries\r\n\t\t\t\t\t\t\tyAccessor={d => d.heik.bearPower}\r\n\t\t\t\t\t\t\tbaseAt={(yScale) => yScale(0)}\r\n\t\t\t\t\t\t\tfill={d => d.side === 'buy' ? '#800080' : d.side === 'sell' ? '#FFA500' : d.side === 'hold' ? '#00FF00' : '#FF0000'} />\r\n\t\t\t\t\t\t<StraightLine yValue={0} />\r\n\r\n\t\t\t\t\t\t<SingleValueTooltip\r\n\t\t\t\t\t\t\tyAccessor={d => d.heik.bearPower}\r\n\t\t\t\t\t\t\tyLabel=\"HEIK1 - Bear power\"\r\n\t\t\t\t\t\t\tyDisplayFormat={format(\".2f\")}\r\n\t\t\t\t\t\t\tappearance={rsiAppearance}\r\n\t\t\t\t\t\t\t{...SMATooltipProps}\r\n\t\t\t\t\t\t\torigin={[-40, this.props.isHompage ? 40 : 25]}/>\r\n\t\t\t\t\t</Chart>\r\n\t\t\t\t)} */}\r\n\t\t\t\t{/* {this.isIncludeIndicators('HEIK2') && (\r\n\t\t\t\t\t<Chart id={7} \r\n\t\t\t\t\t\t// height={(!this.props.isHomePage || isFullChart) ? 100 : 70}\r\n\t\t\t\t\t\theight={70}\r\n\t\t\t\t\t\tyExtents={[0, d => d.heik2.bearPower]}\r\n\t\t\t\t\t\torigin={(w, h) => [0, h - this.calculateOffset('HEIK2', isFullChart)]}\r\n\t\t\t\t\t\tpadding={{ top: 40, bottom: 10 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" stroke=\"white\" tickStroke=\"white\" />\r\n\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" stroke=\"white\" tickStroke=\"white\" ticks={4} tickFormat={format(\".2f\")}/>\r\n\t\t\t\t\t\t<MouseCoordinateX\r\n\t\t\t\t\t\t\tat=\"bottom\"\r\n\t\t\t\t\t\t\torient=\"bottom\"\r\n\t\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\r\n\t\t\t\t\t\t<MouseCoordinateY\r\n\t\t\t\t\t\t\tat=\"right\"\r\n\t\t\t\t\t\t\torient=\"right\"\r\n\t\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\r\n\t\t\t\t\t\t<BarSeries\r\n\t\t\t\t\t\t\t// yAccessor={d => { console.log(d); return elder.accessor()(d) && elder.accessor()(d).bearPower}}\r\n\t\t\t\t\t\t\tyAccessor={d => d.heik2.bearPower}\r\n\t\t\t\t\t\t\tbaseAt={(yScale) => yScale(0)}\r\n\t\t\t\t\t\t\tfill={d => d.side === 'buy' ? '#800080' : d.side === 'sell' ? '#FFA500' : d.side === 'hold' ? '#00FF00' : '#FF0000'} />\r\n\t\t\t\t\t\t<StraightLine yValue={0} />\r\n\r\n\t\t\t\t\t\t<SingleValueTooltip\r\n\t\t\t\t\t\t\tyAccessor={d => d.heik2.bearPower}\r\n\t\t\t\t\t\t\tyLabel=\"HEIK2 - Bear power\"\r\n\t\t\t\t\t\t\tyDisplayFormat={format(\".2f\")}\r\n\t\t\t\t\t\t\tappearance={rsiAppearance}\r\n\t\t\t\t\t\t\t{...SMATooltipProps}\r\n\t\t\t\t\t\t\torigin={[-40, this.props.isHompage ? 40 : 25]}/>\r\n\t\t\t\t\t</Chart>\r\n\t\t\t\t)} */}\r\n\t\t\t\t<CrossHairCursor />\r\n\t\t\t\t<DrawingObjectSelector\r\n\t\t\t\t\tenabled={!this.state.enableInteractiveObject}\r\n\t\t\t\t\tgetInteractiveNodes={this.getInteractiveNodes}\r\n\t\t\t\t\tdrawingObjectMap={{\r\n\t\t\t\t\t\tEquidistantChannel: \"channels\"\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonSelect={this.handleSelection}\r\n\t\t\t\t/>\r\n\t\t\t{(!this.props.isHomePage || isFullChart) && \r\n\t\t\t\t<g>\r\n\t\t\t\t\t<rect\r\n\t\t\t\t\t\tclassName={this.props.classes.CandleChart}\r\n\t\t\t\t\t\tx={this.state.x - 100}\r\n\t\t\t\t\t\ty={this.state.y - 50}\r\n\t\t\t\t\t\twidth=\"200\"\r\n\t\t\t\t\t\theight=\"50\"\r\n\t\t\t\t\t\tstroke=\"#3D4977\"\r\n\t\t\t\t\t\tfill=\"#3D4977\"\r\n\t\t\t\t\t\trx=\"2\"\r\n\t\t\t\t\t\try=\"2\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<ToolTipText x={this.state.x} y={this.state.y}>\r\n\t\t\t\t\t\t<tspan\r\n\t\t\t\t\t\tclassName={this.props.classes.CandleChart_type_date}\r\n\t\t\t\t\t\tx={this.state.x}\r\n\t\t\t\t\t\ttextAnchor=\"middle\"\r\n\t\t\t\t\t\tdy=\"-1em\"\r\n\t\t\t\t\t\tfill={\"#fff\"}\r\n\t\t\t\t\t\tonClick={this.hideTextLabel.bind(this)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.state.dateText}\r\n\t\t\t\t\t\t{this.state.status}\r\n\t\t\t\t\t\t</tspan>\r\n\t\t\t\t\t\t<tspan\r\n\t\t\t\t\t\tclassName={this.props.classes.CandleChart_type_value}\r\n\t\t\t\t\t\tx={this.state.x}\r\n\t\t\t\t\t\ttextAnchor=\"middle\"\r\n\t\t\t\t\t\tkey=\"value\"\r\n\t\t\t\t\t\tdy=\"-1em\"\r\n\t\t\t\t\t\tfill={\"#fff\"}\r\n\t\t\t\t\t\tonClick={this.hideTextLabel.bind(this)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\tPrice: {this.state.valueText}\r\n\t\t\t\t\t\t</tspan>\r\n\t\t\t\t\t</ToolTipText>\r\n\t\t\t\t\t</g>\r\n\t\t\t\t}\r\n\t\t\t</ChartCanvas>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nCandleStickChartWithEquidistantChannel.propTypes = {\r\n\tdata: PropTypes.array.isRequired,\r\n\twidth: PropTypes.number.isRequired,\r\n\tratio: PropTypes.number.isRequired,\r\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired\r\n};\r\n  \r\nCandleStickChartWithEquidistantChannel.defaultProps = {\r\n\ttype: \"svg\",\r\n};\r\n\r\nCandleStickChartWithEquidistantChannel = fitWidth(CandleStickChartWithEquidistantChannel);\r\n\r\n\r\n  \r\nexport default withStyles({\r\n\tCandleChart_type_date: {\r\n\t  fontSize: \"12px\",\r\n\t  fill: \"#AEC6EE\"\r\n\t},\r\n\tCandleChart: {\r\n\t  borderRadius: \"2px\"\r\n\t},\r\n\tCandleChart_type_value: {\r\n\t  fontSize: \"16px\",\r\n\t  fontWeight: 500\r\n\t},\r\n\tdeal_green_shadowed: {\r\n\t  textShadow: \"0 0 3px yellowgreen\"\r\n\t},\r\n\tdeal_red_shadowed: {\r\n\t  textShadow: \"0 0 3px fuchsia\"\r\n\t}\r\n})(fitWidth(CandleStickChartWithEquidistantChannel));\r\n  ","import React from 'react'\r\nimport Chart from 'react-apexcharts'\r\nimport moment from \"moment\";\r\n\r\nexport class MultiLineChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      series: this.getSeries(),\r\n      options: {\r\n        chart: {\r\n          height: 350,\r\n          type: 'line',\r\n          zoom: {\r\n            enabled: false\r\n          }\r\n        },\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n        stroke: {\r\n          show: true,\r\n          curve: 'smooth',\r\n          lineCap: 'butt',\r\n          colors: undefined,\r\n          width: 2,\r\n          dashArray: 0,\r\n        },\r\n        title: {\r\n          text: props.isPercent ? 'Percent Gain/Lost' : 'Total Percent Gain/Lost',\r\n          align: 'left',\r\n          style: {\r\n            fontSize:  '18px',\r\n            fontWeight:  'bold',\r\n            color: '#FFFFFF'\r\n          },\r\n        },\r\n        grid: {\r\n          show: false\r\n        },\r\n        xaxis: {\r\n          categories: this.getCategories(),\r\n          labels: {\r\n            show: true,\r\n            style: {\r\n                colors: '#FFFFFF',\r\n            },\r\n            formatter: (val, opt) => {\r\n                if (val && val.length>10) {\r\n                  return moment.utc(val).format(\"MM/DD hh:mm\")\r\n                } else {\r\n                  return moment.utc(val).format(\"MM/DD\")\r\n                }\r\n              }\r\n          },\r\n          datetimeUTC: true,\r\n        },\r\n        yaxis: {\r\n          labels: {\r\n            show: true,\r\n            style: {\r\n                colors: '#FFFFFF',\r\n            },\r\n            formatter: (value) => { return (value)?value.toFixed(3):'' },\r\n          },\r\n          axisBorder: {\r\n            show: true,\r\n          },\r\n          min: this.getMinValue(),\r\n          max: this.getMaxValue(),\r\n        },\r\n        legend: {\r\n          show: true,\r\n          labels: {\r\n            colors: ['#FFFFFF']\r\n          },\r\n          position: 'top'\r\n        }\r\n      },\r\n    };\r\n  }\r\n\r\n  getSeries() {\r\n    const series = []\r\n    this.props.chartData.map((data) => {\r\n      for (const property in data) {\r\n        series.push({\r\n          name: property,\r\n          data: data[property].map((o) => this.props.isPercent ? o.percent.toFixed(3) : o.efficiency.toFixed(3))\r\n        })\r\n      }\r\n      return null\r\n    })\r\n    return series\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.chartData !== this.props.chartData) {\r\n      this.setState({\r\n        series: this.getSeries(),\r\n        options: {\r\n          xaxis: {\r\n            categories: this.getCategories(),\r\n            labels: {\r\n              show: true,\r\n              style: {\r\n                  colors: '#FFFFFF',\r\n              },\r\n              formatter: (val) => {\r\n                if (val && val.length>10) {\r\n                  return moment.utc(val).format(\"MM/DD hh:mm\")\r\n                } else {\r\n                  return moment.utc(val).format(\"MM/DD\")\r\n                }\r\n              }\r\n            },\r\n            datetimeUTC: true,\r\n          },\r\n          yaxis: {\r\n            labels: {\r\n              show: true,\r\n              style: {\r\n                  colors: '#FFFFFF',\r\n              },\r\n              formatter: (value) => { return (value)?value.toFixed(3):0 },\r\n              min: this.getMinValue(),\r\n              max: this.getMaxValue(),\r\n            },\r\n            axisBorder: {\r\n              show: true,\r\n            },\r\n          }\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  getMinValue() {\r\n    let series = [];\r\n    this.props.chartData.map((data) => {\r\n      for (const property in data) {\r\n        const rows = data[property].map(o => this.props.isPercent ? o.percent : o.efficiency)\r\n        series.push(Math.min(...rows))\r\n      }\r\n\r\n      return null\r\n    })\r\n    const min = Math.min(...series)\r\n    return min.toFixed(3);\r\n  }\r\n\r\n  getMaxValue() {\r\n    let series = [];\r\n\r\n    this.props.chartData.map((data) => {\r\n      for (const property in data) {\r\n        const rows = data[property].map(o => this.props.isPercent ? o.percent : o.efficiency)\r\n        series.push(Math.max(...rows))\r\n      }\r\n      return null\r\n    })\r\n    const max = Math.max(...series)\r\n    return max.toFixed(3);\r\n  }\r\n\r\n  getCategories() {\r\n    const categories = this.props.chartData.map((data) => {\r\n      for (const property in data) {\r\n        return data[property].map((o) => o.date)\r\n      }\r\n      return []\r\n    })\r\n\r\n    return categories[0]\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"chart\">\r\n        <Chart options={this.state.options} series={this.state.series} type=\"line\" height={350} />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nconst getWiningData = (chartData, isAverage, isTotal) => {\r\n  return chartData.map((d) => isAverage ? d.avgWinning : !isTotal ? d.winning : d.totWinning)\r\n}\r\n\r\nconst getLosingData = (chartData, isAverage, isTotal) => {\r\n  return chartData.map((d) => isAverage ? d.avgLosing : !isTotal ? d.losing : d.totLosing)\r\n}\r\n\r\nconst getSymbols = (chartData) => {\r\n  return chartData.map((d) => d.symbol)\r\n}\r\n\r\nconst optionCreator = (chartData, isAverage, isTotal, isPercent) => {\r\n  const formatAvg = (value) => {\r\n    const formatValue = parseFloat(value.toFixed(2))\r\n    return formatValue + ((isPercent)?' %':'')\r\n  }\r\n  return {\r\n    chart: {\r\n      type: \"bar\",\r\n      width: \"100%\",\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      events: {\r\n        click: function (event, chartContext, config) {\r\n          console.log(\"clicked\");\r\n        }\r\n      }\r\n    },\r\n    states: {\r\n      normal: {\r\n        filter: {\r\n          type: \"none\"\r\n        }\r\n      },\r\n      active: {\r\n        filter: {\r\n          type: \"darken\",\r\n          value: 0.35\r\n        }\r\n      }\r\n    },\r\n    colors: [\"#00ff00\", `rgba(255,0,0, ${1 ? 0.5 : 1})`],\r\n    title: {\r\n      text: isAverage ? \"Average return per trade\" : !isTotal ? \"Number of trades\" : \"Total return\",\r\n      align: \"left\",\r\n      offsetX: 8,\r\n      offsetY: -2,\r\n      style: {\r\n        fontSize: \"16px\",\r\n        color: '#FFFFFF'\r\n      }\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        endingShape: \"rounded\",\r\n        columnWidth: \"75%\",\r\n        barHeight: \"100%\",\r\n        dataLabels: {\r\n          position: \"top\"\r\n        }\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: true,\r\n      offsetY: -20,\r\n      style: {\r\n        fontSize: \"16px\",\r\n        colors: [\"#FFFFFF\", \"#FFFFFF\"]\r\n      },\r\n      formatter: (value, opts) => {\r\n        return formatAvg(value)\r\n      },\r\n    },\r\n    stroke: {\r\n      show: true,\r\n      width: 1,\r\n      colors: [\"#fff\"]\r\n    },\r\n    xaxis: {\r\n      categories: getSymbols(chartData),\r\n      labels: {\r\n        show: true,\r\n        style: {\r\n            colors: '#FFFFFF',\r\n        },\r\n      },\r\n    },\r\n    grid: {\r\n      show: false\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        show: true,\r\n        style: {\r\n            colors: '#FFFFFF',\r\n        },\r\n        // formatter: (value) => { return isAverage ? value.toFixed(5) : value | 0 },\r\n        formatter: (value) => {\r\n          return formatAvg(value)\r\n        },\r\n      },\r\n      axisBorder: {\r\n        show: true,\r\n      },\r\n    },\r\n    tooltip: {\r\n      enabled: true\r\n    },\r\n    legend: {\r\n      position: \"top\",\r\n      horizontalAlign: \"right\",\r\n      offsetY: -50,\r\n      fontSize: \"14px\",\r\n      labels: {\r\n        colors: \"#FFFFFF\"\r\n      },\r\n      markers: {\r\n        width: 16,\r\n        height: 16,\r\n        radius: 4\r\n      },\r\n      itemMargin: {\r\n        horizontal: 5,\r\n        vertical: 5\r\n      },\r\n      onItemHover: {\r\n        highlightDataSeries: true\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport default function GroupApexBar(props) {\r\n  const { data: chartData, isAverage, isTotal, isPercent } = props;\r\n  const [options, setOptions] = useState(optionCreator(chartData, isAverage, isTotal, isPercent));\r\n  const [series, setSeries] = useState([\r\n    {\r\n      data: getWiningData(chartData, isAverage, isTotal)\r\n    },\r\n    {\r\n      data: getLosingData(chartData, isAverage, isTotal)\r\n    }\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    setOptions(optionCreator(chartData, isAverage, isTotal, isPercent))\r\n    setSeries([\r\n      {\r\n        name: isAverage ? 'Winning Average' : !isTotal ? 'Winning' : 'Total Winning',\r\n        data: getWiningData(chartData, isAverage, isTotal)\r\n      },\r\n      {\r\n        name: isAverage ? 'Losing Average' : !isTotal ? 'Losing' : 'Total Losing',\r\n        data: getLosingData(chartData, isAverage, isTotal)\r\n      }\r\n    ])\r\n\r\n  }, [chartData, isAverage])\r\n\r\n  return (\r\n    <div id=\"chart\">\r\n      <ReactApexChart\r\n        options={options}\r\n        series={series}\r\n        type=\"bar\"\r\n        width={'100%'}\r\n        height={400}\r\n      />\r\n    </div>\r\n  );\r\n}","import { MultiLineChart } from './MultiLineChart'\r\nimport GroupApexBar from './GroupBarChart'\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\r\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\r\nclass PerformanceChart extends React.Component {\r\n\trender() {\r\n\r\n\t\tconst { data: mainData } = this.props;\r\n\r\n\t\tif (mainData == null) {\r\n\t\t\treturn <div>Loading...</div>\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<MultiLineChart chartData={mainData.totalPercentGainLost} isPercent={false}/>\r\n\t\t\t\t<MultiLineChart chartData={mainData.percentEfficiency} isPercent={true}/>\r\n\t\t\t\t<TypeChooser>\r\n\t\t\t\t\t{type => <GroupApexBar type={type} data={mainData.winningLosing} isAverage={false} isPercent={false} />}\r\n\t\t\t\t</TypeChooser>\r\n\t\t\t\t<TypeChooser>\r\n\t\t\t\t\t{type => <GroupApexBar type={type} data={mainData.winningLosingAvg} isAverage={true} isPercent={true}/>}\r\n\t\t\t\t</TypeChooser>\r\n\t\t\t\t<TypeChooser>\r\n\t\t\t\t\t{type => <GroupApexBar type={type} data={mainData.totWinLose} isTotal={true} isAverage={false} isPercent={true}/>}\r\n\t\t\t\t</TypeChooser>\r\n\t\t\t\t{/* <MultiLineChart chartData={mainData.percentEfficiency} isPercent={false}/> */}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nPerformanceChart.propTypes = {\r\n\tdata: PropTypes.object.isRequired,\r\n\twidth: PropTypes.number.isRequired,\r\n\tratio: PropTypes.number.isRequired,\r\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\r\n};\r\n\r\nPerformanceChart.defaultProps = {\r\n\ttype: \"svg\",\r\n};\r\nPerformanceChart = fitWidth(PerformanceChart);\r\n\r\nexport default PerformanceChart;","import Axios from 'axios';\r\n\r\nconst http  = Axios.create({\r\n  baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nconst request = async (req) => {\r\n  const config = {\r\n    method: req.method,\r\n    url: req.path,\r\n    params: req.params,\r\n    data: req.body,\r\n    headers: req.headers,\r\n  }\r\n  try {\r\n    const response = await http.request(config);\r\n    return {\r\n      success: true,\r\n      data: response.data,\r\n    }\r\n  } catch (err) {\r\n    console.error(`request ${req.path}:`, err);\r\n    return {\r\n      success: false,\r\n      data: err,\r\n    }\r\n  }\r\n}\r\n\r\nexport const getStrategyListReq = async () => {\r\n  const req = {\r\n    method: 'GET',\r\n    path: 'api/get_strategy_list'\r\n  }\r\n\r\n  return await request(req);\r\n}\r\n\r\nexport const getTablesReq = async (strategy) => {\r\n  const req = {\r\n    method: 'POST',\r\n    path: 'api/tables',\r\n    body: {\r\n      strategy,\r\n    }\r\n  }\r\n\r\n  return await request(req);\r\n}\r\n\r\nexport const getDataReq = async (body) => {\r\n  const req = {\r\n    method: 'POST',\r\n    path: 'api/get_data',\r\n    body,\r\n  }\r\n\r\n  return await request(req);\r\n}\r\n\r\nexport const getDataSliceReq = async (body) => {\r\n  const req = {\r\n    method: 'POST',\r\n    path: 'api/get_data_slice',\r\n    body,\r\n  }\r\n\r\n  return await request(req);\r\n}\r\n\r\nexport const getDataExtendedSliceReq = async (body) => {\r\n  const req = {\r\n    method: 'POST',\r\n    path: 'api/get_data_extended_slice',\r\n    body,\r\n  }\r\n\r\n  return await request(req);\r\n}\r\n\r\nexport const getDataExtendedReq = async (body) => {\r\n  const req = {\r\n    method: 'POST',\r\n    path: 'api/get_data_extended',\r\n    body,\r\n  }\r\n\r\n  return await request(req);\r\n}\r\n\r\nexport const getBacktestingResultReq = async (body) => {\r\n  const req = {\r\n    method: 'POST',\r\n    path: 'api/get_backtesting_result',\r\n    body,\r\n  }\r\n\r\n  return await request(req);\r\n}\r\n\r\nexport const filterPriceData = async (symbol, timeFrame, tradeStartDate, tradeEndDate, currentPage, pageAmount) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      'symbol': symbol,\r\n      'time_frame': timeFrame,\r\n      'start': tradeStartDate,\r\n      'end': tradeEndDate,\r\n      'page_num': currentPage,\r\n      'page_mounts': pageAmount,\r\n    })\r\n  };\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/api/get_table_candles\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      const candles = []\r\n      data.candles.forEach((x) => {\r\n        candles.push({\r\n          'o': x[1],\r\n          'h': x[2],\r\n          'c': x[3],\r\n          'l': x[4],\r\n          'v': x[5],\r\n          'date': x[0].replace('T', ' '),\r\n        })\r\n      })\r\n      return {\r\n        candles,\r\n        page_total: 0\r\n      }\r\n    })\r\n}\r\n\r\nexport const filterTradesData = async (macroStrategy, microStrategy, tradeStartDate, tradeEndDate, currentPage, pageAmount) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      'macroStrategy': macroStrategy,\r\n      'microStrategy': microStrategy,\r\n      'tradeStartDate': tradeStartDate,\r\n      'tradeEndDate': tradeEndDate,\r\n      'page_num': currentPage,\r\n      'page_mounts': pageAmount,\r\n    })\r\n  };\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/api/get_data_trades\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      let trades_data = []\r\n      data.trades_data.forEach((x) => {\r\n        trades_data.push({\r\n          'symbol': x.symbol,\r\n          'strategy': `${x.macro_strategy} - ${x.micro_strategy}`,\r\n          'side': x.side,\r\n          'quantity': x.quantity,\r\n          'date': (x.date.replace('T', ' ')).replace('Z', ''),\r\n          'price': x.price\r\n        })\r\n      })\r\n      return {\r\n        trades_data,\r\n        page_total: data.page_total\r\n      }\r\n    })\r\n}\r\n\r\nexport const getAllSymbols = async () => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      'strategy': 'no_strategy'\r\n    })\r\n  };\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/api/tables\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      let temp_data = []\r\n      data.tables.map((x) => {\r\n        temp_data.push({\r\n          value: x,\r\n          label: x\r\n        });\r\n        return null\r\n      })\r\n      return temp_data\r\n    })\r\n}\r\n\r\nexport const createSignUpLink = async (roles) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      roles: roles,\r\n      link: process.env.REACT_APP_BACKEND_URL + '/signup/'\r\n    })\r\n  };\r\n  let res = []\r\n  await fetch(process.env.REACT_APP_BACKEND_URL + \"/links\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(async data => {\r\n      if (data.success === \"create link\") {\r\n        await fetch(process.env.REACT_APP_BACKEND_URL + \"/links\")\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          res = data\r\n        })\r\n      }\r\n    })\r\n  return res\r\n}\r\n\r\nexport const getActiveLinks = async () => {\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/links\")\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data;\r\n    })\r\n}\r\n\r\nexport const sendSignUpLink = async (email, link) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      email,\r\n      link\r\n    })\r\n  };\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/send-signup-link\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return true\r\n    })\r\n}\r\n\r\nexport const forgotPassword = async (email) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      email,\r\n      url: process.env.REACT_APP_BACKEND_URL\r\n    })\r\n  };\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/password_reset/\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const getStrategyOptions = async () => {\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/api/get_strategies\")\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const passwordConfirmReset = async (password1, password2, pathname) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      password1,\r\n      password2,\r\n      pathname: pathname\r\n    })\r\n  };\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/password_reset_confirm/\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const getScriptFileNames = async() => {\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/api/get_script_files\")\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const getModuleTypeNames = async() => {\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/strategy/parameter_list/\")\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const getFileTypeNames = async(moduleType) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      param_type: moduleType\r\n    })\r\n  };\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/strategy/parameter_detail_list/\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const createScriptFile = async(filename, content, isUpdate) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      filename,\r\n      content,\r\n    })\r\n  };\r\n\r\n  const api = isUpdate ? '/api/update_script_file' : '/api/create_script_file';\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + api, requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nconst convertArraytoString = (src) => {\r\n  if (!src) {\r\n    return ''\r\n  }\r\n\r\n  let dest = ''\r\n  let comma = ''\r\n\r\n  src.forEach(o => {\r\n    dest = dest + comma + o.value\r\n    comma = ','\r\n  })\r\n  return dest\r\n}\r\n\r\nconst convertStringtoArray = (src) => {\r\n  if (!src || !src.length) {\r\n    return null\r\n  }\r\n\r\n  const dest = src.split(',')\r\n  return dest.map((o) => ({\r\n    value: o,\r\n    label: o\r\n  }))\r\n}\r\n\r\nconst convertStringtoHourObject = (src) => {\r\n  return {\r\n    value: src === true || src === 'true' ? true : false,\r\n    label: src === true || src === 'true' ? 'true' : 'false',\r\n  }\r\n}\r\n\r\nconst transformingProcessConfigToQuery = (settings) => {\r\n  return {\r\n    name: settings.name,\r\n    indicator: convertArraytoString(settings.indicator),\r\n    watchlist: convertArraytoString(settings.watchlist),\r\n    position_sizing: convertArraytoString(settings.position_sizing),\r\n    order_routing: convertArraytoString(settings.order_routing),\r\n    data_source: convertArraytoString(settings.data_source),\r\n    live_trading: convertArraytoString(settings.live_trading),\r\n    starting_cash: settings.starting_cash,\r\n    extended_hours: convertArraytoString(settings.extended_hours),\r\n    macro_strategy: convertArraytoString(settings.macro_strategy),\r\n    indicator_signalling: convertArraytoString(settings.indicator_signalling),\r\n    asset_class: convertArraytoString(settings.asset_class),\r\n  };\r\n}\r\n\r\nconst transformingProcessConfigFromParam = (settings) => {\r\n  return {\r\n    name: settings.name,\r\n    indicator: convertStringtoArray(settings.indicator),\r\n    watchlist: convertStringtoArray(settings.watchlist),\r\n    position_sizing: convertStringtoArray(settings.position_sizing),\r\n    order_routing: convertStringtoArray(settings.order_routing),\r\n    data_source: convertStringtoArray(settings.data_source),\r\n    live_trading: convertStringtoArray(settings.live_trading),\r\n    starting_cash: settings.starting_cash,\r\n    extended_hours: convertStringtoHourObject(settings.extended_hours),\r\n    macro_strategy: convertStringtoArray(settings.macro_strategy),\r\n    indicator_signalling: convertStringtoArray(settings.indicator_signalling),\r\n    asset_class: convertStringtoArray(settings.asset_class),\r\n  };\r\n}\r\n\r\nexport const saveConfigFile = async(settings) => {\r\n\r\n\r\n  const data = transformingProcessConfigToQuery(settings)\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      config_collection: 'bot_configs',\r\n      config: data\r\n    })\r\n  };\r\n\r\n  const api = '/strategy/create_one_config_detail/';\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + api, requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const saveScriptFile = async(filename, contents, isUpdate) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      name: filename,\r\n      contents,\r\n    })\r\n  };\r\n\r\n  const api = '/strategy/save_other_parameters/';\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + api, requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const getScriptFile = async(filename) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      filename,\r\n    })\r\n  };\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/api/get_script_file\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\n/** User Management Api*/\r\nexport const getUserList = async () => {\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/get_user_list\")\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const updateUserRole = async (id, role) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      id,\r\n      role\r\n    })\r\n  };\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/update_user_role\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const deleteUser = async (id) => {\r\n  const requestOptions = {\r\n    method: 'PUT',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      id,\r\n    })\r\n  };\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/delete_user/\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const getConfigFileList = async (collection) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      config_collection: collection,\r\n    })\r\n  };\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/strategy/config_detail_names/\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const getBotConfigFileList = async (collection) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      config_collection: collection,\r\n    })\r\n  };\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/strategy/config_detail_names/\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const getConfigFileDetail = async (collection, name) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      config_collection: collection,\r\n      name,\r\n    })\r\n  };\r\n  const res = await fetch(process.env.REACT_APP_BACKEND_URL + \"/strategy/config_item_detail/\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n\r\n  return transformingProcessConfigFromParam(res.result)\r\n}\r\n\r\nexport const getBotStatusList = async () => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      \"config_collection\": \"bot_status\"\r\n    })\r\n  };\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/strategy/bot_status_list/\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const updateBotStatus = async (botName, botAction) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      \"config_collection\": \"bot_configs\",\r\n      \"name\": botName\r\n    })\r\n  };\r\n\r\n  const apiUrl = botAction === 'start'\r\n    ? '/strategy/bot_run/'\r\n    : botAction === 'pause'\r\n    ? '/strategy/bot_pause/'\r\n    : '/strategy/bot_stop/'\r\n\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiUrl, requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        return data\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getBotConfigList = async () => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      \"config_collection\": \"bot_configs\",\r\n    })\r\n  };\r\n\r\n  const apiUrl = '/strategy/config_details/'\r\n\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiUrl, requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        return data\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getNewsFinancialData = async (symbol) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      'symbol': symbol,\r\n    })\r\n  };\r\n\r\n  const apiUrl = '/news/symbol_news/'\r\n\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiUrl, requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        return data\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getIncomeStatement = async (symbol) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      'symbol': symbol,\r\n    })\r\n  };\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/financials/income_statement/\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\nexport const getBalanceSheet = async (symbol) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      'symbol': symbol,\r\n    })\r\n  };\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/financials/balance_sheet/\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const getCashStatement = async (symbol) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      'symbol': symbol,\r\n    })\r\n  };\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/financials/cash_statement/\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const getFinancialTotalData = async (symbol) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      'symbol': symbol,\r\n    })\r\n  };\r\n\r\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/financials/financial_total_data/\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n}\r\n\r\nexport const getStockModalData = async () => {\r\n  const apiUrl = '/scanner/available_items/'\r\n\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiUrl)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        return data\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getMultiFinancials = async (symbols, statement_type) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      'symbols': symbols,\r\n      'financial_part': statement_type,\r\n    })\r\n  };\r\n\r\n  const apiURL = '/scanner/multi_financials/'\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        return data.results\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const saveScannerView = async (chart_number, symbols, fields) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      'chart_number': chart_number,\r\n      'symbols': symbols,\r\n      'fields': fields,\r\n    })\r\n  };\r\n\r\n  const apiURL = '/scanner/save_scanner_views/'\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        return data.results\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getScannerViewData = async (chart_number) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      'chart_number': chart_number,\r\n    })\r\n  };\r\n\r\n  const apiURL = '/scanner/scanner_views/'\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        return data.result\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getScannerDetails = async (exchange='', industry='', sector='', currentPage, pageAmount) => {\r\n\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      'exchange': exchange,\r\n      'industry': industry,\r\n      'sector': sector,\r\n      'page_num': currentPage,\r\n      'page_mounts': pageAmount,\r\n    })\r\n  };\r\n\r\n  const apiURL = '/scanner/ticker_details_list/'\r\n\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getTickerScannerOptions = async () => {\r\n  const apiUrl = '/scanner/ticker_details_filter_options/'\r\n\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiUrl)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        return data\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getFloatsFilterOptions = async () => {\r\n  const apiUrl = '/floats/float_details_filter_options/'\r\n\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiUrl)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        return data\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getFloatsDetails = async (pageNumber, pageAmount, exchange='', industry='', sector='') => {\r\n\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      'page_num': pageNumber,\r\n      'page_mounts': pageAmount,\r\n      'exchange': exchange,\r\n      'industry': industry,\r\n      'sector': sector,\r\n    })\r\n  };\r\n\r\n  const apiURL = '/floats/float_details_list/'\r\n\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data.results\r\n    })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const saveScannerAllViewData = async (allViewData) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify(allViewData)\r\n  };\r\n\r\n  const apiURL = '/scanner/save_all_views/'\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        return {\r\n          success: true,\r\n          data: data.results\r\n        }\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getScannerAllViewData = async (chart_number) => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    headers: {'Content-Type': 'application/json'},\r\n  };\r\n\r\n  const apiURL = '/scanner/load_all_views/'\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        return {\r\n          success: true,\r\n          data: data.result,\r\n        }\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getSymbolsByMicroStrategy = async (macroStrat, microStrat) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      'macro': macroStrat,\r\n      'micro': microStrat\r\n    })\r\n  };\r\n\r\n  const apiURL = '/api/micro_strategy_symbols'\r\n\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        return {\r\n          success: true,\r\n          data: data.result\r\n        }\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getIndicators = async () => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    headers: {'Content-Type': 'application/json'},\r\n  };\r\n\r\n  const apiURL = '/api/indicator_list'\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        return {\r\n          success: true,\r\n          data: data.result,\r\n        }\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getIndicatorSignallingList = async () => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    headers: {'Content-Type': 'application/json'},\r\n  };\r\n\r\n  const apiURL = '/api/get_indicator_signalling_list'\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        return {\r\n          success: true,\r\n          data: data.result,\r\n        }\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const apiGetDatabases = async() => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    header: {'Content-Type': 'application/json'},\r\n  }\r\n\r\n  const apiURL = '/api/get_databases'\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data\r\n    })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const apiGetCollections = async(dbName) => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    header: {'Content-Type': 'application/json'},\r\n  }\r\n\r\n  let apiURL = new URL(process.env.REACT_APP_BACKEND_URL + '/api/get_collections')\r\n  apiURL.search = new URLSearchParams({db_name: dbName}).toString()\r\n\r\n  try {\r\n    return await fetch(apiURL, requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        return data\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const apiDeleteCollection = async(dbName, collectionName) => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    header: {'Content-Type': 'application/json'},\r\n  }\r\n\r\n  let apiURL = new URL(process.env.REACT_APP_BACKEND_URL + '/api/delete_collection')\r\n  apiURL.search = new URLSearchParams({db_name: dbName, collection_name: collectionName}).toString()\r\n\r\n  try {\r\n    return await fetch(apiURL, requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        return data\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const apiDeleteDatabase = async(dbName) => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    header: {'Content-Type': 'application/json'},\r\n  }\r\n\r\n  let apiURL = new URL(process.env.REACT_APP_BACKEND_URL + '/api/delete_database')\r\n  apiURL.search = new URLSearchParams({db_name: dbName}).toString()\r\n\r\n  try {\r\n    return await fetch(apiURL, requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        return data\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const apiExportDatabase = async(dbName) => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    header: {'Content-Type': 'application/json'},\r\n  }\r\n\r\n  let apiURL = new URL(process.env.REACT_APP_BACKEND_URL + '/api/export_database')\r\n  apiURL.search = new URLSearchParams({db_name: dbName}).toString()\r\n\r\n  try {\r\n    return await fetch(apiURL, requestOptions)\r\n      .then(response => {\r\n        response.blob().then(blob => {\r\n          let url = window.URL.createObjectURL(blob);\r\n          let a = document.createElement(\"a\");\r\n          a.href = url;\r\n          a.download = `${dbName}.zip`;\r\n          a.click();\r\n        })\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const apiExportCollection = async(dbName, collectionName) => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    header: {'Content-Type': 'application/json'},\r\n  }\r\n\r\n  let apiURL = new URL(process.env.REACT_APP_BACKEND_URL + '/api/export_collection')\r\n  apiURL.search = new URLSearchParams({db_name: dbName, collection_name: collectionName}).toString()\r\n\r\n  try {\r\n    return await fetch(apiURL, requestOptions)\r\n      .then(response => {\r\n        response.blob().then(blob => {\r\n          let url = window.URL.createObjectURL(blob);\r\n          let a = document.createElement(\"a\");\r\n          a.href = url;\r\n          a.download = `${dbName}_${collectionName}.csv`;\r\n          a.click();\r\n        })\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\nexport const getWatchListAll = async () => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    headers: {'Content-Type': 'application/json'},\r\n  };\r\n\r\n  const apiURL = '/scanner/watchlists_all/'\r\n  try {\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        return {\r\n          success: true,\r\n          result: data.result,\r\n        }\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const apiCreateBackup = async(dbName, collectionName = '') => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    header: {'Content-Type': 'application/json'},\r\n  }\r\n\r\n  let apiURL = new URL(process.env.REACT_APP_BACKEND_URL + '/api/create_backup')\r\n  apiURL.search = new URLSearchParams({db_name: dbName, collection_name: collectionName}).toString()\r\n\r\n  try {\r\n    return await fetch(apiURL, requestOptions)\r\n      .then(response => response.json())\r\n      .then(result => result['data'])\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const apiExecuteBackup = async(data) => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    header: {'Content-Type': 'application/json'},\r\n  }\r\n\r\n  let apiURL = new URL(process.env.REACT_APP_BACKEND_URL + '/api/execute_backup')\r\n  apiURL.search = new URLSearchParams({backup_id: data['id']}).toString()\r\n\r\n  try {\r\n    let filename = `${data['database']}.zip`\r\n    if (data['collection']) {\r\n      filename = `${data['database']}_${data['collection']}.csv`\r\n    }\r\n    return await fetch(apiURL, requestOptions)\r\n      .then(response => {\r\n        const contentType = response.headers.get(\"content-type\");\r\n        if (contentType && contentType.indexOf(\"application/json\") !== -1) {\r\n          console.log('Json object response')\r\n        } else {\r\n          response.blob().then(blob => {\r\n            let url = window.URL.createObjectURL(blob);\r\n            let a = document.createElement(\"a\");\r\n            a.href = url;\r\n            a.download = filename;\r\n            a.click();\r\n          })\r\n        }\r\n\r\n        // console.log('response')\r\n        // console.log(response)\r\n\r\n\r\n      })\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const apiStopBackup = async(data) => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    header: {'Content-Type': 'application/json'},\r\n  }\r\n\r\n  let apiURL = new URL(process.env.REACT_APP_BACKEND_URL + '/api/stop_backup')\r\n  apiURL.search = new URLSearchParams({backup_id: data['id']}).toString()\r\n\r\n  try {\r\n    return await fetch(apiURL, requestOptions)\r\n      .then(response => response.json())\r\n      .then(result => result['data'])\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const apiGetGoogleNews = async (params) => {\r\n  // const req = {\r\n  //   method: 'GET',\r\n  //   path: 'api/get_google_news'\r\n  // }\r\n\r\n  // return await request(req);\r\n\r\n\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    header: {'Content-Type': 'application/json'},\r\n  }\r\n\r\n  let apiURL = new URL(process.env.REACT_APP_BACKEND_URL + '/api/get_google_news')\r\n  apiURL.search = new URLSearchParams(params).toString()\r\n\r\n  try {\r\n    return await fetch(apiURL, requestOptions)\r\n      .then(response => response.json())\r\n      .then(result => result['data'])\r\n  } catch (e) {\r\n    return {\r\n      success: false,\r\n      message: e\r\n    }\r\n  }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport Chart from '../trades-chart/TradesChart';\r\nimport PerformanceChart from '../performance-chart/PerformanceChart'\r\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\r\n\r\nimport { getDataReq, getDataExtendedReq, getBacktestingResultReq, getDataSliceReq, getDataExtendedSliceReq } from 'api/Api';\r\n\r\nconst StockChart = (props) => {\r\n  const {\r\n    chartColumn,\r\n    viewType,\r\n    symbol,\r\n    strategy,\r\n    isHomePage,\r\n    indicators,\r\n    multiSymbol,\r\n    microStrategy,\r\n    selectedInstance,\r\n    selectedTradeDB,\r\n    selectedSymbolType,\r\n    chartPeriod,\r\n    startDate,\r\n    endDate,\r\n    extendMarketTime,\r\n    isSliced\r\n  } = props;\r\n\r\n  const [dbname, setDbname] = useState('')\r\n\tconst [chartData, setChartData] = useState(null)\r\n  const [exchange, setExchange] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (selectedInstance === 'live_trading') {\r\n      setChartData(null)\r\n    }\r\n  }, [selectedInstance])\r\n\r\n  useEffect(() => {\r\n    const initDbNamebySelectedTradeDB = () => {\r\n      if (selectedTradeDB === 'heikfilter-2mins-trades') {\r\n        setDbname('backtest_2_minute');\r\n      } else if(selectedTradeDB === 'heikfilter-12mins-trades') {\r\n        setDbname('backtest_12_minute');\r\n      } else if(selectedTradeDB === 'heikfilter-1hour-trades') {\r\n        setDbname('backtest_1_hour');\r\n      } else if(selectedTradeDB === 'heikfilter-4hours-trades') {\r\n        setDbname('backtest_4_hour');\r\n      } else if(selectedTradeDB === 'heikfilter-12hours-trades') {\r\n        setDbname('backtest_12_hour');\r\n      } else if(selectedTradeDB === 'heikfilter-1day-trades') {\r\n        setDbname('backtest_1_day');\r\n      }\r\n    }\r\n    initDbNamebySelectedTradeDB();\r\n  }, [selectedTradeDB])\r\n\r\n  useEffect(() => {\r\n    setChartData(null)\r\n  }, [viewType])\r\n\r\n  useEffect(() => {\r\n    const get_data = async (symbol) => {\r\n      if (viewType !== 'performance') {\r\n        if (!dbname) {\r\n          return;\r\n        }\r\n        const requestBody = {\r\n          'db_name': dbname,\r\n          'symbol': symbol,\r\n          'macro': strategy.value,\r\n          'micro': (selectedInstance !== 'live_trading') ? microStrategy : '',\r\n        }\r\n        let dataRes;\r\n        setChartData(null)\r\n        try {\r\n          if (extendMarketTime === 'extend_markettime') {\r\n            if (isSliced) {\r\n              dataRes = await getDataExtendedSliceReq(requestBody);\r\n            } else {\r\n              dataRes = await getDataExtendedReq(requestBody);\r\n            }\r\n          } else if (isSliced) {\r\n            dataRes = await getDataSliceReq(requestBody);\r\n          } else {\r\n            dataRes = await getDataReq(requestBody);\r\n          }\r\n          if (dataRes.success) {\r\n            let data = dataRes.data;\r\n            if (data['chart_data'].length > 0) {\r\n              data['chart_data']['columns'] = [\"date\", \"open\", \"high\", \"low\", \"close\", \"volume\", \"split\", \"dividend\", \"absoluteChange\", \"percentChange\"]\r\n              data['chart_data'].map((x) => {\r\n                let converDate = new Date(x.date)\r\n                x.date = converDate\r\n                return null\r\n              })\r\n              setChartData(data['chart_data'])\r\n            }\r\n          }\r\n        } catch (e) {\r\n          console.error(e)\r\n        }\r\n      } else {\r\n        const symbols = multiSymbol.map((symbol) => symbol.value);\r\n        if (!symbols.length | !microStrategy) {\r\n          return;\r\n        }\r\n\r\n        const filteredSymbols = symbols.filter(symbol => symbol !== '*')\r\n        const requestBody = {\r\n          'symbols': filteredSymbols,\r\n          \"macro\": strategy.value,\r\n          \"micro\": microStrategy,\r\n          'start_date': startDate,\r\n          'end_date': endDate,\r\n        }\r\n\r\n        try {\r\n          const backtestingResultRes = await getBacktestingResultReq(requestBody);\r\n          if (backtestingResultRes.success) {\r\n            setChartData(backtestingResultRes.data['chart_data'])\r\n          }\r\n        } catch (error) {\r\n          console.error(error)\r\n        }\r\n      }\r\n    }\r\n\r\n    if (symbol || multiSymbol.length) {\r\n      get_data(symbol)\r\n    }\r\n  }, [extendMarketTime, selectedInstance, dbname, viewType, symbol, multiSymbol, startDate, endDate, strategy.value])\r\n\r\n  const displayPerformanceChart = (type) => {\r\n    return (\r\n      <PerformanceChart type={type} data={chartData} multiSymbol={multiSymbol.map((symbol) => symbol.value)}/>\r\n    )\r\n  }\r\n\r\n  const displayChart = () => {\r\n    return (\r\n      <TypeChooser >\r\n        {type => {\r\n          return (\r\n            (isHomePage | (viewType !== 'performance'))\r\n            && (<Chart\r\n                type={type}\r\n                data={chartData}\r\n                symbol={symbol}\r\n                strategy={strategy}\r\n                isHomePage={isHomePage}\r\n                indicators={indicators}\r\n                chartColumn={chartColumn}\r\n                microStrategy={microStrategy}\r\n                selectedInstance={selectedInstance}\r\n                extendMarketTime={extendMarketTime}\r\n            />)\r\n          )\r\n        }}\r\n      </TypeChooser>\r\n    )\r\n  }\r\n\r\n  return (\r\n  <>\r\n    {\r\n      chartData == null ? <div className=\"hunter-loadding-status-text\">Loading...</div> :\r\n      <>\r\n        <div className=\"select-wrape\">\r\n          <div>\r\n            <strong>{chartPeriod} {exchange} </strong>\r\n          </div>\r\n        </div>\r\n        {(chartColumn === 1) && displayChart()}\r\n        {(chartColumn === 2) && displayChart()}\r\n        {(chartColumn === 4) && displayChart()}\r\n        {(chartColumn === 6) && displayChart()}\r\n        {(viewType === \"performance\") && displayPerformanceChart()}\r\n      </>\r\n  }\r\n  </>)\r\n}\r\n\r\nexport default StockChart","import React, { createContext, useContext } from \"react\";\r\nconst authContext = createContext();\r\n\r\nconst authUser = {\r\n  isAuthenticated: localStorage.getItem(\"auth-token\") ? true : false,\r\n  async signin(email, password) {\r\n    let formData = {\r\n      username: email,\r\n      password: password\r\n    }\r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + '/signin/', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(formData)\r\n    })\r\n      .then(response => {\r\n          return response.json();\r\n      })\r\n      .then(res => {\r\n        if (!res.user_id) {\r\n          throw new Error('SignIn failed');\r\n        }\r\n        return {\r\n          success: true,\r\n          user_id: res.user_id\r\n        }\r\n      })\r\n      .catch(err => {\r\n        return {\r\n          success: false,\r\n          error: \"User Name or Password is wrong\"\r\n        }\r\n      })\r\n  },\r\n\r\n  async signup(username, email, password1, password2, pathname) {\r\n    let formData = {\r\n      username: username,\r\n      email: email,\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      password1: password1,\r\n      password2: password2,\r\n      signup_path: process.env.REACT_APP_BACKEND_URL + pathname\r\n    }\r\n    \r\n    return await fetch(process.env.REACT_APP_BACKEND_URL + '/signup/', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(formData)\r\n    })\r\n      .then(response => {\r\n          return response.json();\r\n      })\r\n      .then(res => {\r\n        if (res.success) {\r\n          return {\r\n            success: true\r\n          }\r\n        } else {\r\n          throw new Error(res.error);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        return {\r\n          success: false,\r\n          error: 'Sign up failed'\r\n        }\r\n      })\r\n  },\r\n  async verify(userId, code) {\r\n    let formData = {\r\n      user_id: userId,\r\n      num: code\r\n    }\r\n    const res = await fetch(process.env.REACT_APP_BACKEND_URL + '/verify/', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(formData)\r\n    })\r\n      .then(response => {\r\n          return response.json();\r\n      })\r\n      .then(res => {\r\n        if (res.error) {\r\n          throw new Error(res.error);\r\n        }\r\n        return res\r\n      })\r\n      .catch(err => {\r\n        return { \r\n          verify: false,\r\n          error: 'verify failed'\r\n        }\r\n      })\r\n    authUser.isAuthenticated = true;\r\n    return res\r\n  },\r\n  signout() {\r\n    authUser.isAuthenticated = false;\r\n    localStorage.removeItem(\"auth-token\")\r\n    localStorage.removeItem(\"user-info\")\r\n  },\r\n};\r\n\r\nexport function useAuth() {\r\n  return useContext(authContext);\r\n}  \r\n\r\nexport default function ProvideAuth({ children }) {\r\n  const auth = useProvideAuth();\r\n  return (\r\n    <authContext.Provider value={auth}>\r\n      {children}\r\n    </authContext.Provider>\r\n  );\r\n}\r\n  \r\nfunction useProvideAuth() {\r\n  const verify = async ( userId, num ) => {\r\n    authUser.signin(userId, num)\r\n  };\r\n\r\n  const signin = async ( email, password ) => {\r\n    authUser.signin(email, password)\r\n  };\r\n\r\n  const signout = () => {\r\n    authUser.signout()\r\n  };\r\n  \r\n  return {\r\n    authUser,\r\n    verify,\r\n    signin,\r\n    signout,\r\n  };\r\n}","import React from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button\r\n} from \"reactstrap\";\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\n\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\n\r\nimport { routes } from \"routes.js\";\r\n\r\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\r\nimport HeiknStockChart from \"components/HeiknStockChart\"\r\nimport HeiknStockChartItem from \"components/ItemChart\"\r\nimport HeiknStockSlicedChart from \"components/HeiknStockSlicedChart\"\r\nimport ChartWithNewApi from \"components/api-chart/ChartWithNewApi\";\r\n\r\nvar ps;\r\n\r\nfunction HomePage() {\r\n  const history = useHistory();\r\n  const initInstance = history.location.state ? history.location.state.initInstance : null;\r\n  const [viewType, setViewType] = React.useState(0);\r\n  const [isShowSidebar, setShowSidebar] = React.useState(false);\r\n  const [selectedInstance, setSelectedInstance] = React.useState(\r\n    initInstance ? initInstance : 'forward_test'\r\n  );\r\n  const location = useLocation();\r\n  const mainPanelRef = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      document.documentElement.className += \" perfect-scrollbar-on\";\r\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\r\n      ps = new PerfectScrollbar(mainPanelRef.current, {\r\n        suppressScrollX: true,\r\n      });\r\n      let tables = document.querySelectorAll(\".table-responsive\");\r\n      for (let i = 0; i < tables.length; i++) {\r\n        ps = new PerfectScrollbar(tables[i]);\r\n      }\r\n    }\r\n\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      if (navigator.platform.indexOf(\"Win\") > -1) {\r\n        ps.destroy();\r\n        document.documentElement.classList.add(\"perfect-scrollbar-off\");\r\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\r\n      }\r\n    };\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      let tables = document.querySelectorAll(\".table-responsive\");\r\n      for (let i = 0; i < tables.length; i++) {\r\n        ps = new PerfectScrollbar(tables[i]);\r\n      }\r\n    }\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    if (mainPanelRef.current) {\r\n      mainPanelRef.current.scrollTop = 0;\r\n    }\r\n  }, [location]);\r\n\r\n  const handleSidebarChange = () => {\r\n    setShowSidebar(!isShowSidebar);\r\n  };\r\n\r\n  const handleInstanceChange = (instance) => {\r\n    setSelectedInstance(instance)\r\n  }\r\n\r\n  const handleChartRedirect = (flag) => {\r\n    setViewType(flag)\r\n  }\r\n\r\n  const renderChart = (isShowSidebar, color) => {\r\n    let result = ''\r\n    switch (viewType) {\r\n      case 0:\r\n        result = <div className={`main-panel ${!isShowSidebar ? 'full-width' : ''}`} ref={mainPanelRef} data={color}>\r\n          <HeiknStockChart selectedInstance={selectedInstance} handleChartRedirect={handleChartRedirect}/>\r\n        </div>\r\n        break;\r\n      case 1:\r\n        result = <div className={`main-panel ${!isShowSidebar ? 'full-width' : ''}`} ref={mainPanelRef} data={color}>\r\n        <HeiknStockChartItem selectedInstance={selectedInstance} handleChartRedirect={handleChartRedirect}/>\r\n       </div>\r\n        break;\r\n      case 2:\r\n        result = <div className={`main-panel ${!isShowSidebar ? 'full-width' : ''}`} ref={mainPanelRef} data={color}>\r\n          <HeiknStockSlicedChart selectedInstance={selectedInstance} handleChartRedirect={handleChartRedirect}/>\r\n        </div>\r\n        break;\r\n      case 3:\r\n        result = <div className={`main-panel ${!isShowSidebar ? 'full-width' : ''}`} ref={mainPanelRef} data={color}>\r\n         <ChartWithNewApi selectedInstance={selectedInstance} handleChartRedirect={handleChartRedirect}></ChartWithNewApi>\r\n        </div>\r\n        break;\r\n    }\r\n    return result\r\n  }\r\n\r\n  return (\r\n    <BackgroundColorContext.Consumer>\r\n      {({ color }) => (\r\n        <React.Fragment>\r\n          <div className=\"wrapper hunter-wrapper\">\r\n            {!isShowSidebar && (\r\n              <Button\r\n                className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\r\n                onClick={handleSidebarChange}\r\n              >\r\n                <i className=\"tim-icons icon-align-left-2\"/>\r\n              </Button>\r\n            )}\r\n            {isShowSidebar && (\r\n              <Sidebar\r\n                subInstance={'view'}\r\n                isAdminPage={false}\r\n                routes={routes}\r\n                selectedInstance={selectedInstance}\r\n                handleSidebarChange={handleSidebarChange}\r\n                handleInstanceChange={handleInstanceChange}\r\n              />\r\n            )}\r\n            {renderChart(isShowSidebar, color)}\r\n\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </BackgroundColorContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default HomePage;","import React, { useCallback, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Select from 'react-select'\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport StockChart from \"./stock-chart/StockChart\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Collapse,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  NavLink,\r\n  Nav,\r\n} from \"reactstrap\";\r\nimport { useAuth } from 'contexts/authContext';\r\nimport disableScroll from 'disable-scroll';\r\nimport { getStrategyListReq, getTablesReq, getSymbolsByMicroStrategy, getIndicators } from 'api/Api'\r\n\r\nconst HeiknStockChart = (props) => {\r\n  const auth = useAuth();\r\n  const { selectedInstance, handleChartRedirect } = props\r\n  const history = useHistory();\r\n  const [symbol, setSymbol] = useState(null);//{ value: 'MSFT', label: 'MSFT' }\r\n  const [indicators, setIndicators] = useState([]);\r\n  const [isShowMicro, setIsShowMicro] = useState(true);\r\n  const [symbolList, setSymbolList] = useState([])\r\n  const [collapseOpen,] = React.useState(false)\r\n  const [chartColumn, setChartColumn] = useState({ value: 6, label: '6' })\r\n  const [assetClass, setAssetClass] = useState({ value: 'stock', label: 'stock' })\r\n  const [selectedViewType, setSelectedViewType] = useState({ value: 'charting', label: 'Charting' });\r\n  const [microStrategy, setMicroStrategy] = useState(null);\r\n  const [strategy, setStrategy] = useState(null);//{ value: 'heikfilter', label: 'heikfilter' }\r\n  const [strategyList, setStrategyList] = useState([]);\r\n  const [user] = useState(JSON.parse(localStorage.getItem('user-info')));\r\n  const [extendMarketTime, setExtendMarketTime] = useState(\r\n    {\r\n      value: 'markettime', label: 'market time',\r\n    }\r\n  );\r\n\r\n  const [selectedSymbolType, setSelectedSymbolType] = useState({\r\n    value: 'stock',\r\n    label: 'stock'\r\n  })\r\n\r\n  const [optionsAssetClass] = useState([\r\n    {\r\n      value: 'stock', label: 'stock',\r\n    },\r\n    {\r\n      value: 'crypto', label: 'crypto',\r\n    }\r\n  ])\r\n\r\n  const [optionsViewTypes, setOptionsViewTypes] = useState([\r\n    { value: 'charting', label: 'Charting' },\r\n    { value: 'performance', label: 'Performance' },\r\n    { value: 'sliced_charting', label: 'Sliced Chatting'},\r\n    { value: 'chart_with_new_api', label: 'Chart With New API6' },\r\n  ])\r\n\r\n  const [optionsMicroStrategy, setOptionsMicroStrategy] = useState([])\r\n\r\n  const [optionsStratgy, setOptionsStrategy] = useState([])\r\n\r\n  const [optionsIndicator, setOptionsIndicator] = useState([\r\n    {\r\n      value: 'volume', label: 'VOLUME',\r\n    },\r\n    {\r\n      value: 'rsi1', label: 'RSI1',\r\n    },\r\n    {\r\n      value: 'heik', label: 'HEIK1',\r\n    },\r\n    {\r\n      value: 'heik_diff', label: 'HEIK2',\r\n    }\r\n  ]);\r\n\r\n  const [optionsIndicatorExtend, setOptionsIndicatorExtend] = useState([]);\r\n\r\n  const [optionsMarketTime] = useState([\r\n    {\r\n      value: 'markettime', label: 'market time',\r\n    },\r\n    {\r\n      value: 'extend_markettime', label: 'extend market time',\r\n    }\r\n  ]);\r\n\r\n  const optionsColumn = [\r\n    {\r\n      value: 1, label: '1',\r\n    },\r\n    {\r\n      value: 2, label: '2',\r\n    },\r\n    {\r\n      value: 4, label: '4',\r\n    },\r\n    {\r\n      value: 6, label: '6',\r\n    }\r\n  ]\r\n\r\n  const getStrategyList = useCallback(\r\n    async () => {\r\n      const strategyListRes = await getStrategyListReq();\r\n      if (strategyListRes.success) {\r\n        const data = strategyListRes.data;\r\n        setStrategyList(data.result);\r\n        const strategyOptions = data.result.map((o => {\r\n          return {\r\n            value: o.macro,\r\n            label: o.macro,\r\n          }\r\n        }))\r\n        setOptionsStrategy(strategyOptions);\r\n        setStrategy(strategyOptions[0]);\r\n        if (data.result.length) {\r\n          let flag = true\r\n          let item = data.result[0]\r\n          if (flag) {\r\n            const microStrategyOptions = item.micro.map(o => {\r\n              return {\r\n                value: o,\r\n                label: o,\r\n              }\r\n            })\r\n\r\n            setOptionsMicroStrategy( microStrategyOptions )\r\n            setMicroStrategy(microStrategyOptions[0])\r\n\r\n            const result = await getSymbolsByMicroStrategy(strategyOptions[0].value, microStrategyOptions[0].value)\r\n            if (result.success) {\r\n              const symbolOptions = result.data.map(o => {\r\n                return {\r\n                  value: o,\r\n                  label: o,\r\n                }\r\n              })\r\n\r\n              setSymbolList(symbolOptions)\r\n              setSymbol(symbolOptions[0])\r\n            }\r\n          }\r\n          flag = false\r\n        }\r\n      }\r\n    },\r\n    [],\r\n  )\r\n\r\n  const get_tables = useCallback(\r\n    async (strategy) => {\r\n      const tablesRes = await getTablesReq(strategy);\r\n      if (tablesRes.success) {\r\n        const data = tablesRes.data;\r\n        let temp_data = []\r\n        data.tables.map((x) => {\r\n          temp_data.push({\r\n            value: x,\r\n            label: x\r\n          });\r\n          return null\r\n        })\r\n        setSymbolList(temp_data)\r\n      }\r\n    },\r\n    [],\r\n  )\r\n\r\n  useEffect(async () => {\r\n    const result = await getIndicators()\r\n    if (result.success) {\r\n      const indicatorList = result.data.map((o) => (\r\n        {\r\n          value: o,\r\n          label: o\r\n        }\r\n      ))\r\n      setOptionsIndicatorExtend(indicatorList)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    disableScroll.on();\r\n    return () => {\r\n      disableScroll.off();\r\n    }\r\n  }, [getStrategyList, user])\r\n\r\n  useEffect(() => {\r\n    const handleInstanceChange = (value) => {\r\n      if (value === 'live_trading') {\r\n        setIsShowMicro(false);\r\n        setStrategy({ value: 'no_strategy', label: 'No Strategy' });\r\n        setOptionsStrategy([\r\n          { value: 'no_strategy', label: 'No Srategy' },\r\n        ])\r\n        return\r\n      } else if (value === 'forward_test') {\r\n        // setStrategy({ value: 'heikfilter', label: 'heikfilter' });\r\n        // setSymbol({ value: 'MSFT', label: 'MSFT' });\r\n      }\r\n      getStrategyList()\r\n      setIsShowMicro(true);\r\n    }\r\n    if (!user.is_admin && !user?.role.length) {\r\n      return;\r\n    }\r\n    handleInstanceChange(selectedInstance)\r\n    if(selectedInstance === 'live_trading') {\r\n      get_tables('no_strategy');\r\n    }\r\n    if (selectedInstance === 'optimization') {\r\n      setOptionsViewTypes([\r\n        { value: 'optimization ', label: 'Optimization' },\r\n      ])\r\n    } else {\r\n      setOptionsViewTypes([\r\n        { value: 'charting', label: 'Charting' },\r\n        { value: 'performance', label: 'Performance' },\r\n        { value: 'sliced_charting', label: 'Sliced Chatting'},\r\n        { value: 'chart_with_new_api', label: 'Chart With New API5' },\r\n      ])\r\n    }\r\n  }, [selectedInstance, getStrategyList, get_tables, user.is_admin, user.role?.length])\r\n\r\n  const handleViewTypeChange = (value) => {\r\n    setSelectedViewType(value)\r\n    if (value.value === 'performance') {\r\n      const locationState = {\r\n        selectedInstance,\r\n        viewType: value,\r\n        initStrategy: strategy,\r\n        initMicroStrategy: microStrategy,//{ value: '2m', label: '2m' }\r\n        initIndicators: indicators,\r\n        initSymbol: symbol,\r\n      }\r\n      if (value) {\r\n        handleChartRedirect(1)\r\n        history.push({\r\n          state: locationState,\r\n        });\r\n      }\r\n    } else if (value.value === 'sliced_charting') {\r\n      handleChartRedirect(2)\r\n    } else if (value.value == 'chart_with_new_api') {\r\n      handleChartRedirect(3)\r\n    }\r\n  }\r\n\r\n  const handlSymbolChange = (e) => {\r\n    if (e) {\r\n      setSymbol(e)\r\n    }\r\n  }\r\n\r\n  const handleMarketTimeChange = (e) => {\r\n    if (e) {\r\n      setExtendMarketTime(e)\r\n    }\r\n  }\r\n\r\n  const handleStrategy = async (e) => {\r\n    if (e) {\r\n      if (strategyList.length) {\r\n        strategyList.forEach((item) => {\r\n          if (item.macro === e.value) {\r\n            const microStrategyOptions = item.micro.map(o => {\r\n              return {\r\n                value: o,\r\n                label: o,\r\n              }\r\n            })\r\n            setOptionsMicroStrategy( microStrategyOptions )\r\n\r\n            const is_2m = microStrategyOptions.filter((o => o.value === '2m'))\r\n\r\n            if (is_2m.length) {\r\n              setMicroStrategy({\r\n                value: '2m',\r\n                label: '2m'\r\n              })\r\n            } else {\r\n              setMicroStrategy(microStrategyOptions[0])\r\n            }\r\n\r\n            const symbolOptions = item.symbols.map(o => {\r\n              return {\r\n                value: o,\r\n                label: o,\r\n              }\r\n            })\r\n\r\n            setSymbolList(symbolOptions)\r\n            setSymbol(symbolOptions[0])\r\n            // setSymbol({value: 'MSFT', label: 'MSFT'})\r\n          }\r\n        })\r\n      }\r\n      setStrategy(e)\r\n    }\r\n  }\r\n\r\n  const handleMicroStrategyChange = async (e) => {\r\n    if (e) {\r\n      setMicroStrategy(e)\r\n      const result = await getSymbolsByMicroStrategy(strategy.value, e.value)\r\n      if (result.success) {\r\n        const symbolOptions = result.data.map(o => {\r\n          return {\r\n            value: o,\r\n            label: o,\r\n          }\r\n        })\r\n\r\n        setSymbolList(symbolOptions)\r\n        setSymbol(symbolOptions[0])\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleIndicatorsChange = (options) => {\r\n    setIndicators(options);\r\n  }\r\n\r\n  const handleChartsColumnChange = (option) => {\r\n    if (option.value === 4 || option.value === 6) {\r\n      setIndicators([])\r\n      setOptionsIndicator([\r\n        {\r\n          value: 'volume', label: 'VOLUME',\r\n        },\r\n        {\r\n          value: 'rsi1', label: 'RSI1',\r\n        },\r\n        {\r\n          value: 'heik', label: 'HEIK1',\r\n        },\r\n        {\r\n          value: 'heik_diff', label: 'HEIK2',\r\n        }\r\n      ])\r\n    } else {\r\n      setIndicators([])\r\n      setOptionsIndicator(optionsIndicatorExtend)\r\n    }\r\n    setChartColumn(option)\r\n  }\r\n\r\n  const calculateHeightStyle = () => {\r\n    if (chartColumn.value === 1 || chartColumn.value === 2) {\r\n      return 'full-height'\r\n    }\r\n    return 'half-height'\r\n  }\r\n\r\n  const calculateGridColumn = () => {\r\n    if (chartColumn.value === 1) {\r\n      return 12\r\n    } else if ((chartColumn.value === 2) || (chartColumn.value === 4)) {\r\n      return 6\r\n    }\r\n    return 4\r\n  }\r\n\r\n  const handleSymbolTypeChange = (e) => {\r\n    setSelectedSymbolType(e)\r\n  }\r\n\r\n  const handleSignout = () => {\r\n    auth.signout()\r\n    history.push('/login')\r\n  }\r\n\r\n  const handleAssetClass = () => {\r\n\r\n  }\r\n\r\n  const displayChart = () => {\r\n    return (\r\n      <div className={`row ${calculateHeightStyle()}`}>\r\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\r\n          {microStrategy && symbol && (\r\n            < StockChart\r\n              selectedSymbolType={selectedSymbolType.value}\r\n              extendMarketTime={extendMarketTime.value}\r\n              selectedInstance={selectedInstance}\r\n              selectedTradeDB='heikfilter-2mins-trades'\r\n              chartPeriod='20D 2min'\r\n              symbol={symbol.value}\r\n              indicators={indicators}\r\n              strategy={strategy}\r\n              isHomePage={true}\r\n              chartColumn={chartColumn.value}\r\n              microStrategy={microStrategy.value}\r\n              startDate={null}\r\n              endDate={null}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\r\n          {microStrategy && symbol && (\r\n            < StockChart\r\n            extendMarketTime={extendMarketTime.value}\r\n            selectedInstance={selectedInstance}\r\n            selectedTradeDB='heikfilter-12mins-trades'\r\n            chartPeriod='20D 12min'\r\n            symbol={symbol.value}\r\n            indicators={indicators}\r\n            strategy={strategy}\r\n            isHomePage={true}\r\n            chartColumn={chartColumn.value}\r\n            microStrategy={microStrategy.value}\r\n            startDate={null}\r\n            endDate={null}\r\n          />)}\r\n        </div>\r\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\r\n          {microStrategy && symbol && (\r\n            < StockChart\r\n              extendMarketTime={extendMarketTime.value}\r\n              selectedInstance={selectedInstance}\r\n              selectedTradeDB='heikfilter-1hour-trades'\r\n              chartPeriod='30D 1hour'\r\n              symbol={symbol.value}\r\n              indicators={indicators}\r\n              strategy={strategy}\r\n              isHomePage={true}\r\n              chartColumn={chartColumn.value}\r\n              microStrategy={microStrategy.value}\r\n              startDate={null}\r\n              endDate={null}\r\n            />)}\r\n        </div>\r\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\r\n          {microStrategy && symbol && (\r\n            < StockChart\r\n              extendMarketTime={extendMarketTime.value}\r\n              selectedInstance={selectedInstance}\r\n              selectedTradeDB='heikfilter-4hours-trades'\r\n              chartPeriod='90D 4hour'\r\n              symbol={symbol.value}\r\n              indicators={indicators}\r\n              strategy={strategy}\r\n              isHomePage={true}\r\n              chartColumn={chartColumn.value}\r\n              microStrategy={microStrategy.value}\r\n              startDate={null}\r\n              endDate={null}\r\n            />)}\r\n        </div>\r\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\r\n          {microStrategy && symbol && (\r\n            < StockChart\r\n              extendMarketTime={extendMarketTime.value}\r\n              selectedInstance={selectedInstance}\r\n              selectedTradeDB='heikfilter-12hours-trades'\r\n              chartPeriod='90D 12hour'\r\n              symbol={symbol.value}\r\n              indicators={indicators}\r\n              strategy={strategy}\r\n              isHomePage={true}\r\n              chartColumn={chartColumn.value}\r\n              microStrategy={microStrategy.value}\r\n              startDate={null}\r\n              endDate={null}\r\n            />)}\r\n        </div>\r\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\r\n          {microStrategy && symbol && (\r\n          < StockChart\r\n            extendMarketTime={extendMarketTime.value}\r\n            selectedInstance={selectedInstance}\r\n            selectedTradeDB='heikfilter-1day-trades'\r\n            chartPeriod='1Y 1day'\r\n            symbol={symbol.value}\r\n            indicators={indicators}\r\n            strategy={strategy}\r\n            isHomePage={true}\r\n            chartColumn={chartColumn.value}\r\n            microStrategy={microStrategy.value}\r\n            startDate={null}\r\n            endDate={null}\r\n          />)}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const handleAssetClassChange = (e) => {\r\n    setAssetClass(e)\r\n    return\r\n  }\r\n\r\n  return (\r\n    <div className=\"hunter-chart-container\">\r\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark hunter-nav-bar\">\r\n        <div className=\"logo-title\">\r\n          <a href=\"/chart\" className=\"hunter-navbar-brand\">\r\n            Violette AM - Client Portal\r\n          </a>\r\n        </div>\r\n        {(user.is_admin || (user.role?.length)) && (\r\n          <div className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/chart\"} className=\"nav-link\"></Link>\r\n            </li>\r\n            <div className=\"select-option\">\r\n              <Select\r\n                value={selectedViewType}\r\n                onChange={handleViewTypeChange}\r\n                options={optionsViewTypes}\r\n                placeholder=\"Charting\"\r\n              />\r\n            </div>\r\n            <div className=\"select-option\">\r\n              <Select\r\n                value={extendMarketTime}\r\n                onChange={handleMarketTimeChange}\r\n                options={optionsMarketTime}\r\n                placeholder=\"Market Time\"\r\n              />\r\n            </div>\r\n            {/* <div className=\"select-option\">\r\n              <Select\r\n                value={selectedSymbolType}\r\n                onChange={handleSymbolTypeChange}\r\n                options={optionsSymbolType}\r\n                placeholder=\"Select Symbol Type\"\r\n              />\r\n            </div> */}\r\n            <div className=\"select-option\">\r\n              <Select\r\n                value={strategy}\r\n                onChange={handleStrategy}\r\n                options={optionsStratgy}\r\n                placeholder=\"Macro Strategy\"\r\n              />\r\n            </div>\r\n            {isShowMicro && (\r\n              <div className=\"select-option\">\r\n                <Select\r\n                  value={microStrategy}\r\n                  onChange={handleMicroStrategyChange}\r\n                  options={optionsMicroStrategy}\r\n                  placeholder=\"Micro Strategy\"\r\n                />\r\n              </div>\r\n            )}\r\n            <div className=\"select-option\">\r\n              <Select\r\n                value={symbol}\r\n                onChange={handlSymbolChange}\r\n                options={symbolList}\r\n                placeholder=\"Symbol\"\r\n              />\r\n            </div>\r\n            <div className=\"select-multi-option\">\r\n              <Select\r\n                name=\"filters\"\r\n                placeholder=\"Indicators\"\r\n                value={indicators}\r\n                onChange={handleIndicatorsChange}\r\n                options={optionsIndicator}\r\n                isMulti={true}\r\n              />\r\n            </div>\r\n            <div className=\"select-option\">\r\n              <Select\r\n                value={chartColumn}\r\n                onChange={handleChartsColumnChange}\r\n                options={optionsColumn}\r\n                placeholder=\"Columns\"\r\n              />\r\n            </div>\r\n            {/* <div className=\"select-option\">\r\n              <Select\r\n                value={assetClass}\r\n                onChange={handleAssetClassChange}\r\n                options={optionsAssetClass}\r\n                placeholder=\"Asset Class\"\r\n              />\r\n            </div> */}\r\n          </div>\r\n        )}\r\n        <Collapse navbar isOpen={collapseOpen}>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <UncontrolledDropdown>\r\n                <DropdownToggle\r\n                  caret\r\n                  color=\"default\"\r\n                  nav\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  <div className=\"photo\">\r\n                    <img\r\n                      alt=\"...\"\r\n                      src={require(\"assets/img/anime3.png\").default}\r\n                    />\r\n                  </div>\r\n                  <p className=\"d-lg-none\">Log out</p>\r\n                </DropdownToggle>\r\n                <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\r\n                  <DropdownItem divider tag=\"li\" />\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\" onClick={() => {\r\n                      handleSignout()\r\n                    }}>Log out</DropdownItem>\r\n                  </NavLink>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n              <li className=\"separator d-lg-none\" />\r\n            </Nav>\r\n          </Collapse>\r\n      </nav>\r\n      {!user.is_admin && !user?.role.length\r\n        ? (<div className=\"development-in-content dark\">\r\n            No Permission\r\n          </div>)\r\n        : selectedInstance === 'stress_test' || selectedInstance === 'optimization'\r\n        ? (<div className=\"development-in-content dark\">\r\n          In development\r\n        </div>)\r\n        : (<div className=\"graphs-container dark\">\r\n          {displayChart()}\r\n        </div>)\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeiknStockChart;","import React, { useState } from 'react'\r\nimport { Range } from 'rc-slider';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport moment from 'moment'\r\n\r\nimport 'rc-slider/assets/index.css';\r\n\r\nexport default (props) => {\r\n  const { selectDateRange } = props\r\n  const startedDate = moment().subtract(365, 'days').format(\"YYYY-MM-DD\")\r\n  const endedDate = moment().format(\"YYYY-MM-DD\")\r\n  const [tradeStartDate, setTradeStartDate] = useState(startedDate);\r\n  const [tradeEndDate, setTradeEndDate ] = useState(endedDate)\r\n  \r\n  const handleDateRangeChange = (rangeValue, isFlag) => {\r\n    const startDate = moment(startedDate, \"YYYY-MM-DD\").add(rangeValue[0], 'days').format(\"YYYY-MM-DD\")\r\n    const endDate = moment(startedDate, \"YYYY-MM-DD\").add(rangeValue[1], 'days').format(\"YYYY-MM-DD\")\r\n    setTradeStartDate(startDate)\r\n    setTradeEndDate(endDate)\r\n\r\n    if ( isFlag ) {\r\n      selectDateRange(startDate, endDate)  \r\n    }\r\n  }\r\n  \r\n  return (\r\n    <Form.Group as={Row} className=\"hunter-multi-range-area\">\r\n      <input \r\n        type='text'\r\n        className=\"hunter-form-control-input\"\r\n        value={tradeStartDate}\r\n        disabled\r\n      />\r\n      <Range\r\n        min={0}\r\n        max={365}\r\n        defaultValue={[0, 365]}\r\n        step={1}\r\n        onChange={(value) => {\r\n          handleDateRangeChange(value, false)\r\n        }}\r\n        onAfterChange={(value) => {\r\n          handleDateRangeChange(value, true)\r\n        }}\r\n      />\r\n      <input \r\n        type='text'\r\n        className=\"hunter-form-control-input\"\r\n        value={tradeEndDate}\r\n        disabled\r\n      />    \r\n    </Form.Group>\r\n)};","import React, { useCallback, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Select from 'react-select'\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport StockChart from \"./stock-chart/StockChart\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport disableScroll from 'disable-scroll';\r\n\r\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\r\nimport MultiRangeSlider from 'components/MultiRangeSlider/MultiRangeSlider'\r\nimport { getSymbolsByMicroStrategy, getIndicators } from 'api/Api'\r\n\r\nconst HeiknStockChartItem = (props) => {\r\n\r\n  const { selectedInstance, handleChartRedirect } = props\r\n  const history = useHistory();\r\n  const { viewType, initStrategy, initMicroStrategy, initIndicators, initSymbol } = history.location.state\r\n\r\n  const [selectedViewType, setSelectedViewType] = useState(\r\n    viewType\r\n    ? viewType\r\n    : { value: 'charting', label: 'Charting' }\r\n  );\r\n\r\n  const [symbol, setSymbol] = useState(initSymbol)\r\n  const [multiSymbol, setMultiSymbol] = useState([initSymbol])\r\n  const [strategy, setStrategy] = useState(initStrategy ? initStrategy : {})\r\n  const [symbolList, setSymbolList] = useState([])\r\n  const [microStrategy, setMicroStrategy] = useState(initMicroStrategy ? initMicroStrategy: null)\r\n  const [indicators, setIndicators] = useState(initIndicators)\r\n  const [apiFlag, setApiFlag] = useState(false)\r\n  const [tradeStartDate, setTradeStartDate] = useState('')\r\n  const [tradeEndDate, setTradeEndDate] = useState('')\r\n  const [strategyList, setStrategyList] = useState([]);\r\n\r\n  const [optionsViewTypes, setOptionsViewTypes] = useState([\r\n    { value: 'charting', label: 'Charting' },\r\n    { value: 'performance', label: 'Performance' },\r\n    { value: 'sliced_charting', label: 'Sliced Chatting'},\r\n    { value: 'chart_with_new_api', label: 'Chart With New API2' },\r\n  ])\r\n\r\n  const [optionsMicroStrategy, setOptionsMicroStrategy] = useState([])\r\n\r\n  const [optionsStratgy, setOptionsStrategy] = useState([])\r\n\r\n  const optionsSymbolType = [\r\n    {\r\n      value: 'stock', label: 'stock',\r\n    },\r\n    {\r\n      value: 'crypto', label: 'crypto',\r\n    }\r\n  ]\r\n\r\n  const [optionsIndicator, setOptionsIndicator] = useState([\r\n    {\r\n      value: 'volume', label: 'VOLUME',\r\n    },\r\n    {\r\n      value: 'rsi', label: 'RSI',\r\n    },\r\n    {\r\n      value: 'macd', label: 'MACD',\r\n    },\r\n    {\r\n      value: 'sma', label: 'SMA',\r\n    }\r\n  ])\r\n\r\n  const getStrategyList = useCallback(\r\n    () => {\r\n      fetch(process.env.REACT_APP_BACKEND_URL + \"/api/get_strategy_list\")\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          setStrategyList(data.result);\r\n          const strategyOptions = data.result.map((o => {\r\n            return {\r\n              value: o.macro,\r\n              label: o.macro,\r\n            }\r\n          }))\r\n          setOptionsStrategy(strategyOptions);\r\n          if (data.result.length) {\r\n            let item = data.result[0]\r\n                const microStrategyOptions = item.micro.map(o => {\r\n                  return {\r\n                    value: o,\r\n                    label: o,\r\n                  }\r\n                })\r\n                setOptionsMicroStrategy( microStrategyOptions )\r\n\r\n                const symbolOptions = item.symbols.map(o => {\r\n                  return {\r\n                    value: o,\r\n                    label: o,\r\n                  }\r\n                })\r\n                setSymbolList([{ label: \"All\", value: \"*\" }, ...symbolOptions]);\r\n                // setSymbol(symbolOptions[0])\r\n          }\r\n        })\r\n    },\r\n    [],\r\n  )\r\n\r\n  useEffect(async () => {\r\n    const result = await getIndicators()\r\n    if (result.success) {\r\n      const indicatorList = result.data.map((o) => (\r\n        {\r\n          value: o,\r\n          label: o\r\n        }\r\n      ))\r\n      setOptionsIndicator(indicatorList)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem('user-info'))\r\n    if (user.is_admin || user.role.length) {\r\n      getStrategyList();\r\n    }\r\n    disableScroll.on();\r\n    return () => {\r\n      disableScroll.off();\r\n    }\r\n  }, [getStrategyList])\r\n\r\n  useEffect(() => {\r\n    if (selectedInstance.value === 'optimization') {\r\n      setOptionsViewTypes([\r\n        { value: 'optimization', label: 'Optimization' },\r\n      ])\r\n    } else {\r\n      setOptionsViewTypes([\r\n        { value: 'charting', label: 'Charting' },\r\n        { value: 'performance', label: 'Performance' },\r\n        { value: 'sliced_charting', label: 'Sliced Chatting'},\r\n        { value: 'chart_with_new_api', label: 'Chart With New API1' },\r\n      ])\r\n    }\r\n  }, [selectedInstance])\r\n\r\n  useEffect(() => {\r\n    const get_tables = () => {\r\n      try {\r\n        const requestOptions = {\r\n          method: 'POST',\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n            'strategy': strategy.value\r\n          })\r\n        };\r\n        fetch(process.env.REACT_APP_BACKEND_URL + \"/api/tables\", requestOptions)\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            let temp_data = []\r\n            data.tables.map((x) => {\r\n              temp_data.push({\r\n                value: x,\r\n                label: x\r\n              });\r\n              return null\r\n            })\r\n            setSymbolList([{ label: \"All\", value: \"*\" }, ...temp_data]);\r\n          })\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n    if (!apiFlag) {\r\n      setMicroStrategy(microStrategy)\r\n      get_tables();\r\n      setApiFlag(true)\r\n    }\r\n  }, [setMicroStrategy, apiFlag, microStrategy, setApiFlag, strategy.value])\r\n\r\n  const handleViewTypeChange = (e) => {\r\n    setSelectedViewType(e)\r\n    if (e.value === 'charting') {\r\n      handleChartRedirect(0)\r\n    } else if (e.value === 'sliced_charting') {\r\n      handleChartRedirect(2)\r\n    } else if (e.value === 'chart_with_new_api') {\r\n      handleChartRedirect(3)\r\n    }\r\n  }\r\n\r\n  const handlSymbolChange = (e) => {\r\n    if (e) {\r\n        setSymbol(e)\r\n    }\r\n  }\r\n\r\n  const handlMultiSymbolChange = (e, event) => {\r\n    if (event.action === 'select-option' && event.option.value === '*') {\r\n      setMultiSymbol(symbolList)\r\n    } else if (event.action === 'deselect-option' && event.option.value === '*') {\r\n      setMultiSymbol([])\r\n    } else if (event.action === 'deselect-option') {\r\n      setMultiSymbol(e.filter((o) => o.value !== '*'))\r\n    }\r\n    else if (e.length === symbolList.length - 1) {\r\n      setMultiSymbol(symbolList)\r\n    } else {\r\n      setMultiSymbol(e)\r\n    }\r\n  }\r\n\r\n  const handleStrategyChange = async (e) => {\r\n    if (e) {\r\n      setStrategy(e)\r\n      if (strategyList.length) {\r\n        strategyList.forEach((item) => {\r\n          if (item.macro === e.value) {\r\n            const microStrategyOptions = item.micro.map(o => {\r\n              return {\r\n                value: o,\r\n                label: o,\r\n              }\r\n            })\r\n            setOptionsMicroStrategy( microStrategyOptions )\r\n\r\n            const is_2m = microStrategyOptions.filter((o => o.value === '2m'))\r\n            if (is_2m.length) {\r\n              setMicroStrategy({\r\n                value: '2m',\r\n                label: '2m'\r\n              })\r\n            } else {\r\n              setMicroStrategy(microStrategyOptions[0])\r\n            }\r\n\r\n            const symbolOptions = item.symbols.map(o => {\r\n              return {\r\n                value: o,\r\n                label: o,\r\n              }\r\n            })\r\n            setSymbolList([{ label: \"All\", value: \"*\" }, ...symbolOptions]);\r\n            setSymbol(symbolOptions[0])\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleIndicatorsChange = (options) => {\r\n    setIndicators(options);\r\n  }\r\n\r\n  const handleMicroStrategyChange = async (e) => {\r\n    setMicroStrategy(e);\r\n    const result = await getSymbolsByMicroStrategy(strategy.value, e.value)\r\n      if (result.success) {\r\n        const symbolOptions = result.data.map(o => {\r\n          return {\r\n            value: o,\r\n            label: o,\r\n          }\r\n        })\r\n\r\n        if (selectedViewType.value !== 'performance') {\r\n          setSymbolList(symbolOptions)\r\n          setSymbol(symbolOptions[0])\r\n        } else {\r\n          setSymbolList([{ label: \"All\", value: \"*\" }, ...symbolOptions]);\r\n          if (symbolOptions.length) {\r\n            setMultiSymbol([symbolOptions[0]])\r\n          } else {\r\n            setMultiSymbol([])\r\n          }\r\n        }\r\n      }\r\n  }\r\n\r\n  const selectDateRange = (startDate, endDate) => {\r\n    setTradeStartDate(startDate)\r\n    setTradeEndDate(endDate)\r\n  }\r\n\r\n  return (\r\n    <div className=\"hunter-chart-container\">\r\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark hunter-nav-bar\">\r\n        <div className=\"logo-title\">\r\n          <a href=\"/chart\" className=\"hunter-navbar-brand\">\r\n            Violette AM - Client Portal\r\n          </a>\r\n        </div>\r\n        <div className=\"navbar-nav ma-auto hunter-nav-bar-nav\">\r\n          <li className=\"nav-item\">\r\n            <Link to={\"/chart\"} className=\"nav-link\"></Link>\r\n          </li>\r\n          <div className=\"select-option\">\r\n            <Select\r\n              value={selectedViewType}\r\n              onChange={handleViewTypeChange}\r\n              options={optionsViewTypes}\r\n              placeholder=\"Charting\"\r\n            />\r\n          </div>\r\n          {selectedViewType.value !== 'performance'\r\n            ? (<div className=\"select-option\">\r\n              <Select\r\n                  value={symbol}\r\n                  onChange={handlSymbolChange}\r\n                  options={symbolList}\r\n              />\r\n                </div>)\r\n            : (<div className=\"select-multi-option hunter-multi-select-checkboxes\">\r\n                <ReactMultiSelectCheckboxes\r\n                  options={symbolList}\r\n                  value={multiSymbol}\r\n                  onChange={handlMultiSymbolChange}\r\n                />\r\n              </div>)\r\n          }\r\n          {/* <div className=\"select-option\">\r\n            <Select\r\n              value={selectedSymbolType}\r\n              onChange={handleSymbolTypeChange}\r\n              options={optionsSymbolType}\r\n              placeholder=\"Select Symbol Type\"\r\n            />\r\n          </div> */}\r\n          {(selectedInstance.value !== 'live_trading') &&\r\n            (<div className=\"select-option\">\r\n                <Select\r\n                  value={strategy}\r\n                  onChange={handleStrategyChange}\r\n                  options={optionsStratgy}\r\n                  placeholder=\"Macro Strategy\"\r\n                />\r\n            </div>)\r\n          }\r\n          {selectedInstance.value !== 'live_trading' &&\r\n            (<div className=\"select-option\">\r\n              <Select\r\n                name=\"filters\"\r\n                placeholder=\"Micro Strategy\"\r\n                value={microStrategy}\r\n                onChange={handleMicroStrategyChange}\r\n                options={optionsMicroStrategy}\r\n              />\r\n            </div>)\r\n          }\r\n          {selectedViewType.value !== 'performance' &&\r\n            (<div className=\"select-multi-option\">\r\n              <Select\r\n                name=\"filters\"\r\n                placeholder=\"Indicators\"\r\n                value={indicators}\r\n                onChange={handleIndicatorsChange}\r\n                options={optionsIndicator}\r\n                isMulti={true}\r\n              />\r\n            </div>)\r\n          }\r\n          <div className='date hunter-item-chart hunter-date-time-picker' id='datetimepicker1'>\r\n            <MultiRangeSlider\r\n              selectDateRange={selectDateRange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      <div className=\"graphs-container dark\">\r\n        {multiSymbol && viewType && (\r\n          < StockChart\r\n            selectedInstance ={selectedInstance.value}\r\n            viewType={selectedViewType.value}\r\n            microStrategy={microStrategy.value}\r\n            symbol={symbol.value}\r\n            multiSymbol={multiSymbol}\r\n            indicators={indicators}\r\n            strategy={strategy}\r\n            isHomePage={false}\r\n            startDate={tradeStartDate}\r\n            endDate={tradeEndDate}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeiknStockChartItem;\r\n","import React, { useCallback, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Select from 'react-select'\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport StockChart from \"./stock-chart/StockChart\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Collapse,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  NavLink,\r\n  Nav,\r\n} from \"reactstrap\";\r\nimport { useAuth } from 'contexts/authContext';\r\nimport disableScroll from 'disable-scroll';\r\n\r\nconst HeiknStockSlicedChart = (props) => {\r\n\r\n  const auth = useAuth();\r\n  const { selectedInstance, handleChartRedirect } = props\r\n  const history = useHistory();\r\n  const [symbol, setSymbol] = useState(null);\r\n  const [indicators, setIndicators] = useState([]);\r\n  const [isShowMicro, setIsShowMicro] = useState(true);\r\n  const [symbolList, setSymbolList] = useState([])\r\n  const [collapseOpen,] = React.useState(false)\r\n  const [chartColumn, setChartColumn] = useState({ value: 6, label: '6' })\r\n  const [selectedViewType, setSelectedViewType] = useState({ value: 'sliced_charting', label: 'Sliced Charting' });\r\n  const [microStrategy, setMicroStrategy] = useState(null);\r\n  const [strategy, setStrategy] = useState(null);\r\n  const [strategyList, setStrategyList] = useState([]);\r\n  const [user] = useState(JSON.parse(localStorage.getItem('user-info')));\r\n  const [extendMarketTime, setExtendMarketTime] = useState(\r\n    {\r\n      value: 'markettime', label: 'market time',\r\n    }\r\n  );\r\n\r\n  const [selectedSymbolType, setSelectedSymbolType] = useState({\r\n    value: 'stock',\r\n    label: 'stock'\r\n  })\r\n\r\n  const optionsSymbolType = [\r\n    {\r\n      value: 'stock', label: 'stock',\r\n    },\r\n    {\r\n      value: 'crypto', label: 'crypto',\r\n    }\r\n  ]\r\n\r\n  const [optionsViewTypes, setOptionsViewTypes] = useState([\r\n    { value: 'charting', label: 'Charting' },\r\n    { value: 'performance', label: 'Performance' },\r\n    { value: 'sliced_charting', label: 'Sliced Charting' },\r\n    { value: 'chart_with_new_api', label: 'Chart With New API4' },\r\n  ])\r\n\r\n  const [optionsMicroStrategy, setOptionsMicroStrategy] = useState([])\r\n\r\n  const [optionsStratgy, setOptionsStrategy] = useState([])\r\n\r\n  const [optionsIndicator, setOptionsIndicator] = useState([\r\n    {\r\n      value: 'volume', label: 'VOLUME',\r\n    },\r\n    {\r\n      value: 'rsi1', label: 'RSI',\r\n    },\r\n    {\r\n      value: 'heik', label: 'HEIK1',\r\n    },\r\n    {\r\n      value: 'heik_diff', label: 'HEIK2',\r\n    }\r\n  ]);\r\n\r\n  const [optionsMarketTime] = useState([\r\n    {\r\n      value: 'markettime', label: 'market time',\r\n    },\r\n    {\r\n      value: 'extend_markettime', label: 'extend market time',\r\n    }\r\n  ]);\r\n\r\n  const optionsColumn = [\r\n    {\r\n      value: 1, label: '1',\r\n    },\r\n    {\r\n      value: 2, label: '2',\r\n    },\r\n    {\r\n      value: 4, label: '4',\r\n    },\r\n    {\r\n      value: 6, label: '6',\r\n    }\r\n  ]\r\n\r\n  const getStrategyList = useCallback(\r\n    () => {\r\n      try {\r\n        fetch(process.env.REACT_APP_BACKEND_URL + \"/api/get_strategy_list\")\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            console.log('data???', data)\r\n            setStrategyList(data.result);\r\n            const strategyOptions = data.result.map((o => {\r\n              return {\r\n                value: o.macro,\r\n                label: o.macro,\r\n              }\r\n            }))\r\n            // setStrategy({\r\n            //   value: 'heikfilter',\r\n            //   label: 'heikfilter'\r\n            // });\r\n            setOptionsStrategy(strategyOptions);\r\n            setStrategy(strategyOptions[0]);\r\n            if (data.result.length) {\r\n              let item = data.result[0]\r\n              const microStrategyOptions = item.micro.map(o => {\r\n                return {\r\n                  value: o,\r\n                  label: o,\r\n                }\r\n              })\r\n              setOptionsMicroStrategy( microStrategyOptions )\r\n              setMicroStrategy(microStrategyOptions[0])\r\n\r\n              const symbolOptions = item.symbols.map(o => {\r\n                return {\r\n                  value: o,\r\n                  label: o,\r\n                }\r\n              })\r\n              setSymbolList(symbolOptions)\r\n              setSymbol(symbolOptions[0])\r\n            }\r\n          })\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    },\r\n    [],\r\n  )\r\n\r\n  const get_tables = useCallback(\r\n    (strategy) => {\r\n      const requestOptions = {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n          'strategy': strategy\r\n        })\r\n      };\r\n\r\n      fetch(process.env.REACT_APP_BACKEND_URL + \"/api/tables\", requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          let temp_data = []\r\n          data.tables.map((x) => {\r\n            temp_data.push({\r\n              value: x,\r\n              label: x\r\n            });\r\n            return null\r\n          })\r\n          setSymbolList(temp_data)\r\n          // setSymbol(temp_data[0])\r\n        })\r\n    },\r\n    [],\r\n  )\r\n\r\n  useEffect(() => {\r\n    disableScroll.on();\r\n    return () => {\r\n      disableScroll.off();\r\n    }\r\n  }, [getStrategyList, user])\r\n\r\n  useEffect(() => {\r\n    const handleInstanceChange = (value) => {\r\n      if (value === 'live_trading') {\r\n        setIsShowMicro(false);\r\n        setStrategy({ value: 'no_strategy', label: 'No Strategy' });\r\n        setOptionsStrategy([\r\n          { value: 'no_strategy', label: 'No Srategy' },\r\n        ])\r\n        return\r\n      } else if (value === 'forward_test') {\r\n        // setStrategy({ value: 'heikfilter', label: 'heikfilter' });\r\n        // setSymbol({ value: 'MSFT', label: 'MSFT' });\r\n      }\r\n      getStrategyList()\r\n      setIsShowMicro(true);\r\n    }\r\n    if (!user.is_admin && !user?.role.length) {\r\n      return;\r\n    }\r\n    handleInstanceChange(selectedInstance)\r\n    if(selectedInstance === 'live_trading') {\r\n      get_tables('no_strategy');\r\n    }\r\n    if (selectedInstance === 'optimization') {\r\n      setOptionsViewTypes([\r\n        { value: 'optimization ', label: 'Optimization' },\r\n      ])\r\n    } else {\r\n      setOptionsViewTypes([\r\n        { value: 'charting', label: 'Charting' },\r\n        { value: 'performance', label: 'Performance' },\r\n        { value: 'sliced_charting', label: 'Sliced Charting' },\r\n        { value: 'chart_with_new_api', label: 'Chart With New API3' },\r\n      ])\r\n    }\r\n  }, [selectedInstance, getStrategyList, get_tables, user.is_admin, user.role?.length])\r\n\r\n  const handleViewTypeChange = (value) => {\r\n    setSelectedViewType(value)\r\n    if (value.value === 'performance') {\r\n      const locationState = {\r\n        selectedInstance,\r\n        viewType: value,\r\n        initStrategy: strategy,\r\n        initMicroStrategy: microStrategy,//{ value: '2m', label: '2m' }\r\n        initIndicators: indicators,\r\n        initSymbol: symbol,\r\n      }\r\n      if (value) {\r\n        handleChartRedirect(1)\r\n        history.push({\r\n          state: locationState,\r\n        });\r\n      }\r\n    } else if (value.value === 'charting') {\r\n      handleChartRedirect(0)\r\n    } else if (value.value === 'chart_with_new_api') {\r\n      handleChartRedirect(3)\r\n    }\r\n  }\r\n\r\n  const handlSymbolChange = (e) => {\r\n    if (e) {\r\n      setSymbol(e)\r\n    }\r\n  }\r\n\r\n  const handleMarketTimeChange = (e) => {\r\n    if (e) {\r\n      setExtendMarketTime(e)\r\n    }\r\n  }\r\n\r\n  const handleStrategy = async (e) => {\r\n    if (e) {\r\n      if (strategyList.length) {\r\n        strategyList.forEach((item) => {\r\n          if (item.macro === e.value) {\r\n            const microStrategyOptions = item.micro.map(o => {\r\n              return {\r\n                value: o,\r\n                label: o,\r\n              }\r\n            })\r\n            setOptionsMicroStrategy( microStrategyOptions )\r\n\r\n            const is_2m = microStrategyOptions.filter((o => o.value === '2m'))\r\n\r\n            if (is_2m.length) {\r\n              setMicroStrategy({\r\n                value: '2m',\r\n                label: '2m'\r\n              })\r\n            } else {\r\n              setMicroStrategy(microStrategyOptions[0])\r\n            }\r\n\r\n            const symbolOptions = item.symbols.map(o => {\r\n              return {\r\n                value: o,\r\n                label: o,\r\n              }\r\n            })\r\n            setSymbolList(symbolOptions)\r\n            setSymbol(symbolOptions[0])\r\n            // setSymbol({value: 'MSFT', label: 'MSFT'})\r\n          }\r\n        })\r\n      }\r\n      setStrategy(e)\r\n    }\r\n  }\r\n\r\n  const handleMicroStrategyChange = (e) => {\r\n    if (e) {\r\n      setMicroStrategy(e)\r\n    }\r\n  }\r\n\r\n  const handleIndicatorsChange = (options) => {\r\n    setIndicators(options);\r\n  }\r\n\r\n  const handleChartsColumnChange = (option) => {\r\n    if (option.value === 4 || option.value === 6) {\r\n      setIndicators([])\r\n      setOptionsIndicator([\r\n        {\r\n          value: 'volume', label: 'VOLUME',\r\n        },\r\n        {\r\n          value: 'rsi1', label: 'RSI',\r\n        },\r\n        {\r\n          value: 'heik', label: 'HEIK1',\r\n        },\r\n        {\r\n          value: 'heik_diff', label: 'HEIK2',\r\n        }\r\n      ])\r\n    } else {\r\n      setIndicators([])\r\n      setOptionsIndicator([\r\n        {\r\n          value: 'volume', label: 'VOLUME',\r\n        },\r\n        {\r\n          value: 'rsi1', label: 'RSI',\r\n        },\r\n        {\r\n          value: 'rsi2', label: 'RSI2',\r\n        },\r\n        {\r\n          value: 'rsi3', label: 'RSI3',\r\n        },\r\n        {\r\n          value: 'heik', label: 'HEIK1',\r\n        },\r\n        {\r\n          value: 'heik_diff', label: 'HEIK2',\r\n        }\r\n      ])\r\n    }\r\n    setChartColumn(option)\r\n  }\r\n\r\n  const calculateHeightStyle = () => {\r\n    if (chartColumn.value === 1 || chartColumn.value === 2) {\r\n      return 'full-height'\r\n    }\r\n    return 'half-height'\r\n  }\r\n\r\n  const calculateGridColumn = () => {\r\n    if (chartColumn.value === 1) {\r\n      return 12\r\n    } else if ((chartColumn.value === 2) || (chartColumn.value === 4)) {\r\n      return 6\r\n    }\r\n    return 4\r\n  }\r\n\r\n  const handleSymbolTypeChange = (e) => {\r\n    setSelectedSymbolType(e)\r\n  }\r\n\r\n  const handleSignout = () => {\r\n    auth.signout()\r\n    history.push('/login')\r\n  }\r\n\r\n  const displayChart = () => {\r\n    return (\r\n      <div className={`row ${calculateHeightStyle()}`}>\r\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\r\n          {microStrategy && symbol && (\r\n            < StockChart\r\n              selectedSymbolType={selectedSymbolType.value}\r\n              extendMarketTime={extendMarketTime.value}\r\n              selectedInstance={selectedInstance}\r\n              selectedTradeDB='heikfilter-2mins-trades'\r\n              chartPeriod='20D 2min'\r\n              symbol={symbol.value}\r\n              indicators={indicators}\r\n              strategy={strategy}\r\n              isHomePage={true}\r\n              chartColumn={chartColumn.value}\r\n              microStrategy={microStrategy.value}\r\n              startDate={null}\r\n              endDate={null}\r\n              isSliced={true}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\r\n          {microStrategy && symbol && (\r\n            < StockChart\r\n            extendMarketTime={extendMarketTime.value}\r\n            selectedInstance={selectedInstance}\r\n            selectedTradeDB='heikfilter-12mins-trades'\r\n            chartPeriod='20D 12min'\r\n            symbol={symbol.value}\r\n            indicators={indicators}\r\n            strategy={strategy}\r\n            isHomePage={true}\r\n            chartColumn={chartColumn.value}\r\n            microStrategy={microStrategy.value}\r\n            startDate={null}\r\n            endDate={null}\r\n            isSliced={true}\r\n          />)}\r\n        </div>\r\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\r\n          {microStrategy && symbol && (\r\n            < StockChart\r\n              extendMarketTime={extendMarketTime.value}\r\n              selectedInstance={selectedInstance}\r\n              selectedTradeDB='heikfilter-1hour-trades'\r\n              chartPeriod='30D 1hour'\r\n              symbol={symbol.value}\r\n              indicators={indicators}\r\n              strategy={strategy}\r\n              isHomePage={true}\r\n              chartColumn={chartColumn.value}\r\n              microStrategy={microStrategy.value}\r\n              startDate={null}\r\n              endDate={null}\r\n              isSliced={true}\r\n            />)}\r\n        </div>\r\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\r\n          {microStrategy && symbol && (\r\n            < StockChart\r\n              extendMarketTime={extendMarketTime.value}\r\n              selectedInstance={selectedInstance}\r\n              selectedTradeDB='heikfilter-4hours-trades'\r\n              chartPeriod='90D 4hour'\r\n              symbol={symbol.value}\r\n              indicators={indicators}\r\n              strategy={strategy}\r\n              isHomePage={true}\r\n              chartColumn={chartColumn.value}\r\n              microStrategy={microStrategy.value}\r\n              startDate={null}\r\n              endDate={null}\r\n              isSliced={true}\r\n            />)}\r\n        </div>\r\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\r\n          {microStrategy && symbol && (\r\n            < StockChart\r\n              extendMarketTime={extendMarketTime.value}\r\n              selectedInstance={selectedInstance}\r\n              selectedTradeDB='heikfilter-12hours-trades'\r\n              chartPeriod='90D 12hour'\r\n              symbol={symbol.value}\r\n              indicators={indicators}\r\n              strategy={strategy}\r\n              isHomePage={true}\r\n              chartColumn={chartColumn.value}\r\n              microStrategy={microStrategy.value}\r\n              startDate={null}\r\n              endDate={null}\r\n              isSliced={true}\r\n            />)}\r\n        </div>\r\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\r\n          {microStrategy && symbol && (\r\n          < StockChart\r\n            extendMarketTime={extendMarketTime.value}\r\n            selectedInstance={selectedInstance}\r\n            selectedTradeDB='heikfilter-1day-trades'\r\n            chartPeriod='1Y 1day'\r\n            symbol={symbol.value}\r\n            indicators={indicators}\r\n            strategy={strategy}\r\n            isHomePage={true}\r\n            chartColumn={chartColumn.value}\r\n            microStrategy={microStrategy.value}\r\n            startDate={null}\r\n            endDate={null}\r\n            isSliced={true}\r\n          />)}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"hunter-chart-container\">\r\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark hunter-nav-bar\">\r\n        <div className=\"logo-title\">\r\n          <a href=\"/chart\" className=\"hunter-navbar-brand\">\r\n            Violette AM - Client Portal\r\n          </a>\r\n        </div>\r\n        {(user.is_admin || (user.role?.length)) && (\r\n          <div className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/chart\"} className=\"nav-link\"></Link>\r\n            </li>\r\n            <div className=\"select-option\">\r\n              <Select\r\n                value={selectedViewType}\r\n                onChange={handleViewTypeChange}\r\n                options={optionsViewTypes}\r\n                placeholder=\"Charting\"\r\n              />\r\n            </div>\r\n            <div className=\"select-option\">\r\n              <Select\r\n                value={extendMarketTime}\r\n                onChange={handleMarketTimeChange}\r\n                options={optionsMarketTime}\r\n                placeholder=\"Market Time\"\r\n              />\r\n            </div>\r\n            {/* <div className=\"select-option\">\r\n              <Select\r\n                value={selectedSymbolType}\r\n                onChange={handleSymbolTypeChange}\r\n                options={optionsSymbolType}\r\n                placeholder=\"Select Symbol Type\"\r\n              />\r\n            </div> */}\r\n            <div className=\"select-option\">\r\n              <Select\r\n                value={strategy}\r\n                onChange={handleStrategy}\r\n                options={optionsStratgy}\r\n                placeholder=\"Macro Strategy\"\r\n              />\r\n            </div>\r\n            {isShowMicro && (\r\n              <div className=\"select-option\">\r\n                <Select\r\n                  value={microStrategy}\r\n                  onChange={handleMicroStrategyChange}\r\n                  options={optionsMicroStrategy}\r\n                  placeholder=\"Micro Strategy\"\r\n                />\r\n              </div>\r\n            )}\r\n            <div className=\"select-option\">\r\n              <Select\r\n                value={symbol}\r\n                onChange={handlSymbolChange}\r\n                options={symbolList}\r\n                placeholder=\"Symbol\"\r\n              />\r\n            </div>\r\n            <div className=\"select-multi-option\">\r\n              <Select\r\n                name=\"filters\"\r\n                placeholder=\"Indicators\"\r\n                value={indicators}\r\n                onChange={handleIndicatorsChange}\r\n                options={optionsIndicator}\r\n                isMulti={true}\r\n              />\r\n            </div>\r\n            <div className=\"select-option\">\r\n              <Select\r\n                value={chartColumn}\r\n                onChange={handleChartsColumnChange}\r\n                options={optionsColumn}\r\n                placeholder=\"Columns\"\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        <Collapse navbar isOpen={collapseOpen}>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <UncontrolledDropdown>\r\n                <DropdownToggle\r\n                  caret\r\n                  color=\"default\"\r\n                  nav\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  <div className=\"photo\">\r\n                    <img\r\n                      alt=\"...\"\r\n                      src={require(\"assets/img/anime3.png\").default}\r\n                    />\r\n                  </div>\r\n                  <p className=\"d-lg-none\">Log out</p>\r\n                </DropdownToggle>\r\n                <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\r\n                  <DropdownItem divider tag=\"li\" />\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\" onClick={() => {\r\n                      handleSignout()\r\n                    }}>Log out</DropdownItem>\r\n                  </NavLink>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n              <li className=\"separator d-lg-none\" />\r\n            </Nav>\r\n          </Collapse>\r\n      </nav>\r\n      {!user.is_admin && !user?.role.length\r\n        ? (<div className=\"development-in-content dark\">\r\n            No Permission\r\n          </div>)\r\n        : selectedInstance === 'stress_test' || selectedInstance === 'optimization'\r\n        ? (<div className=\"development-in-content dark\">\r\n          In development\r\n        </div>)\r\n        : (<div className=\"graphs-container dark\">\r\n          {displayChart()}\r\n        </div>)\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeiknStockSlicedChart;","import React, {useState, useContext} from 'react'\r\n\r\nconst ApiChartContext = React.createContext()\r\n\r\nexport const useApiChartContext = () => {\r\n  return useContext(ApiChartContext)\r\n}\r\n\r\nexport const ApiChartProvider = ({children}) => {\r\n  const [chartData, setChartData] = useState(null)\r\n  const [isLoading, setLoading] = useState(false)\r\n\r\n  return (\r\n    <ApiChartContext.Provider value={{\r\n      chartData: chartData,\r\n      setChartData: setChartData,\r\n      isLoading: isLoading,\r\n      setLoading: setLoading,\r\n    }}>\r\n        {children}\r\n    </ApiChartContext.Provider>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useApiChartContext } from './contexts';\r\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\r\nimport { CandlestickSeries } from \"react-stockcharts/lib/series\";\r\nimport { scaleTime } from \"d3-scale\";\r\nimport {timeIntervalBarWidth, last} from 'react-stockcharts/lib/utils'\r\nimport { utcDay, utcHour } from \"d3-time\";\r\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\r\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\r\n\r\nimport dayjs from \"dayjs\";\r\nimport {macdCalculator, ha, atr14, xScaleProvider} from './helpers'\r\n\r\nlet ChartGraph = (props) => {\r\n  const {isLoading, chartData} = useApiChartContext()\r\n\r\n  if (isLoading || chartData == null) {\r\n    return <>Loading...</>\r\n  }\r\n\r\n  // xAccessor\r\n  // const calculatedData = macdCalculator((ha(atr14(chartData))));\r\n  // const {\r\n  //   xAccessor,\r\n  // } = xScaleProvider(calculatedData);\r\n  const xAccessor = d => d.date\r\n\r\n  // xExtents\r\n  const start = xAccessor(last(chartData));\r\n\tconst end = xAccessor(chartData[Math.max(0, chartData.length - 150)]);\r\n\tconst xExtents = [start, end];\r\n\r\n  // extract props\r\n  const {width} = props\r\n\r\n  return (\r\n    <>\r\n      {\r\n        isLoading || chartData==null?\r\n          <div className=\"hunter-loadding-status-text color-white\">Loading...</div>\r\n        :\r\n          <>\r\n              <ChartCanvas\r\n                height={350}\r\n                ratio={1}\r\n                width={width}\r\n                margin={{left: 50, right: 50, top: 10, bottom: 30}}\r\n                type={'svg'}\r\n                seriesName=\"MSFT\"\r\n                data={chartData}\r\n                xAccessor={xAccessor}\r\n                xScale={scaleTime()}\r\n                xExtents={xExtents}\r\n              >\r\n                <Chart id={1} yExtents={d => [d.high, d.low]}>\r\n                  <XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\r\n                  <YAxis axisAt=\"left\" orient=\"left\" ticks={5} />\r\n                  <CandlestickSeries\r\n                    stroke={d => d.close > d.open ? \"#6BA583\" : \"#DB0000\"}\r\n                    wickStroke={d => d.close > d.open ? \"#6BA583\" : \"#DB0000\"}\r\n                    fill={d => d.close > d.open ? \"#6BA583\" : \"#DB0000\"}\r\n                    width={timeIntervalBarWidth(utcHour)}\r\n                  />\r\n                </Chart>\r\n              </ChartCanvas>\r\n          </>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nChartGraph = fitWidth(ChartGraph);\r\n\r\nexport default ChartGraph;","import { atr, ema, macd, heikinAshi } from \"react-stockcharts/lib/indicator\";\r\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\r\n\r\nexport const ema20 = ema()\r\n\t\t\t.id(0)\r\n\t\t\t.options({ windowSize: 13 })\r\n\t\t\t.merge((d, c) => { d.ema20 = c; })\r\n\t\t\t.accessor(d => d.ema20);\r\n\r\nexport const ema50 = ema()\r\n  .id(2)\r\n  .options({ windowSize: 50 })\r\n  .merge((d, c) => { d.ema50 = c; })\r\n  .accessor(d => d.ema50);\r\n\r\nexport const ha = heikinAshi();\r\n\r\nexport const macdCalculator = macd()\r\n    .options({\r\n      fast: 12,\r\n      slow: 26,\r\n      signal: 9,\r\n    })\r\n    .merge((d, c) => { d.macd = c; })\r\n    .accessor(d => d.macd);\r\n\r\nexport const atr14 = atr()\r\n  .options({ windowSize: 14 })\r\n  .merge((d, c) => {d.atr14 = c;})\r\n  .accessor(d => d.atr14);\r\n\r\nexport const xScaleProvider = discontinuousTimeScaleProvider.inputDateAccessor(d => d.date);\r\n\r\n// export const {\r\n//   data,\r\n//   xScale,\r\n//   xAccessor,\r\n//   displayXAccessor,\r\n// } = xScaleProvider(calculatedData);","import React from 'react';\r\nimport ChartGraph from './ChartGraph';\r\nimport { useApiChartContext } from './contexts';\r\n\r\nconst ChartGraphWrap = () => {\r\n  const {chartData} = useApiChartContext()\r\n  return (\r\n    <>\r\n      <ChartGraph data={chartData} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChartGraphWrap;","import React, { useEffect, useState } from 'react';\r\nimport { Select, MenuItem } from '@material-ui/core';\r\nimport { useApiChartContext } from './contexts';\r\nimport { apiGetGoogleNews } from \"api/Api\"\r\n\r\nconst Placeholder = ({ children }) => {\r\n  return <div style={{color: '#aaa'}}>{children}</div>;\r\n};\r\n\r\nconst selectStyles = {\r\n  background: 'white',\r\n  borderRadius: '5px',\r\n  margin: '0 5px',\r\n  padding: '0 0 0 15px'\r\n}\r\n\r\n\r\nconst ChartOptions = () => {\r\n  const [sym, setSym] = useState(\"TSLA\")\r\n  const [time, setTime] = useState(\"3ho\")\r\n  const [bar, setBar] = useState(\"150\")\r\n  const [close, setClose] = useState(\"false\")\r\n  const [ext, setExt] = useState(\"true\")\r\n\r\n  const {setLoading, setChartData} = useApiChartContext()\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n\r\n    if (!sym || !time || !bar || !close || !ext) return;\r\n\r\n    const params = {\r\n      symbol: sym,\r\n      timeframe: time,\r\n      bars: bar,\r\n      close: close,\r\n      extended_hours: ext,\r\n    }\r\n\r\n    apiGetGoogleNews(params).then(rawData => {\r\n      setLoading(false)\r\n      //\r\n      let data = []\r\n      rawData['values'].map(row => data.push({date: new Date(row[0]), open: row[1], high: row[2], low: row[3], close: row[4], volume: row[6],}))\r\n\r\n      setChartData(data)\r\n    })\r\n  }, [sym, time, bar, close, ext])\r\n\r\n  return (\r\n    <div className=\"d-flex stockchart-new-api-filters\">\r\n      <Select displayEmpty style={selectStyles} placeholder=\"sym\" value={sym} renderValue={\r\n        sym !== \"\" ? undefined : () => <Placeholder>sym</Placeholder>\r\n      } onChange={e => setSym(e.target.value)}>\r\n        <MenuItem value=\"TSLA\">TSLA</MenuItem>\r\n        <MenuItem value=\"AXP\">AXP</MenuItem>\r\n        <MenuItem value=\"LTC\">LTC</MenuItem>\r\n      </Select>\r\n      <Select displayEmpty style={selectStyles} placeholder=\"time\" value={time} renderValue={\r\n        time !== \"\" ? undefined : () => <Placeholder>time</Placeholder>\r\n      } onChange={e => setTime(e.target.value)}>\r\n        <MenuItem value=\"3ho\">3ho</MenuItem>\r\n      </Select>\r\n      <Select displayEmpty style={selectStyles} placeholder=\"bar\" value={bar} renderValue={\r\n        bar !== \"\" ? undefined : () => <Placeholder>bar</Placeholder>\r\n      } onChange={e => setBar(e.target.value)}>\r\n        <MenuItem value={'100'}>100</MenuItem>\r\n        <MenuItem value={'150'}>150</MenuItem>\r\n        <MenuItem value={'200'}>200</MenuItem>\r\n      </Select>\r\n      <Select displayEmpty style={selectStyles} placeholder=\"close\" value={close} renderValue={\r\n        close !== \"\" ? undefined : () => <Placeholder>close</Placeholder>\r\n      } onChange={e => setClose(e.target.value)}>\r\n        <MenuItem value=\"false\">false</MenuItem>\r\n        <MenuItem value=\"true\">true</MenuItem>\r\n      </Select>\r\n      <Select displayEmpty style={selectStyles} placeholder=\"ext_\" value={ext} renderValue={\r\n        ext !== \"\" ? undefined : () => <Placeholder>ext</Placeholder>\r\n      } onChange={e => setExt(e.target.value)}>\r\n        <MenuItem value=\"false\">false</MenuItem>\r\n        <MenuItem value=\"true\">true</MenuItem>\r\n      </Select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartOptions;","import React from 'react';\r\nimport ChartGraphWrap from './ChartGraphWrap';\r\nimport ChartOptions from './ChartOptions';\r\nimport { ApiChartProvider } from './contexts';\r\n\r\nconst TradeChart = () => {\r\n  return (\r\n    <ApiChartProvider>\r\n      <ChartOptions />\r\n      <ChartGraphWrap />\r\n    </ApiChartProvider>\r\n  );\r\n};\r\n\r\nexport default TradeChart;","import React, { useCallback, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Select from 'react-select'\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport TradeChart from \"./TradeChart\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Collapse,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  NavLink,\r\n  Nav,\r\n} from \"reactstrap\";\r\nimport { useAuth } from 'contexts/authContext';\r\nimport disableScroll from 'disable-scroll';\r\nimport { getStrategyListReq, getTablesReq, getSymbolsByMicroStrategy, getIndicators } from 'api/Api'\r\n\r\nconst ChartWithNewApi = (props) => {\r\n  const auth = useAuth();\r\n  const { selectedInstance, handleChartRedirect } = props\r\n  const history = useHistory();\r\n  const [symbol, setSymbol] = useState(null);//{ value: 'MSFT', label: 'MSFT' }\r\n  const [indicators, setIndicators] = useState([]);\r\n  const [isShowMicro, setIsShowMicro] = useState(true);\r\n  const [symbolList, setSymbolList] = useState([])\r\n  const [collapseOpen,] = React.useState(false)\r\n  const [chartColumn, setChartColumn] = useState({ value: 6, label: '6' })\r\n  const [assetClass, setAssetClass] = useState({ value: 'stock', label: 'stock' })\r\n  const [selectedViewType, setSelectedViewType] = useState({ value: 'chart_with_new_api', label: 'Chart With New API7' });\r\n  const [microStrategy, setMicroStrategy] = useState(null);\r\n  const [strategy, setStrategy] = useState(null);//{ value: 'heikfilter', label: 'heikfilter' }\r\n  const [strategyList, setStrategyList] = useState([]);\r\n  const [user] = useState(JSON.parse(localStorage.getItem('user-info')));\r\n  const [extendMarketTime, setExtendMarketTime] = useState(\r\n    {\r\n      value: 'markettime', label: 'market time',\r\n    }\r\n  );\r\n\r\n  const [selectedSymbolType, setSelectedSymbolType] = useState({\r\n    value: 'stock',\r\n    label: 'stock'\r\n  })\r\n\r\n  const [optionsViewTypes, setOptionsViewTypes] = useState([\r\n    { value: 'charting', label: 'Charting' },\r\n    { value: 'performance', label: 'Performance' },\r\n    { value: 'sliced_charting', label: 'Sliced Chatting'},\r\n    { value: 'chart_with_new_api', label: 'Chart With New API6' },\r\n  ])\r\n\r\n\r\n  const getStrategyList = useCallback(\r\n    async () => {\r\n      const strategyListRes = await getStrategyListReq();\r\n      if (strategyListRes.success) {\r\n        const data = strategyListRes.data;\r\n        setStrategyList(data.result);\r\n        const strategyOptions = data.result.map((o => {\r\n          return {\r\n            value: o.macro,\r\n            label: o.macro,\r\n          }\r\n        }))\r\n        setStrategy(strategyOptions[0]);\r\n        if (data.result.length) {\r\n          let flag = true\r\n          let item = data.result[0]\r\n          if (flag) {\r\n            const microStrategyOptions = item.micro.map(o => {\r\n              return {\r\n                value: o,\r\n                label: o,\r\n              }\r\n            })\r\n\r\n            setMicroStrategy(microStrategyOptions[0])\r\n\r\n            const result = await getSymbolsByMicroStrategy(strategyOptions[0].value, microStrategyOptions[0].value)\r\n            if (result.success) {\r\n              const symbolOptions = result.data.map(o => {\r\n                return {\r\n                  value: o,\r\n                  label: o,\r\n                }\r\n              })\r\n\r\n              setSymbolList(symbolOptions)\r\n              setSymbol(symbolOptions[0])\r\n            }\r\n          }\r\n          flag = false\r\n        }\r\n      }\r\n    },\r\n    [],\r\n  )\r\n\r\n  const get_tables = useCallback(\r\n    async (strategy) => {\r\n      const tablesRes = await getTablesReq(strategy);\r\n      if (tablesRes.success) {\r\n        const data = tablesRes.data;\r\n        let temp_data = []\r\n        data.tables.map((x) => {\r\n          temp_data.push({\r\n            value: x,\r\n            label: x\r\n          });\r\n          return null\r\n        })\r\n        setSymbolList(temp_data)\r\n      }\r\n    },\r\n    [],\r\n  )\r\n\r\n  useEffect(async () => {\r\n    const result = await getIndicators()\r\n    if (result.success) {\r\n      const indicatorList = result.data.map((o) => (\r\n        {\r\n          value: o,\r\n          label: o\r\n        }\r\n      ))\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    disableScroll.on();\r\n    return () => {\r\n      disableScroll.off();\r\n    }\r\n  }, [getStrategyList, user])\r\n\r\n  useEffect(() => {\r\n    const handleInstanceChange = (value) => {\r\n      if (value === 'live_trading') {\r\n        setIsShowMicro(false);\r\n        setStrategy({ value: 'no_strategy', label: 'No Strategy' });\r\n        return\r\n      } else if (value === 'forward_test') {\r\n        // setStrategy({ value: 'heikfilter', label: 'heikfilter' });\r\n        // setSymbol({ value: 'MSFT', label: 'MSFT' });\r\n      }\r\n      getStrategyList()\r\n      setIsShowMicro(true);\r\n    }\r\n    if (!user.is_admin && !user?.role.length) {\r\n      return;\r\n    }\r\n    handleInstanceChange(selectedInstance)\r\n    if(selectedInstance === 'live_trading') {\r\n      get_tables('no_strategy');\r\n    }\r\n    if (selectedInstance === 'optimization') {\r\n      setOptionsViewTypes([\r\n        { value: 'optimization ', label: 'Optimization' },\r\n      ])\r\n    } else {\r\n      setOptionsViewTypes([\r\n        { value: 'charting', label: 'Charting' },\r\n        { value: 'performance', label: 'Performance' },\r\n        { value: 'sliced_charting', label: 'Sliced Chatting'},\r\n        { value: 'chart_with_new_api', label: 'Chart With New API5' },\r\n      ])\r\n    }\r\n  }, [selectedInstance, getStrategyList, get_tables, user.is_admin, user.role?.length])\r\n\r\n  const handleViewTypeChange = (value) => {\r\n    setSelectedViewType(value)\r\n    if (value.value === 'performance') {\r\n      const locationState = {\r\n        selectedInstance,\r\n        viewType: value,\r\n        initStrategy: strategy,\r\n        initMicroStrategy: microStrategy,//{ value: '2m', label: '2m' }\r\n        initIndicators: indicators,\r\n        initSymbol: symbol,\r\n      }\r\n      if (value) {\r\n        handleChartRedirect(1)\r\n        history.push({\r\n          state: locationState,\r\n        });\r\n      }\r\n    } else if (value.value === 'sliced_charting') {\r\n      handleChartRedirect(2)\r\n    } else if (value.value == 'chart_with_new_api') {\r\n      handleChartRedirect(3)\r\n    } else if (value.value === 'charting') {\r\n      handleChartRedirect(0)\r\n    }\r\n  }\r\n\r\n  const calculateHeightStyle = () => {\r\n    if (chartColumn.value === 1 || chartColumn.value === 2) {\r\n      return 'full-height'\r\n    }\r\n    return 'half-height'\r\n  }\r\n\r\n  const calculateGridColumn = () => {\r\n    if (chartColumn.value === 1) {\r\n      return 12\r\n    } else if ((chartColumn.value === 2) || (chartColumn.value === 4)) {\r\n      return 6\r\n    }\r\n    return 4\r\n  }\r\n\r\n  const handleSignout = () => {\r\n    auth.signout()\r\n    history.push('/login')\r\n  }\r\n\r\n\r\n  const displayChart = () => {\r\n    return (\r\n      <div className={`row ${calculateHeightStyle()}`}>\r\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\r\n          <TradeChart />\r\n        </div>\r\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\r\n          <TradeChart />\r\n        </div>\r\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\r\n          <TradeChart />\r\n        </div>\r\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\r\n          <TradeChart />\r\n        </div>\r\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\r\n          <TradeChart />\r\n        </div>\r\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\r\n          <TradeChart />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"hunter-chart-container\">\r\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark hunter-nav-bar\">\r\n        <div className=\"logo-title\">\r\n          <a href=\"/chart\" className=\"hunter-navbar-brand\">\r\n            Violette AM - Client Portal\r\n          </a>\r\n        </div>\r\n        {(user.is_admin || (user.role?.length)) && (\r\n          <div className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/chart\"} className=\"nav-link\"></Link>\r\n            </li>\r\n            <div className=\"select-option\">\r\n              <Select\r\n                value={selectedViewType}\r\n                onChange={handleViewTypeChange}\r\n                options={optionsViewTypes}\r\n                placeholder=\"Charting\"\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        <Collapse navbar isOpen={collapseOpen}>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <UncontrolledDropdown>\r\n                <DropdownToggle\r\n                  caret\r\n                  color=\"default\"\r\n                  nav\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  <div className=\"photo\">\r\n                    <img\r\n                      alt=\"...\"\r\n                      src={require(\"assets/img/anime3.png\").default}\r\n                    />\r\n                  </div>\r\n                  <p className=\"d-lg-none\">Log out</p>\r\n                </DropdownToggle>\r\n                <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\r\n                  <DropdownItem divider tag=\"li\" />\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\" onClick={() => {\r\n                      handleSignout()\r\n                    }}>Log out</DropdownItem>\r\n                  </NavLink>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n              <li className=\"separator d-lg-none\" />\r\n            </Nav>\r\n          </Collapse>\r\n      </nav>\r\n      {!user.is_admin && !user?.role.length\r\n        ? (<div className=\"development-in-content dark\">\r\n            No Permission\r\n          </div>)\r\n        : selectedInstance === 'stress_test' || selectedInstance === 'optimization'\r\n        ? (<div className=\"development-in-content dark\">\r\n          In development\r\n        </div>)\r\n        : (<div className=\"graphs-container dark\">\r\n          {displayChart()}\r\n        </div>)\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartWithNewApi;","export function validateEmail(email) {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\n// export function validateEmail(email) {\r\n//  if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email))\r\n//   {\r\n//     return (true)\r\n//   }\r\n//     alert(\"You have entered an invalid email address!\")\r\n//     return (false)\r\n// }\r\n\r\nexport function currentDateString() {\r\n    const date = new Date();\r\n    let month = date.getMonth() + 1\r\n    let day = date.getDate()\r\n    if (date.getMonth() + 1 < 10) {\r\n        month = '0' + month\r\n    }\r\n    if (date.getDate() < 10) {\r\n        day = '0' + day\r\n    }\r\n\r\n    return `${date.getFullYear()}-${month}-${day}`;\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    useHistory,\r\n} from \"react-router-dom\";\r\nimport { useAuth } from 'contexts/authContext'\r\nimport { validateEmail } from 'utils/helper'\r\n\r\nconst Login = () => {\r\n    let auth = useAuth();\r\n    let history = useHistory();\r\n    const [error, setError] = useState(-1)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    useEffect(() => {\r\n        const listener = event => {\r\n            if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n                event.preventDefault();\r\n                login();\r\n            }\r\n        };\r\n        document.addEventListener(\"keydown\", listener);\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", listener);\r\n        };\r\n    }, []);\r\n\r\n    const handleEmailChange = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n    \r\n    const handlePasswordChange = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n    \r\n    const login = async () => {\r\n        if (!email.length || !password.length) {\r\n            setError(1)\r\n            setMessage('Email or password is wrong')\r\n            return\r\n        }\r\n        \r\n        if (!validateEmail(email)){\r\n            alert('Invalid email')\r\n            return\r\n        }\r\n        \r\n        setIsLoading(true)\r\n        const res = await auth.authUser.signin(email, password)\r\n        setIsLoading(false)\r\n        if (res.success) {\r\n            const historyState = {\r\n                userId: res.user_id\r\n            }\r\n            history.push({\r\n                pathname: '/verify',\r\n                state: historyState\r\n            })\r\n        } else {\r\n            setError(1)\r\n            setMessage(res.error)\r\n            return\r\n        }\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setError(-1);\r\n        setMessage('');\r\n    }\r\n\r\n    return (\r\n        <div className={\"login-form\"}>\r\n            <div>\r\n\r\n                <h3>Log In</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>User Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        className=\"form-control hunter-form-control\"\r\n                        placeholder=\"Enter user email\"\r\n                        value={email}\r\n                        onChange={(e) => { handleEmailChange(e)}}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control hunter-form-control\"\r\n                        placeholder=\"Enter password\"\r\n                        value={password}\r\n                        onChange={(e) => { handlePasswordChange(e)}}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <div className=\"custom-control custom-checkbox\">\r\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\r\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <button\r\n                    className=\"btn btn-dark btn-lg btn-block hunter-signin-button\"\r\n                    onClick={login}\r\n                >\r\n                    {isLoading && (\r\n                        <span className=\"spinner-border spinner-border-sm hunter-spinner-button\" role=\"status\" aria-hidden=\"true\"></span>\r\n                    )}\r\n                    Sign in\r\n                </button>\r\n                \r\n                <div className=\"form-group hunter-form-signup-area\">\r\n                    {/* <p className=\"sign-up-area text-left\">\r\n                        <a href=\"/signup\">Sign Up?</a>\r\n                    </p> */}\r\n                    <p className=\"forgot-password text-right\">\r\n                        Forgot <a href=\"/forgot_password\">password?</a>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            {error !== -1 && \r\n                <div className=\"alert alert-primary\" role=\"alert\">\r\n                    <div className=\"alert-container\">\r\n                        <div className=\"alert-content\">\r\n                            {message}\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary modal-close-button hunter-modal-small-button\" onClick={() => { handleModalClose() }}>Close</button>\r\n                    </div>\r\n                </div>   \r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Collapse,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  Input,\r\n  Navbar,\r\n  NavLink,\r\n  Nav,\r\n  Container,\r\n  Modal,\r\n  ModalHeader,\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAuth } from 'contexts/authContext';\r\n\r\nfunction AdminNavbar() {\r\n  const auth = useAuth();\r\n  const history = useHistory();\r\n  const [collapseOpen] = React.useState(false);\r\n  const [modalSearch, setmodalSearch] = React.useState(false);\r\n  const [color, setcolor] = React.useState(\"navbar-transparent\");\r\n  React.useEffect(() => {\r\n    window.addEventListener(\"resize\", updateColor);\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", updateColor);\r\n    };\r\n  });\r\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\r\n  const updateColor = () => {\r\n    if (window.innerWidth < 993 && collapseOpen) {\r\n      setcolor(\"bg-white\");\r\n    } else {\r\n      setcolor(\"navbar-transparent\");\r\n    }\r\n  };\r\n  \r\n  // this function is to open the Search modal\r\n  const toggleModalSearch = () => {\r\n    setmodalSearch(!modalSearch);\r\n  };\r\n\r\n  const handleSignout = () => {\r\n    auth.signout()\r\n    history.push('/login')\r\n  }\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand navbar-dark bg-dark hunter-nav-bar\">\r\n      <div className=\"logo-title\">\r\n        <a href=\"/chart\" className=\"hunter-navbar-brand\">\r\n          Violette AM - Client Portal\r\n        </a>\r\n      </div>\r\n      <Navbar className={classNames(\"navbar-absolute\", color)} expand=\"lg\">\r\n        <Container fluid>\r\n          <Collapse navbar isOpen={collapseOpen}>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <UncontrolledDropdown nav>\r\n                <DropdownToggle\r\n                  caret\r\n                  color=\"default\"\r\n                  nav\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  <div className=\"photo\">\r\n                    <img\r\n                      alt=\"...\"\r\n                      src={require(\"assets/img/anime3.png\").default}\r\n                    />\r\n                  </div>\r\n                  <p className=\"d-lg-none\">Log out</p>\r\n                </DropdownToggle>\r\n                <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\r\n                  {/* <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\">Profile</DropdownItem>\r\n                  </NavLink>\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\">Settings</DropdownItem>\r\n                  </NavLink> */}\r\n                  <DropdownItem divider tag=\"li\" />\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\" onClick={() => {handleSignout()}}>Log out</DropdownItem>\r\n                  </NavLink>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n              <li className=\"separator d-lg-none\" />\r\n            </Nav>\r\n          </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      <Modal\r\n        modalClassName=\"modal-search\"\r\n        isOpen={modalSearch}\r\n        toggle={toggleModalSearch}\r\n      >\r\n        <ModalHeader>\r\n          <Input placeholder=\"SEARCH\" type=\"text\" />\r\n          <button\r\n            aria-label=\"Close\"\r\n            className=\"close\"\r\n            onClick={toggleModalSearch}\r\n          >\r\n            <i className=\"tim-icons icon-simple-remove\" />\r\n          </button>\r\n        </ModalHeader>\r\n      </Modal>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default AdminNavbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch, useLocation } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button\r\n} from \"reactstrap\";\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\n\r\n// core components\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\n\r\nimport { adminRoutes } from \"routes.js\";\r\n\r\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\r\n\r\nvar ps;\r\n\r\nfunction Admin() {\r\n  const history = useHistory();\r\n  const [isShowSidebar, setShowSidebar] = React.useState(true);\r\n  const location = useLocation();\r\n  const mainPanelRef = React.useRef(null);\r\n  const [sidebarOpened, setsidebarOpened] = React.useState(\r\n    document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n  );\r\n  const [selectedInstance, setSelectedInstance] = React.useState('usermanage');\r\n  const [user] = useState(JSON.parse(localStorage.getItem('user-info')));\r\n\r\n    useEffect(() => {\r\n      if (!user.is_admin) {\r\n        history.push('/')\r\n      }\r\n    }, [user, history])\r\n\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      document.documentElement.className += \" perfect-scrollbar-on\";\r\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\r\n      ps = new PerfectScrollbar(mainPanelRef.current, {\r\n        suppressScrollX: true,\r\n      });\r\n      let tables = document.querySelectorAll(\".table-responsive\");\r\n      for (let i = 0; i < tables.length; i++) {\r\n        ps = new PerfectScrollbar(tables[i]);\r\n      }\r\n    }\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      if (navigator.platform.indexOf(\"Win\") > -1) {\r\n        ps.destroy();\r\n        document.documentElement.classList.add(\"perfect-scrollbar-off\");\r\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\r\n      }\r\n    };\r\n  });\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      let tables = document.querySelectorAll(\".table-responsive\");\r\n      for (let i = 0; i < tables.length; i++) {\r\n        ps = new PerfectScrollbar(tables[i]);\r\n      }\r\n    }\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    if (mainPanelRef.current) {\r\n      mainPanelRef.current.scrollTop = 0;\r\n    }\r\n  }, [location]);\r\n  // this function opens and closes the sidebar on small devices\r\n  const toggleSidebar = () => {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    setsidebarOpened(!sidebarOpened);\r\n  };\r\n  \r\n  const handleSidebarChange = () => {\r\n    setShowSidebar(!isShowSidebar);\r\n  };\r\n  const getRoutes = (routes) => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.layout === \"/admin\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  const getBrandText = (path) => {\r\n    for (let i = 0; i < adminRoutes.length; i++) {\r\n      if (location.pathname.indexOf(adminRoutes[i].layout + adminRoutes[i].path) !== -1) {\r\n        return adminRoutes[i].name;\r\n      }\r\n    }\r\n    return \"Brand\";\r\n  };\r\n  const handleInstanceChange = (instance) => {\r\n    setSelectedInstance(instance)\r\n  }\r\n\r\n  return (\r\n    <BackgroundColorContext.Consumer>\r\n      {({ color, changeColor }) => (\r\n        <React.Fragment>\r\n          <div className=\"wrapper hunter-wrapper\">\r\n          {!isShowSidebar && (\r\n            <Button\r\n              className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\r\n              onClick={handleSidebarChange}\r\n            >\r\n              <i className=\"tim-icons icon-align-left-2\"/>\r\n            </Button>\r\n          )}\r\n          {isShowSidebar && (\r\n              <Sidebar\r\n                isAdminPage={true}\r\n                routes={adminRoutes}\r\n                handleSidebarChange={handleSidebarChange}\r\n                selectedInstance={selectedInstance}\r\n                handleInstanceChange={handleInstanceChange}\r\n              />\r\n            )}\r\n            <div className={`main-panel ${!isShowSidebar ? 'full-width' : ''}`} ref={mainPanelRef} data={color}>\r\n              <AdminNavbar\r\n                brandText={getBrandText(location.pathname)}\r\n                toggleSidebar={toggleSidebar}\r\n                sidebarOpened={sidebarOpened}\r\n              />\r\n              <Switch>\r\n                {getRoutes(adminRoutes)}\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </BackgroundColorContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Select from 'react-select'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button\r\n} from \"reactstrap\";\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\n\r\n// core components\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\n\r\nimport { adminRoutes } from \"routes.js\";\r\n\r\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { MDBBtn, MDBTable, MDBTableBody, MDBTableHead  } from 'mdbreact';\r\nimport { getUserList, updateUserRole, deleteUser } from 'api/Api';\r\n\r\nvar ps;\r\n\r\nfunction UserManage() {\r\n  const history = useHistory();\r\n  const [isRequest, setIsRequest] = useState(true)\r\n  const [error, setError] = useState(-1)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const [isShowSidebar, setShowSidebar] = React.useState(true);\r\n  const location = useLocation();\r\n  const mainPanelRef = React.useRef(null);\r\n  const [isShowUpdateRoleModal, setIsShowUpdateRoleModal] = useState(false);\r\n  const [roles, setRoles] = useState([]);\r\n  const [userlist, setUserList] = useState([])\r\n  const [selectedUserId, setSelectedUserId] = useState(null);\r\n  const [sidebarOpened, setsidebarOpened] = React.useState(\r\n    document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n  );\r\n  const [selectedInstance, setSelectedInstance] = React.useState('usermanage');\r\n  const optionsRole = [\r\n    { value: 'forward_test', label: 'Forward Test' },\r\n    // { value: 'stress_test', label: 'Stress Test' },\r\n    // { value: 'optimization', label: 'Optimization' },\r\n    { value: 'live_trading', label: 'Live Trade' },\r\n    { value: 'market_watch', label: 'Market' },\r\n    { value: 'scanner', label: 'Scanner' },\r\n    { value: 'trade_data', label: 'Trade Data' },\r\n    { value: 'hybrid_view', label: 'Hybrid View' },\r\n    { value: 'financial_data', label: 'Financial Data' },\r\n    { value: 'floats', label: 'Floats' },\r\n  ]\r\n  const [user] = useState(JSON.parse(localStorage.getItem('user-info')));\r\n\r\n  useEffect(() => {\r\n    if (!user.is_admin) {\r\n      history.push('/')\r\n    }\r\n  }, [user, history])\r\n\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      document.documentElement.className += \" perfect-scrollbar-on\";\r\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\r\n      ps = new PerfectScrollbar(mainPanelRef.current, {\r\n        suppressScrollX: true,\r\n      });\r\n      let tables = document.querySelectorAll(\".table-responsive\");\r\n      for (let i = 0; i < tables.length; i++) {\r\n        ps = new PerfectScrollbar(tables[i]);\r\n      }\r\n    }\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      if (navigator.platform.indexOf(\"Win\") > -1) {\r\n        ps.destroy();\r\n        document.documentElement.classList.add(\"perfect-scrollbar-off\");\r\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\r\n      }\r\n    };\r\n  });\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      let tables = document.querySelectorAll(\".table-responsive\");\r\n      for (let i = 0; i < tables.length; i++) {\r\n        ps = new PerfectScrollbar(tables[i]);\r\n      }\r\n    }\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    if (mainPanelRef.current) {\r\n      mainPanelRef.current.scrollTop = 0;\r\n    }\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    const fetchUserList = async () => {\r\n      const list = await getUserList();\r\n      const users = list.map((user, index) => {\r\n        return {\r\n          id: index,\r\n          username: user.username,\r\n          email: user.email,\r\n          role: user.is_superuser ? 'Super User' : user.role,\r\n          active: 'active',\r\n          action: <div className=\"hunter-user-manage-button-area\">\r\n            <MDBBtn color=\"blue\" size=\"sm\" onClick={\r\n            () => {\r\n              setRoles([]);\r\n              setSelectedUserId(user.id);\r\n              showUpdateUserRoleModal();\r\n            }}\r\n            >Update Role</MDBBtn>\r\n            <MDBBtn color=\"blue\" size=\"sm\" onClick={\r\n            async () => {\r\n              if (window.confirm(\"Do you really want to delete this user?\")) {\r\n                const res = await deleteUser(user.id)\r\n                setIsRequest(true);\r\n                alert(res.message)\r\n              }\r\n            }}\r\n          >Delete User</MDBBtn>\r\n          </div>\r\n        }\r\n      })\r\n       setUserList(users)\r\n    };\r\n    if (isRequest) {\r\n      fetchUserList();\r\n      setIsRequest(false);\r\n    }\r\n  }, [isRequest])\r\n\r\n  const showUpdateUserRoleModal = () => {\r\n    setIsShowUpdateRoleModal(true);\r\n  }\r\n\r\n  // this function opens and closes the sidebar on small devices\r\n  const toggleSidebar = () => {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    setsidebarOpened(!sidebarOpened);\r\n  };\r\n\r\n  const handleSidebarChange = () => {\r\n    setShowSidebar(!isShowSidebar);\r\n  };\r\n\r\n  const getBrandText = (path) => {\r\n    for (let i = 0; i < adminRoutes.length; i++) {\r\n      if (location.pathname.indexOf(adminRoutes[i].layout + adminRoutes[i].path) !== -1) {\r\n        return adminRoutes[i].name;\r\n      }\r\n    }\r\n    return \"Brand\";\r\n  };\r\n  const handleInstanceChange = (instance) => {\r\n    setSelectedInstance(instance)\r\n  }\r\n\r\n  const columns= [\r\n    {\r\n      label: '#',\r\n      field: 'id',\r\n    },\r\n    {\r\n      label: 'name',\r\n      field: 'username',\r\n    },\r\n    {\r\n      label: 'email',\r\n      field: 'email',\r\n    },\r\n    {\r\n      label: 'Role',\r\n      field: 'role',\r\n    },\r\n    {\r\n      label: 'Active',\r\n      field: 'active',\r\n    },\r\n    {\r\n      action: 'Action',\r\n      field: 'action',\r\n    }\r\n  ];\r\n\r\n  const handleRolesChange = (options) => {\r\n    setRoles(options);\r\n  }\r\n\r\n  const handleUpdateRoleModalClose = () => {\r\n    setIsShowUpdateRoleModal(false)\r\n  }\r\n\r\n  const transformUserRole = (roles) => {\r\n    let roleValues = ''\r\n    let coma = ''\r\n    roles.forEach(role => {\r\n      roleValues = roleValues + coma + role.value\r\n      coma = ','\r\n    })\r\n    return roleValues;\r\n  }\r\n\r\n  const handleUserRoleUpdate = async () => {\r\n    setIsLoading(true)\r\n    const res = await updateUserRole(selectedUserId, transformUserRole(roles));\r\n    setIsLoading(false)\r\n    if ( res.success ) {\r\n      setIsRequest(true);\r\n      setError(0)\r\n      setMessage(res.message)\r\n      return;\r\n    }\r\n    setError(1)\r\n    setMessage(res.message)\r\n    return\r\n  }\r\n\r\n  const handleModalClose = () => {\r\n    setError(-1);\r\n    setMessage('');\r\n    setIsShowUpdateRoleModal(false)\r\n  }\r\n\r\n  return (\r\n    <BackgroundColorContext.Consumer>\r\n      {({ color, changeColor }) => (\r\n        <React.Fragment>\r\n          <div className=\"wrapper hunter-wrapper\">\r\n          {!isShowSidebar && (\r\n            <Button\r\n              className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\r\n              onClick={handleSidebarChange}\r\n            >\r\n              <i className=\"tim-icons icon-align-left-2\"/>\r\n            </Button>\r\n          )}\r\n          {isShowSidebar && (\r\n            <Sidebar\r\n              isAdminPage={true}\r\n              routes={adminRoutes}\r\n              handleSidebarChange={handleSidebarChange}\r\n              selectedInstance={selectedInstance}\r\n              handleInstanceChange={handleInstanceChange}\r\n            />\r\n          )}\r\n          <Modal show={isShowUpdateRoleModal} className=\"hunter-modal\" onHide={handleUpdateRoleModalClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Update User Role</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <div className=\"select-multi-option\">\r\n                <Select\r\n                  name=\"filters\"\r\n                  placeholder=\"Roles\"\r\n                  value={roles}\r\n                  onChange={handleRolesChange}\r\n                  options={optionsRole}\r\n                  isMulti={true}\r\n                />\r\n              </div>\r\n            </Modal.Body>\r\n            <Modal.Footer className=\"hunter-modal-footer\">\r\n              <Button variant=\"primary\" onClick={handleUserRoleUpdate}>\r\n                {isLoading && (\r\n                  <span className=\"spinner-border spinner-border-sm hunter-spinner-button\" role=\"status\" aria-hidden=\"true\"></span>\r\n                )}\r\n                Update Role\r\n              </Button>\r\n            </Modal.Footer>\r\n            {error !== -1 &&\r\n              <div className=\"alert alert-primary\" role=\"alert\">\r\n                <div className=\"alert-container\">\r\n                  <div className=\"alert-content\">\r\n                    {message}\r\n                  </div>\r\n                  <button type=\"button\" className=\"btn btn-primary modal-close-button hunter-modal-small-button\" onClick={() => { handleModalClose() }}>Close</button>\r\n                </div>\r\n              </div>\r\n            }\r\n          </Modal>\r\n            <div className={`main-panel ${!isShowSidebar ? 'full-width' : ''}`} ref={mainPanelRef} data={color}>\r\n              <AdminNavbar\r\n                brandText={getBrandText(location.pathname)}\r\n                toggleSidebar={toggleSidebar}\r\n                sidebarOpened={sidebarOpened}\r\n              />\r\n              <div className=\"hunter-page-container\">\r\n                <div className=\"hunter-page-title\">\r\n                  <h3>User Manage</h3>\r\n                </div>\r\n                <div className=\"col-sm-8 hunter-mdb-table-container\">\r\n                  <MDBTable btn>\r\n                    <MDBTableHead columns={columns} color=\"dark\"/>\r\n                    <MDBTableBody rows={userlist} className=\"hunter-mdb-table-body\"/>\r\n                  </MDBTable>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </BackgroundColorContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default UserManage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Select from 'react-select'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button\r\n} from \"reactstrap\";\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\n\r\n// core components\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\n\r\nimport { adminRoutes } from \"routes.js\";\r\n\r\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\r\nimport { MDBBtn, MDBTable, MDBTableBody, MDBTableHead  } from 'mdbreact';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { createSignUpLink, getActiveLinks, sendSignUpLink } from 'api/Api';\r\nimport { validateEmail } from 'utils/helper';\r\n\r\nvar ps;\r\n\r\nfunction LinkManage() {\r\n  const history = useHistory();\r\n  const [roles, setRoles] = useState([])\r\n  const [isShowSendModal, setIsShowSendModal] = useState(false)\r\n  const [isShowCreateLinkModal, setShowCreateLinkModal] = useState(false);\r\n  const [isShowSidebar, setShowSidebar] = React.useState(true);\r\n  const location = useLocation();\r\n  const mainPanelRef = React.useRef(null);\r\n  const [sidebarOpened, setsidebarOpened] = React.useState(\r\n    document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n  );\r\n  const [selectedInstance, setSelectedInstance] = React.useState('linkmanage');\r\n  const [selectedLink, setSelectedLink] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  const optionsRole = [\r\n    { value: 'forward_test', label: 'Forward Test' },\r\n    // { value: 'stress_test', label: 'Stress Test' },\r\n    // { value: 'optimization', label: 'Optimization' },\r\n    { value: 'live_trading', label: 'Live Trade' },\r\n    { value: 'market_watch', label: 'Market' },\r\n    { value: 'scanner', label: 'Scanner' },\r\n    { value: 'trade_data', label: 'Trade Data' },\r\n    { value: 'hybrid_view', label: 'Hybrid View' },\r\n    { value: 'financial_data', label: 'Financial Data' },\r\n    { value: 'floats', label: 'Floats' },\r\n  ]\r\n\r\n  const [user] = useState(JSON.parse(localStorage.getItem('user-info')));\r\n\r\n  useEffect(() => {\r\n    if (!user.is_admin) {\r\n      history.push('/')\r\n    }\r\n  }, [user, history])\r\n\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      document.documentElement.className += \" perfect-scrollbar-on\";\r\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\r\n      ps = new PerfectScrollbar(mainPanelRef.current, {\r\n        suppressScrollX: true,\r\n      });\r\n      let tables = document.querySelectorAll(\".table-responsive\");\r\n      for (let i = 0; i < tables.length; i++) {\r\n        ps = new PerfectScrollbar(tables[i]);\r\n      }\r\n    }\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      if (navigator.platform.indexOf(\"Win\") > -1) {\r\n        ps.destroy();\r\n        document.documentElement.classList.add(\"perfect-scrollbar-off\");\r\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\r\n      }\r\n    };\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    const fetchActiveLinks = async () => {\r\n      let links = await getActiveLinks();\r\n      const filteredLinks = links.filter(link => !link.expired)\r\n      const linklist = filteredLinks.map(link => {\r\n        return {\r\n          id: link.id,\r\n          link: link.link,\r\n          roles: link.role,\r\n          action: <MDBBtn color=\"blue\" size=\"sm\" onClick={\r\n            () => {\r\n              setSelectedLink(link.link)\r\n              showSendEmailModal()\r\n            }}\r\n          >Send</MDBBtn>\r\n        }\r\n      })\r\n      setLinkList(linklist)\r\n    }\r\n\r\n    fetchActiveLinks()\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      let tables = document.querySelectorAll(\".table-responsive\");\r\n      for (let i = 0; i < tables.length; i++) {\r\n        ps = new PerfectScrollbar(tables[i]);\r\n      }\r\n    }\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    if (mainPanelRef.current) {\r\n      mainPanelRef.current.scrollTop = 0;\r\n    }\r\n  }, [location]);\r\n  // this function opens and closes the sidebar on small devices\r\n  const toggleSidebar = () => {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    setsidebarOpened(!sidebarOpened);\r\n  };\r\n\r\n  const handleSidebarChange = () => {\r\n    setShowSidebar(!isShowSidebar);\r\n  };\r\n\r\n  const getBrandText = (path) => {\r\n    for (let i = 0; i < adminRoutes.length; i++) {\r\n      if (location.pathname.indexOf(adminRoutes[i].layout + adminRoutes[i].path) !== -1) {\r\n        return adminRoutes[i].name;\r\n      }\r\n    }\r\n    return \"Brand\";\r\n  };\r\n\r\n  const handleInstanceChange = (instance) => {\r\n    setSelectedInstance(instance)\r\n  }\r\n\r\n  const handleCreateLinkModalClose = () => {\r\n    setRoles([])\r\n    setShowCreateLinkModal(false)\r\n  }\r\n\r\n  const handleCreateLinkClick = () => {\r\n    setShowCreateLinkModal(true)\r\n  }\r\n\r\n  const handleRolesChange = (options) => {\r\n    setRoles(options);\r\n  }\r\n\r\n  const handleLinkCreate = async () => {\r\n    let roleValues = ''\r\n    let coma = ''\r\n    roles.forEach(role => {\r\n      roleValues = roleValues + coma + role.value\r\n      coma = ','\r\n    })\r\n\r\n    setIsLoading(true)\r\n    let links = await createSignUpLink(roleValues);\r\n    setIsLoading(false)\r\n\r\n    const linklist = links.map(link => {\r\n      return {\r\n        id: link.id,\r\n        link: link.link,\r\n        roles: link.role,\r\n        action: <MDBBtn color=\"blue\" size=\"sm\" onClick={\r\n          () => {\r\n            setSelectedLink(link.link)\r\n            showSendEmailModal()\r\n          }}\r\n        >Send</MDBBtn>\r\n      }\r\n    })\r\n\r\n    setLinkList(linklist)\r\n    setShowCreateLinkModal(false)\r\n  }\r\n\r\n  const showSendEmailModal = async () => {\r\n    setIsShowSendModal(true);\r\n  }\r\n\r\n  const handleSendEmailModalClose = async () => {\r\n    setIsShowSendModal(false);\r\n  }\r\n\r\n  const handleLinkToEmailSend = async () => {\r\n    if (!validateEmail(email)) {\r\n      alert('Email is invalid')\r\n      return\r\n    }\r\n\r\n    setIsLoading(true)\r\n    await sendSignUpLink(email, selectedLink);\r\n    setIsLoading(false)\r\n\r\n    alert(`sent to ${email} successfully!`)\r\n\r\n    setEmail('')\r\n    setIsShowSendModal(false);\r\n  }\r\n\r\n  const columns= [\r\n    {\r\n      label: '#',\r\n      field: 'id',\r\n    },\r\n    {\r\n      label: 'Link',\r\n      field: 'link',\r\n    },\r\n    {\r\n      label: 'Roles',\r\n      field: 'roles',\r\n    },\r\n    {\r\n      label: 'Action',\r\n      field: 'action',\r\n    }\r\n  ];\r\n\r\n  const [linklist, setLinkList] = useState()\r\n\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <BackgroundColorContext.Consumer>\r\n      {({ color, changeColor }) => (\r\n        <React.Fragment>\r\n          <div className=\"wrapper hunter-wrapper\">\r\n          {!isShowSidebar && (\r\n            <Button\r\n              className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\r\n              onClick={handleSidebarChange}\r\n            >\r\n              <i className=\"tim-icons icon-align-left-2\"/>\r\n            </Button>\r\n          )}\r\n          {isShowSidebar && (\r\n              <Sidebar\r\n                isAdminPage={true}\r\n                routes={adminRoutes}\r\n                handleSidebarChange={handleSidebarChange}\r\n                selectedInstance={selectedInstance}\r\n                handleInstanceChange={handleInstanceChange}\r\n              />\r\n            )}\r\n            <Modal show={isShowCreateLinkModal} className=\"hunter-modal\" onHide={handleCreateLinkModalClose}>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Create Sign Up link for users</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <div className=\"select-multi-option\">\r\n                  <Select\r\n                    name=\"filters\"\r\n                    placeholder=\"Roles\"\r\n                    value={roles}\r\n                    onChange={handleRolesChange}\r\n                    options={optionsRole}\r\n                    isMulti={true}\r\n                  />\r\n                </div>\r\n              </Modal.Body>\r\n              <Modal.Footer className=\"hunter-modal-footer\">\r\n                <Button variant=\"primary\" onClick={handleLinkCreate}>\r\n                  Create Link\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n            <Modal show={isShowSendModal} className=\"hunter-modal\" onHide={handleSendEmailModalClose}>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Send the link</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control hunter-form-control\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => { handleEmailChange(e)} }\r\n                  />\r\n                </div>\r\n              </Modal.Body>\r\n              <Modal.Footer className=\"hunter-modal-footer\">\r\n                <Button variant=\"primary\" onClick={handleLinkToEmailSend} className=\"hunter-flex-button\">\r\n                  {isLoading && (\r\n                    <span className=\"spinner-border spinner-border-sm hunter-spinner-button\" role=\"status\" aria-hidden=\"true\"></span>\r\n                  )}\r\n                  Send\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n            <div className={`main-panel ${!isShowSidebar ? 'full-width' : ''}`} ref={mainPanelRef} data={color}>\r\n              <AdminNavbar\r\n                brandText={getBrandText(location.pathname)}\r\n                toggleSidebar={toggleSidebar}\r\n                sidebarOpened={sidebarOpened}\r\n              />\r\n              <div className=\"hunter-page-container\">\r\n                <div className=\"hunter-page-title\">\r\n                  <h3>Link Manage</h3>\r\n                </div>\r\n                <div className=\"col-sm-6 hunter-mdb-table-container\">\r\n                  <div className=\"create-button-bar\">\r\n                    <MDBBtn color=\"blue\" size=\"md\" onClick={handleCreateLinkClick}>Create</MDBBtn>\r\n                  </div>\r\n                  <MDBTable btn>\r\n                    <MDBTableHead columns={columns} color=\"dark\"/>\r\n                    <MDBTableBody rows={linklist} className=\"hunter-mdb-table-body\"/>\r\n                  </MDBTable>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </BackgroundColorContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default LinkManage;","import React, {useState, useContext} from 'react'\r\n\r\nexport const CsvDownloadContext = React.createContext()\r\nexport const CsvDownloadUpdateContext = React.createContext()\r\n\r\nexport function useCsvDownload() {\r\n  return useContext(CsvDownloadContext)\r\n}\r\n\r\nexport function useCsvDownloadUpdate() {\r\n  return useContext(CsvDownloadUpdateContext)\r\n}\r\n\r\nexport function CsvDownloadProvider({children}) {\r\n  const [dataset, setDataset] = useState([{}])\r\n\r\n  const updateCsvDownload = function(data) {\r\n    setDataset(data)\r\n  }\r\n\r\n  return (\r\n    <CsvDownloadContext.Provider value={dataset}>\r\n      <CsvDownloadUpdateContext.Provider value={updateCsvDownload}>\r\n        {children}\r\n      </CsvDownloadUpdateContext.Provider>\r\n    </CsvDownloadContext.Provider>\r\n  )\r\n}","import { CSVLink } from \"react-csv\"\r\nimport { useCsvDownload } from \"contexts/CsvDownloadContext\"\r\n\r\nconst ButtonCsvDownload = (props) => {\r\n  const dataset = useCsvDownload()\r\n  return (\r\n    <div className={\"d-flex align-items-center\"}>\r\n      <CSVLink data={dataset} filename={props.filename} className={\"btn btn-primary py-2 my-0 hunter-csv-download-button\"}>Csv Download</CSVLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ButtonCsvDownload","import React, {useState, useContext} from 'react'\r\n\r\nconst DatatableContext = React.createContext()\r\nconst DatatableLoadingContext = React.createContext()\r\nconst PaginationContext = React.createContext()\r\nconst PaginationUpdatingContext = React.createContext()\r\n\r\nexport const useDatatableLoading = () => {\r\n  return useContext(DatatableLoadingContext)\r\n}\r\n\r\nexport const useDatatable = (initialData) => {\r\n  return useContext(DatatableContext)\r\n}\r\n\r\n\r\nexport const useDatatableValue = (initialData) => {\r\n  const context = useContext(DatatableContext)\r\n  const [, setDatatable] = context\r\n\r\n  setDatatable(initialData)\r\n  return context\r\n}\r\n\r\n\r\nexport const useDatatableUpdate = () => {\r\n  const [, setDatatable] = useContext(DatatableContext)\r\n\r\n  return setDatatable\r\n}\r\n\r\nexport const usePagination = () => {\r\n  return useContext(PaginationContext)\r\n}\r\n\r\nexport const usePaginationUpdate = () => {\r\n  return useContext(PaginationUpdatingContext)\r\n}\r\n\r\nexport const DatatableProvider = ({children}) => {\r\n  const [isLoading, setLoading] = useState(false)\r\n\r\n  const [itemsPerPage, setItemsPerPage] = useState(10)\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [totalItems, setTotalItems] = useState(0)\r\n\r\n  const [datatable, setDatatable] = useState({\r\n    columns: [],\r\n    rows: [],\r\n  })\r\n\r\n  return (\r\n    <PaginationContext.Provider value={[parseInt(currentPage), parseInt(itemsPerPage), parseInt(totalItems)]}>\r\n      <PaginationUpdatingContext.Provider value={[setCurrentPage, setItemsPerPage, setTotalItems]}>\r\n        <DatatableContext.Provider value={[datatable, setDatatable]}>\r\n          <DatatableLoadingContext.Provider value={[isLoading, setLoading]}>\r\n              {children}\r\n          </DatatableLoadingContext.Provider>\r\n        </DatatableContext.Provider>\r\n      </PaginationUpdatingContext.Provider>\r\n    </PaginationContext.Provider>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst Spinner = (props) => {\r\n  // props.color: primary,success,danger,warning,info\r\n  const color = props.color?props.color:'primary'\r\n\r\n  return (\r\n    <>\r\n      <div className={\"spinner-border text-\" + color} role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Spinner;","import { MDBDataTableV5 } from 'mdbreact';\r\nimport Pagination from 'react-bootstrap/Pagination'\r\nimport Spinner from 'components/Spinner'\r\nimport {useDatatableLoading, useDatatable, usePagination, usePaginationUpdate} from \"contexts/DatatableContext\"\r\n\r\nconst HeiknDatatable = (props) => {\r\n  const [isLoadingData, ] = useDatatableLoading()\r\n  const [currentPage, itemsPerPage, totalItems] = usePagination();\r\n  const [setCurrentPage, setItemsPerPage, ] = usePaginationUpdate();\r\n  const [datatable,] = useDatatable();\r\n\r\n  const handleItemsPerPageChanged = (e) => {\r\n    setItemsPerPage(parseInt(e.target.value))\r\n  }\r\n\r\n  const handlePrevClick = () => {\r\n    if (currentPage > 0) {\r\n      setCurrentPage(currentPage - 1)\r\n    }\r\n  }\r\n\r\n  const handleNextClick = () => {\r\n    if (currentPage < totalItems) {\r\n      setCurrentPage(currentPage + 1)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {isLoadingData && <div className=\"hunter-spinner-area\"><span className=\"mr-30\">Loading ...</span><Spinner>Loading</Spinner></div>}\r\n      {!isLoadingData && (\r\n      // <MDBDataTableV5\r\n      //   hover\r\n      //   maxHeight=\"500px\"\r\n      //   entriesOptions={[10, 25, 50, 100]}\r\n      //   entries={itemsPerPage}\r\n      //   pagesAmount={itemsPerPage}\r\n      //   data={datatable}\r\n      //   dark={true}\r\n      //   noBottomColumns={true}\r\n      //   small={true}\r\n      //   striped={true}\r\n      //   scrollY={true}\r\n      //   displayEntries={false}\r\n      //   info={false}\r\n      //   paging={false}\r\n      // />\r\n      <MDBDataTableV5 hover entriesOptions={[10, 15]} entries={10} pagesAmount={4} data={datatable} fullPagination  />\r\n      )}\r\n\r\n      {/* <div class=\"mdb-datatable dt-bootstrap4\">\r\n        <div class=\"d-flex align-items-center justify-content-end\">\r\n          <div data-test=\"mdb-datatable-entries\" class=\"mdb-datatable-entries\">\r\n            <div data-test=\"datatable-select\" class=\"mdb-datatable-length bs-select\">\r\n              <label>\r\n                Rows per page:\r\n                <select class=\"custom-select custom-select-sm form-control form-control-sm\" style={{ marginLeft: 0.5 + 'rem' }} onChange={handleItemsPerPageChanged}>\r\n                  <option value=\"10\">10</option>1\r\n                  <option value=\"25\">25</option>\r\n                  <option value=\"50\">50</option>\r\n                  <option value=\"100\">100</option>\r\n                </select>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Pagination>\r\n        <Pagination.Item>{(currentPage - 1) * itemsPerPage + 1}</Pagination.Item>\r\n        <Pagination.Item>{currentPage * itemsPerPage}</Pagination.Item>\r\n        <Pagination.Item> of </Pagination.Item>\r\n        <Pagination.Item> { totalItems } </Pagination.Item>\r\n        <Pagination.Prev disabled={currentPage <= 1} onClick={() => { handlePrevClick() }}/>\r\n        <Pagination.Next disabled={(currentPage + 1) >= totalItems / itemsPerPage} onClick={() => { handleNextClick() }}/>\r\n      </Pagination> */}\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HeiknDatatable","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport Select from 'react-select'\r\nimport { Link } from \"react-router-dom\";\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport {\r\n  Collapse,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  NavLink,\r\n  Nav,\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useAuth } from 'contexts/authContext';\r\nimport { getAllSymbols, filterPriceData } from 'api/Api'\r\nimport { currentDateString } from 'utils/helper'\r\nimport MultiRangeSlider from 'components/MultiRangeSlider/MultiRangeSliderNumber'\r\nimport { useCsvDownloadUpdate } from \"contexts/CsvDownloadContext\"\r\nimport ButtonCsvDownload from 'components/ButtonCsvDownload'\r\nimport {useDatatableLoading, useDatatable, usePagination, usePaginationUpdate} from \"contexts/DatatableContext\"\r\nimport HeiknDatatable from 'components/HeiknDatatablePrice'\r\n\r\nconst PriceDataTable = () => {\r\n  const auth = useAuth();\r\n  const history = useHistory();\r\n  const [collapseOpen,] = React.useState(false)\r\n  const [symbol, setSymbol] = React.useState({value: \"GOOG\", label: \"GOOG\"})\r\n  const [timeFrame, setTimeFrame] = useState({ value: \"1mi\", label: \"1m\"});\r\n  const [tradeStartDate, setTradeStartDate] = useState('2021-01-01')\r\n  const [tradeEndDate, setTradeEndDate] = useState(currentDateString())\r\n  const [optionsSymbol, setOptionsSymbol] = useState([])\r\n  const [optionsTimeFrame] = useState([\r\n    { value: \"1mi\", label: \"1m\" },\r\n    { value: \"1ho\", label: \"1h\" },\r\n    { value: \"1da\", label: \"1d\" }\r\n  ])\r\n\r\n  // handle pagination state\r\n  const [currentPage, itemsPerPage,] = usePagination()\r\n  const [, , setTotalItems] = usePaginationUpdate()\r\n\r\n  const hearder_columns = useMemo(() => {\r\n    return [\r\n    {\r\n      label: 'O',\r\n      field: 'o',\r\n      width: 200,\r\n      attributes: {\r\n        'aria-controls': 'DataTable',\r\n        'aria-label': 'symbol',\r\n      },\r\n    },\r\n    {\r\n      label: 'H',\r\n      field: 'h',\r\n      width: 200,\r\n    },\r\n    {\r\n      label: 'C',\r\n      field: 'c',\r\n      width: 200,\r\n    },\r\n    {\r\n      label: 'L',\r\n      field: 'l',\r\n      width: 200,\r\n    },\r\n    {\r\n      label: 'V',\r\n      field: 'v',\r\n      width: 200,\r\n    },\r\n    {\r\n      label: 'Date',\r\n      field: 'date',\r\n      sort: 'price',\r\n    },\r\n  ]}, [])\r\n\r\n  const [, setLoadingData] = useDatatableLoading()\r\n\r\n  const [, setDatatable] = useDatatable({\r\n    columns: hearder_columns,\r\n    rows: [\r\n    ],\r\n  });\r\n\r\n  const updateCsvDownload = useCsvDownloadUpdate();\r\n\r\n\r\n  // updating datatable of price\r\n  const getPriceTrades = async (symbol, timeFrame, tradeStartDate, tradeEndDate) => {\r\n    setLoadingData(true)\r\n\r\n    const trades_data = await filterPriceData(symbol, timeFrame, tradeStartDate, tradeEndDate, currentPage, itemsPerPage);\r\n\r\n    setDatatable({\r\n      columns: hearder_columns,\r\n      rows: trades_data.candles\r\n    })\r\n    updateCsvDownload([...trades_data.candles])\r\n    setTotalItems(trades_data.page_total)\r\n\r\n    setLoadingData(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPriceTrades(symbol.value, timeFrame.value, tradeStartDate, tradeEndDate)\r\n  }, [symbol, timeFrame, hearder_columns, tradeStartDate, tradeEndDate, itemsPerPage, currentPage])\r\n\r\n\r\n  useEffect(() => {\r\n    const getSymbols = async () => {\r\n      const res = await getAllSymbols()\r\n      setOptionsSymbol(res)\r\n    }\r\n    getSymbols()\r\n  }, [setOptionsSymbol])\r\n\r\n\r\n  const handleSignout = () => {\r\n    auth.signout()\r\n    history.push('/login')\r\n  }\r\n\r\n  const handleSymbolChange = (e) => {\r\n    setSymbol(e)\r\n  }\r\n\r\n  const handleTimeFrameChange = (e) => {\r\n    setTimeFrame(e)\r\n  }\r\n\r\n  const selectDateRange = (startDate, endDate) => {\r\n    setTradeStartDate(startDate)\r\n    setTradeEndDate(endDate)\r\n  }\r\n\r\n  return (\r\n    <div className=\"hunter-chart-container\">\r\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark hunter-nav-bar\">\r\n        <div className=\"logo-title\">\r\n          <a href=\"/chart\" className=\"hunter-navbar-brand\">\r\n            Violette AM - Client Portal\r\n          </a>\r\n        </div>\r\n        <div className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to={\"/chart\"} className=\"nav-link\"></Link>\r\n          </li>\r\n        </div>\r\n        <Collapse navbar isOpen={collapseOpen}>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <UncontrolledDropdown nav>\r\n                <DropdownToggle\r\n                  caret\r\n                  color=\"default\"\r\n                  nav\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  <div className=\"photo\">\r\n                    <img\r\n                      alt=\"...\"\r\n                      src={require(\"assets/img/anime3.png\").default}\r\n                    />\r\n                  </div>\r\n                  <p className=\"d-lg-none\">Log out</p>\r\n                </DropdownToggle>\r\n                <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\r\n                  <DropdownItem divider tag=\"li\" />\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\" onClick={() => {handleSignout()}}>Log out</DropdownItem>\r\n                  </NavLink>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n              <li className=\"separator d-lg-none\" />\r\n            </Nav>\r\n          </Collapse>\r\n      </nav>\r\n      <div className=\"col-sm-12 hunter-data-table-container\">\r\n        <div className=\"hunter-data-table-title\">\r\n          Price Data Table\r\n        </div>\r\n        <div className=\"hunter-search-filter-area\">\r\n          <div className=\"select-option\">\r\n            <Select\r\n              value={symbol}\r\n              onChange={handleSymbolChange}\r\n              options={optionsSymbol}\r\n              placeholder=\"Symbol\"\r\n            />\r\n          </div>\r\n          <div className=\"select-option\">\r\n            <Select\r\n              value={timeFrame}\r\n              onChange={handleTimeFrameChange}\r\n              options={optionsTimeFrame}\r\n              placeholder=\"Time Frame\"\r\n            />\r\n          </div>\r\n          <div className='input-group date hunter-date-time-picker' id='datetimepicker1'>\r\n            {/* <MultiRangeSlider\r\n              selectDateRange={selectDateRange}\r\n            /> */}\r\n            <ButtonCsvDownload filename={\"price.csv\"}>Csv Download</ButtonCsvDownload>\r\n          </div>\r\n        </div>\r\n        <HeiknDatatable />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PriceDataTable;\r\n","import React from \"react\";\r\nimport {\r\n  Button\r\n} from \"reactstrap\";\r\n\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\nimport PriceDataTable from \"components/Datatable/PriceDataTable\"\r\n\r\nimport { routes } from \"routes.js\";\r\n\r\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\r\nimport { CsvDownloadProvider } from 'contexts/CsvDownloadContext';\r\nimport { DatatableProvider } from \"contexts/DatatableContext\";\r\n\r\nfunction PriceData() {\r\n  const [isShowSidebar, setShowSidebar] = React.useState(false);\r\n  const [selectedInstance, setSelectedInstance] = React.useState('trade_data');\r\n\r\n  const handleSidebarChange = () => {\r\n    setShowSidebar(!isShowSidebar);\r\n  };\r\n\r\n  const handleInstanceChange = (instance) => {\r\n    setSelectedInstance(instance)\r\n  }\r\n\r\n  return (\r\n    <BackgroundColorContext.Consumer>\r\n      {({ color }) => (\r\n        <React.Fragment>\r\n          <div className=\"wrapper hunter-wrapper\">\r\n          {!isShowSidebar && (\r\n            <Button\r\n              className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\r\n              onClick={handleSidebarChange}\r\n            >\r\n              <i className=\"tim-icons icon-align-left-2\"/>\r\n            </Button>\r\n          )}\r\n          {isShowSidebar && (\r\n              <Sidebar\r\n                isAdminPage={false}\r\n                routes={routes}\r\n                subInstance={'pricedatatable'}\r\n                selectedInstance={selectedInstance}\r\n                handleSidebarChange={handleSidebarChange}\r\n                handleInstanceChange={handleInstanceChange}\r\n              />\r\n            )}\r\n            <div className=\"col-sm-12\">\r\n              <DatatableProvider>\r\n                <CsvDownloadProvider>\r\n                  <PriceDataTable />\r\n                </CsvDownloadProvider>\r\n              </DatatableProvider>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </BackgroundColorContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default PriceData;","import { MDBDataTableV5 } from 'mdbreact';\r\nimport Pagination from 'react-bootstrap/Pagination'\r\nimport Spinner from 'components/Spinner'\r\nimport {useDatatableLoading, useDatatable, usePagination, usePaginationUpdate} from \"contexts/DatatableContext\"\r\n\r\nconst HeiknDatatable = (props) => {\r\n  const [isLoadingData, ] = useDatatableLoading()\r\n  const [currentPage, itemsPerPage, totalItems] = usePagination();\r\n  const [setCurrentPage, setItemsPerPage, ] = usePaginationUpdate();\r\n  const [datatable,] = useDatatable();\r\n\r\n  const handleItemsPerPageChanged = (e) => {\r\n    setItemsPerPage(parseInt(e.target.value))\r\n  }\r\n\r\n  const handlePrevClick = () => {\r\n    if (currentPage > 0) {\r\n      setCurrentPage(currentPage - 1)\r\n    }\r\n  }\r\n\r\n  const handleNextClick = () => {\r\n    if (currentPage < totalItems) {\r\n      setCurrentPage(currentPage + 1)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {isLoadingData && <div className=\"hunter-spinner-area\"><span className=\"mr-30\">Loading ...</span><Spinner>Loading</Spinner></div>}\r\n      {!isLoadingData && (\r\n      <MDBDataTableV5\r\n        hover\r\n        maxHeight=\"500px\"\r\n        entriesOptions={[10, 25, 50, 100]}\r\n        entries={itemsPerPage}\r\n        pagesAmount={itemsPerPage}\r\n        data={datatable}\r\n        dark={true}\r\n        noBottomColumns={true}\r\n        small={true}\r\n        striped={true}\r\n        scrollY={true}\r\n        displayEntries={false}\r\n        info={false}\r\n        paging={false}\r\n      />\r\n      )}\r\n\r\n      <div class=\"mdb-datatable dt-bootstrap4\">\r\n        <div class=\"d-flex align-items-center justify-content-end\">\r\n          <div data-test=\"mdb-datatable-entries\" class=\"mdb-datatable-entries\">\r\n            <div data-test=\"datatable-select\" class=\"mdb-datatable-length bs-select\">\r\n              <label>\r\n                Rows per page:\r\n                <select class=\"custom-select custom-select-sm form-control form-control-sm\" style={{ marginLeft: 0.5 + 'rem' }} onChange={handleItemsPerPageChanged}>\r\n                  <option value=\"10\">10</option>1\r\n                  <option value=\"25\">25</option>\r\n                  <option value=\"50\">50</option>\r\n                  <option value=\"100\">100</option>\r\n                </select>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Pagination>\r\n        <Pagination.Item>{(currentPage - 1) * itemsPerPage + 1}</Pagination.Item>\r\n        <Pagination.Item>{currentPage * itemsPerPage}</Pagination.Item>\r\n        <Pagination.Item> of </Pagination.Item>\r\n        <Pagination.Item> { totalItems } </Pagination.Item>\r\n        <Pagination.Prev disabled={currentPage <= 1} onClick={() => { handlePrevClick() }}/>\r\n        <Pagination.Next disabled={(currentPage + 1) >= totalItems / itemsPerPage} onClick={() => { handleNextClick() }}/>\r\n      </Pagination>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HeiknDatatable","import React, { useCallback, useState, useEffect, useMemo } from \"react\";\r\nimport Select from 'react-select'\r\nimport { Link } from \"react-router-dom\";\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport {\r\n  Collapse,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  NavLink,\r\n  Nav,\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAuth } from 'contexts/authContext';\r\nimport { getAllSymbols, filterTradesData } from 'api/Api'\r\nimport { currentDateString } from 'utils/helper'\r\nimport MultiRangeSlider from 'components/MultiRangeSlider/MultiRangeSlider'\r\nimport {useDatatableLoading, useDatatable, usePagination, usePaginationUpdate} from \"contexts/DatatableContext\"\r\nimport HeiknDatatable from 'components/HeiknDatatable'\r\n\r\nconst TradeDataTable = () => {\r\n  const auth = useAuth();\r\n  const history = useHistory();\r\n  const [collapseOpen,] = React.useState(false)\r\n  const [symbol, setSymbol] = React.useState([])\r\n  const [macroStrategy, setMacroStrategy] = useState();\r\n  const [microStrategy, setMicroStrategy] = useState()\r\n  const [tradeStartDate, setTradeStartDate] = useState('2021-01-01')\r\n  const [tradeEndDate, setTradeEndDate] = useState(currentDateString())\r\n  const [strategyList, setStrategyList] = useState([]);\r\n\r\n  // handle pagination state\r\n  const [currentPage, itemsPerPage,] = usePagination()\r\n  const [, , setTotalItems] = usePaginationUpdate()\r\n\r\n  const [optionsStrategy, setOptionsStrategy] = useState([])\r\n  const [optionsMacroStrategy, setOptionsMacroStrategy] = useState([])\r\n\r\n  const [optionsMicroStrategy, setOptionsMicroStrategy] = useState([])\r\n\r\n  const [optionsSymbol, setOptionsSymbol] = useState([])\r\n\r\n  const hearder_columns = useMemo(() => {\r\n    return [\r\n    {\r\n      label: 'Symbol',\r\n      field: 'symbol',\r\n      width: 150,\r\n      attributes: {\r\n        'aria-controls': 'DataTable',\r\n        'aria-label': 'symbol',\r\n      },\r\n    },\r\n    {\r\n      label: 'Strategy',\r\n      field: 'strategy',\r\n      width: 200,\r\n    },\r\n    {\r\n      label: 'Trade Date',\r\n      field: 'date',\r\n      sort: 'date',\r\n      width: 150,\r\n    },\r\n    {\r\n      label: 'Side',\r\n      field: 'side',\r\n      width: 270,\r\n    },\r\n    {\r\n      label: 'Quantity',\r\n      field: 'quantity',\r\n      sort: 'quantity',\r\n      width: 100,\r\n    },\r\n    {\r\n      label: 'Price',\r\n      field: 'price',\r\n      sort: 'price',\r\n      width: 100,\r\n    },\r\n  ]}, [])\r\n\r\n  const [,setDatatable] = useDatatable({\r\n    columns: hearder_columns,\r\n    rows: [\r\n    ],\r\n  });\r\n\r\n  const [,setLoadingData] = useDatatableLoading()\r\n\r\n\r\n  const getStrategyList = useCallback(\r\n    () => {\r\n      fetch(process.env.REACT_APP_BACKEND_URL + \"/api/get_strategy_list\")\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          const strategyOptions = data.result.map((o => {\r\n            return {\r\n              value: o.macro,\r\n              label: o.macro,\r\n            }\r\n          }))\r\n          setOptionsStrategy(strategyOptions);\r\n          if (data.result.length) {\r\n            setStrategyList(data.result);\r\n            data.result.forEach((item) => {\r\n              if (item.macro === 'heikfilter') {\r\n                const microStrategyOptions = item.micro.map(o => {\r\n                  return {\r\n                    value: o,\r\n                    label: o,\r\n                  }\r\n                })\r\n                setOptionsMicroStrategy( microStrategyOptions )\r\n                setMicroStrategy(microStrategyOptions[0])\r\n\r\n                const symbolOptions = item.symbols.map(o => {\r\n                  return {\r\n                    value: o,\r\n                    label: o,\r\n                  }\r\n                })\r\n                setOptionsSymbol(symbolOptions)\r\n                // setSymbol(symbolOptions[0])\r\n              }\r\n            })\r\n          }\r\n        })\r\n    },\r\n    [],\r\n  )\r\n\r\n  const getTrades = async (macroStrat, microStrat, tradeStartDate, tradeEndDate, currentPage, pageAmount) => {\r\n    setLoadingData(true)\r\n    const result = await filterTradesData(macroStrat, microStrat, tradeStartDate, tradeEndDate, currentPage, pageAmount);\r\n    setDatatable({\r\n      columns: hearder_columns,\r\n      rows: result.trades_data\r\n    })\r\n    setTotalItems(result.page_total)\r\n    setLoadingData(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getStrategyList()\r\n  }, [getStrategyList])\r\n\r\n  useEffect(() => {\r\n    getTrades(\r\n      macroStrategy ? macroStrategy.value : '',\r\n      microStrategy ? microStrategy.value : '',\r\n      tradeStartDate, tradeEndDate, currentPage, itemsPerPage)\r\n  }, [macroStrategy, microStrategy, hearder_columns, tradeStartDate, tradeEndDate, currentPage, itemsPerPage])\r\n\r\n  useEffect(() => {\r\n      const getSymbols = async () => {\r\n      const res = await getAllSymbols()\r\n      setOptionsSymbol(res)\r\n    }\r\n    getSymbols()\r\n  }, [setOptionsSymbol])\r\n\r\n  const handleSignout = () => {\r\n    auth.signout()\r\n    history.push('/login')\r\n  }\r\n\r\n  const handleSymbolChange = (e) => {\r\n    setSymbol(e)\r\n  }\r\n\r\n  const handleMacroStrategy = (e) => {\r\n    if (e) {\r\n      if (strategyList.length) {\r\n        strategyList.forEach((item) => {\r\n          if (item.macro === e.value) {\r\n            const microStrategyOptions = item.micro.map(o => {\r\n              return {\r\n                value: o,\r\n                label: o,\r\n              }\r\n            })\r\n            setOptionsMicroStrategy( microStrategyOptions )\r\n\r\n            setMicroStrategy(microStrategyOptions[0])\r\n\r\n            const symbolOptions = item.symbols.map(o => {\r\n              return {\r\n                value: o,\r\n                label: o,\r\n              }\r\n            })\r\n            setOptionsSymbol(symbolOptions)\r\n            // setSymbol(symbolOptions[0])\r\n            // setSymbol({value: 'MSFT', label: 'MSFT'})\r\n          }\r\n        })\r\n      }\r\n      setMacroStrategy(e)\r\n    }\r\n  }\r\n\r\n  const handleMicroStrategy = (e) => {\r\n    setMicroStrategy(e)\r\n  }\r\n\r\n  const selectDateRange = (startDate, endDate) => {\r\n    setTradeStartDate(startDate)\r\n    setTradeEndDate(endDate)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"hunter-chart-container\">\r\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark hunter-nav-bar\">\r\n        <div className=\"logo-title\">\r\n          <a href=\"/chart\" className=\"hunter-navbar-brand\">\r\n            Violette AM - Client Portal\r\n          </a>\r\n        </div>\r\n        <div className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to={\"/chart\"} className=\"nav-link\"></Link>\r\n          </li>\r\n        </div>\r\n        <Collapse navbar isOpen={collapseOpen}>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <UncontrolledDropdown nav>\r\n                <DropdownToggle\r\n                  caret\r\n                  color=\"default\"\r\n                  nav\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  <div className=\"photo\">\r\n                    <img\r\n                      alt=\"...\"\r\n                      src={require(\"assets/img/anime3.png\").default}\r\n                    />\r\n                  </div>\r\n                  <p className=\"d-lg-none\">Log out</p>\r\n                </DropdownToggle>\r\n                <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\r\n                  <DropdownItem divider tag=\"li\" />\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\" onClick={() => {handleSignout()}}>Log out</DropdownItem>\r\n                  </NavLink>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n              <li className=\"separator d-lg-none\" />\r\n            </Nav>\r\n          </Collapse>\r\n      </nav>\r\n      <div className=\"col-sm-12 hunter-data-table-container\">\r\n        <div className=\"hunter-data-table-title\">\r\n          Trade Data Table\r\n        </div>\r\n        <div className=\"hunter-search-filter-area\">\r\n          <div className=\"select-option\">\r\n            <Select\r\n              value={symbol}\r\n              onChange={handleSymbolChange}\r\n              options={optionsSymbol}\r\n              placeholder=\"Symbol\"\r\n            />\r\n          </div>\r\n          <div className=\"select-option\">\r\n            <Select\r\n              value={macroStrategy}\r\n              onChange={handleMacroStrategy}\r\n              options={optionsStrategy}\r\n              placeholder=\"Macro Strategy\"\r\n            />\r\n          </div>\r\n          <div className=\"select-option\">\r\n            <Select\r\n              value={microStrategy}\r\n              onChange={handleMicroStrategy}\r\n              options={optionsMicroStrategy}\r\n              placeholder=\"Micro Strategy\"\r\n            />\r\n          </div>\r\n          <div className='input-group date hunter-date-time-picker' id='datetimepicker1'>\r\n            <MultiRangeSlider\r\n              selectDateRange={selectDateRange}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <HeiknDatatable />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TradeDataTable;\r\n","import React from \"react\";\r\nimport {\r\n  Button\r\n} from \"reactstrap\";\r\n\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\nimport TradeDataTable from \"components/Datatable/TradeDataTable\"\r\nimport { routes } from \"routes.js\";\r\n\r\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\r\n\r\nfunction TradeData() {\r\n  const [isShowSidebar, setShowSidebar] = React.useState(false);\r\n  const [selectedInstance, setSelectedInstance] = React.useState('trade_data');\r\n\r\n  const handleSidebarChange = () => {\r\n    setShowSidebar(!isShowSidebar);\r\n  };\r\n\r\n  const handleInstanceChange = (instance) => {\r\n    setSelectedInstance(instance)\r\n  }\r\n\r\n  return (\r\n    <BackgroundColorContext.Consumer>\r\n      {({ color }) => (\r\n        <React.Fragment>\r\n          <div className=\"wrapper hunter-wrapper\">\r\n            {!isShowSidebar && (\r\n              <Button\r\n                className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\r\n                onClick={handleSidebarChange}\r\n              >\r\n                <i className=\"tim-icons icon-align-left-2\"/>\r\n              </Button>\r\n            )}\r\n            {isShowSidebar && (\r\n              <Sidebar\r\n                isAdminPage={false}\r\n                routes={routes}\r\n                subInstance={'tradedatatable'}\r\n                selectedInstance={selectedInstance}\r\n                handleSidebarChange={handleSidebarChange}\r\n                handleInstanceChange={handleInstanceChange}\r\n              />\r\n            )}\r\n            <div className=\"col-sm-12\">\r\n                <TradeDataTable />\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </BackgroundColorContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default TradeData;","import React, { useCallback, useState, useEffect, useMemo } from \"react\";\r\nimport MultiRangeSlider from 'components/MultiRangeSlider/MultiRangeSlider'\r\nimport { Link } from \"react-router-dom\";\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport {\r\n  Collapse,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  NavLink,\r\n  Nav,\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MDBDataTableV5 } from 'mdbreact';\r\nimport Pagination from 'react-bootstrap/Pagination'\r\nimport { useAuth } from 'contexts/authContext';\r\nimport { filterTradesData } from 'api/Api'\r\nimport { currentDateString } from 'utils/helper'\r\n\r\nconst HybridViewTable = (props) => {\r\n  const { symbol, macroStrategy, microStrategy, isLoaded } = props;\r\n  const auth = useAuth();\r\n  const history = useHistory();\r\n  const [collapseOpen,] = React.useState(false)\r\n  const [tradeStartDate, setTradeStartDate] = useState('2021-01-01')\r\n  const [tradeEndDate, setTradeEndDate] = useState(currentDateString())\r\n  \r\n  const [pageAmount, setPageAmount] = useState(10)\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [wholeRows, setWholeRows] = useState(0);\r\n\r\n  const hearder_columns = useMemo(() => {\r\n    return [\r\n    {\r\n      label: 'Symbol',\r\n      field: 'symbol',\r\n      width: 150,\r\n      attributes: {\r\n        'aria-controls': 'DataTable',\r\n        'aria-label': 'symbol',\r\n      },\r\n    },\r\n    {\r\n      label: 'Strategy',\r\n      field: 'strategy',\r\n      width: 200,\r\n    },\r\n    {\r\n      label: 'Trade Date',\r\n      field: 'date',\r\n      sort: 'date',\r\n      width: 150,\r\n    },\r\n    {\r\n      label: 'Side',\r\n      field: 'side',\r\n      width: 270,\r\n    },  \r\n    {\r\n      label: 'Quantity',\r\n      field: 'quantity',\r\n      sort: 'quantity',\r\n      width: 100,\r\n    },   \r\n    {\r\n      label: 'Price',\r\n      field: 'price',\r\n      sort: 'price',\r\n      width: 100,\r\n    },\r\n  ]}, [])\r\n\r\n  const [datatable, setDatatable] = React.useState({\r\n    columns: hearder_columns,\r\n    rows: [\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const get_trades = async (macroStrat, microStrat, tradeStartDate, tradeEndDate) => {\r\n      const result = await filterTradesData(macroStrat, microStrat, tradeStartDate, tradeEndDate, currentPage, pageAmount);\r\n      setDatatable({\r\n        columns: hearder_columns,\r\n        rows: result.trades_data\r\n      })\r\n      setWholeRows(result.page_total)\r\n    }\r\n\r\n    if (isLoaded) {\r\n      get_trades(\r\n        macroStrategy ? macroStrategy.value : '',\r\n        microStrategy ? microStrategy.value : '', \r\n        tradeStartDate, tradeEndDate, currentPage, pageAmount)\r\n    }\r\n  }, [macroStrategy, microStrategy, hearder_columns, tradeStartDate, tradeEndDate, isLoaded])\r\n\r\n  const handleSignout = () => {\r\n    auth.signout()\r\n    history.push('/login')\r\n  }\r\n\r\n  const selectDateRange = (startDate, endDate) => {\r\n    setTradeStartDate(startDate)\r\n    setTradeEndDate(endDate)\r\n  }\r\n\r\n  const loadPriceDetails = async () => {\r\n    const result = await filterTradesData(macroStrategy ? macroStrategy.value : '',\r\n    microStrategy ? microStrategy.value : '',\r\n    tradeStartDate, tradeEndDate, currentPage, pageAmount);\r\n    setDatatable({\r\n      columns: hearder_columns,\r\n      rows: result.trades_data\r\n    })\r\n    \r\n    setWholeRows(result.page_total)\r\n  }\r\n\r\n  const handlePrevClick = () => {\r\n    setCurrentPage(currentPage - 1)\r\n    loadPriceDetails(currentPage - 1)\r\n  }\r\n\r\n  const handleNextClick = () => {\r\n    setCurrentPage(currentPage + 1)\r\n    loadPriceDetails(currentPage + 1)\r\n  }\r\n\r\n  return (\r\n    <div className=\"hunter-chart-container\">\r\n      <div className=\"col-sm-12 hunter-data-table-container\">\r\n        <div className=\"hunter-data-table-title\">\r\n          Trade Data Table\r\n        </div>\r\n        <div className=\"hunter-search-filter-area\">\r\n          <div className='date hunter-item-chart hunter-date-time-picker mb-3' id='datetimepicker1'>\r\n            <MultiRangeSlider\r\n              selectDateRange={selectDateRange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <MDBDataTableV5 \r\n          hover\r\n          maxHeight=\"500px\"\r\n          entriesOptions={[10, 25, 50, 100]}\r\n          entries={10}\r\n          pagesAmount={4}\r\n          data={datatable}\r\n          dark={true}\r\n          noBottomColumns={true}\r\n          small={true}\r\n          striped={true}\r\n          scrollY={true}\r\n        />;\r\n        <Pagination>\r\n          <Pagination.Item>{(currentPage-1)*10 + 1}</Pagination.Item>\r\n          <Pagination.Item>{(currentPage) * 10}</Pagination.Item>\r\n          <Pagination.Item> of </Pagination.Item>\r\n          <Pagination.Item> { wholeRows } </Pagination.Item>\r\n          <Pagination.Prev disabled={currentPage <= 0} onClick={() => { handlePrevClick() }}/>\r\n          <Pagination.Next disabled={(currentPage + 1) >= wholeRows / 10} onClick={() => { handleNextClick() }}/>\r\n        </Pagination>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HybridViewTable;\r\n","import React, { useCallback, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Select from 'react-select'\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport StockChart from \"../stock-chart/StockChart\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Collapse,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  NavLink,\r\n  Nav,\r\n} from \"reactstrap\";\r\nimport { useAuth } from 'contexts/authContext';\r\nimport disableScroll from 'disable-scroll';\r\nimport HybridViewTable from \"./HybridViewTable\";\r\nimport { getSymbolsByMicroStrategy, getStrategyListReq } from 'api/Api';\r\n\r\nconst HybridViewChartTable = (props) => {\r\n\r\n  const auth = useAuth();\r\n  const { selectedInstance } = props\r\n  const history = useHistory();\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n  const [symbol, setSymbol] = useState(null);//{ value: 'MSFT', label: 'MSFT' }\r\n  const [indicators, setIndicators] = useState([]);\r\n  const [isShowMicro, setIsShowMicro] = useState(true);\r\n  const [symbolList, setSymbolList] = useState([])\r\n  const [isGetSymbolList] = useState(false)\r\n  const [collapseOpen,] = React.useState(false)\r\n  const [selectedViewType, setSelectedViewType] = useState({ value: 'charting', label: 'Charting' });\r\n  const [microStrategy, setMicroStrategy] = useState(null);//{ value: '2m', label: '2m' }\r\n  const [strategy, setStrategy] = useState(null);//{ value: 'heikfilter', label: 'heikfilter' }\r\n  const [strategyList, setStrategyList] = useState([]);\r\n  const [user] = useState(JSON.parse(localStorage.getItem('user-info')));\r\n  const [extendMarketTime, setExtendMarketTime] = useState(\r\n    {\r\n      value: 'markettime', label: 'market time',\r\n    }\r\n  );\r\n  \r\n  const [optionsViewTypes, setOptionsViewTypes] = useState([\r\n    { value: 'charting', label: 'Charting' },\r\n    { value: 'performance', label: 'Performance' },\r\n  ])\r\n\r\n  const [optionsMicroStrategy, setOptionsMicroStrategy] = useState([])\r\n  \r\n  const [optionsStratgy, setOptionsStrategy] = useState([])\r\n\r\n  const [optionsIndicator, setOptionsIndicator] = useState([\r\n    {\r\n      value: 'volume', label: 'VOLUME',\r\n    },\r\n    {\r\n      value: 'rsi1', label: 'RSI',\r\n    },\r\n    {\r\n      value: 'rsi2', label: 'RSI2',\r\n    },\r\n    {\r\n      value: 'rsi3', label: 'RSI3',\r\n    },\r\n    {\r\n      value: 'heik', label: 'HEIK1',\r\n    },\r\n    {\r\n      value: 'heik_diff', label: 'HEIK2',\r\n    }\r\n  ]);\r\n  \r\n  const [optionsMarketTime, setOptionsMarketTime] = useState([\r\n    {\r\n      value: 'markettime', label: 'market time',\r\n    },\r\n    {\r\n      value: 'extend_markettime', label: 'extend market time',\r\n    }\r\n  ]);\r\n\r\n  const getStrategyList = useCallback(\r\n    async () => {\r\n      setIsLoaded(false)\r\n      const strategyListRes = await getStrategyListReq();\r\n      if (strategyListRes.success) {\r\n        const data = strategyListRes.data;\r\n        setStrategyList(data.result);\r\n        const strategyOptions = data.result.map((o => {\r\n          return {\r\n            value: o.macro,\r\n            label: o.macro,\r\n          }\r\n        }))\r\n        setOptionsStrategy(strategyOptions);\r\n        setStrategy(strategyOptions[0]);\r\n        if (data.result.length) {\r\n          let flag = true\r\n          let item = data.result[0]\r\n          if (flag) {\r\n            const microStrategyOptions = item.micro.map(o => {\r\n              return {\r\n                value: o,\r\n                label: o,\r\n              }\r\n            })\r\n            \r\n            setOptionsMicroStrategy( microStrategyOptions )\r\n            setMicroStrategy(microStrategyOptions[0])\r\n\r\n            const result = await getSymbolsByMicroStrategy(strategyOptions[0].value, microStrategyOptions[0].value)\r\n            if (result.success) {\r\n              const symbolOptions = result.data.map(o => {\r\n                return {\r\n                  value: o,\r\n                  label: o,\r\n                }\r\n              })\r\n              \r\n              setSymbolList(symbolOptions)\r\n              setSymbol(symbolOptions[0])\r\n              setIsLoaded(true)\r\n            }\r\n          }\r\n          flag = false\r\n        }\r\n      }\r\n    },\r\n    [],\r\n  )\r\n\r\n  const get_tables = useCallback(\r\n    (strategy) => {\r\n      const requestOptions = {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n          'strategy': strategy\r\n        })\r\n      };\r\n      \r\n      fetch(process.env.REACT_APP_BACKEND_URL + \"/api/tables\", requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          let temp_data = []\r\n          data.tables.map((x) => {\r\n            temp_data.push({\r\n              value: x,\r\n              label: x\r\n            });\r\n            return null\r\n          })\r\n          setSymbolList(temp_data)\r\n          setSymbol(temp_data[0])\r\n        })\r\n    },\r\n    [],\r\n  )\r\n\r\n  useEffect(() => {\r\n    disableScroll.on();\r\n    return () => {\r\n      disableScroll.off();\r\n    }\r\n  }, [user])\r\n  \r\n  useEffect(() => {\r\n    const handleInstanceChange = (value) => {\r\n      if (value === 'live_trading') {\r\n        setIsShowMicro(false);\r\n        setStrategy({ value: 'no_strategy', label: 'No Strategy' });\r\n        setOptionsStrategy([\r\n          { value: 'no_strategy', label: 'No Srategy' },\r\n        ])\r\n        return\r\n      }\r\n      getStrategyList()\r\n      setIsShowMicro(true);\r\n    }\r\n    if (!user.is_admin && !user?.role.length) {\r\n      return;\r\n    }\r\n    handleInstanceChange(selectedInstance)\r\n    if(selectedInstance === 'live_trading') {\r\n      get_tables('no_strategy');    \r\n    }\r\n    if (selectedInstance === 'optimization') {\r\n      setOptionsViewTypes([\r\n        { value: 'optimization ', label: 'Optimization' },\r\n      ])\r\n    } else {\r\n      setOptionsViewTypes([\r\n        { value: 'charting', label: 'Charting' },\r\n        { value: 'performance', label: 'Performance' },\r\n      ])\r\n    }\r\n  }, [selectedInstance, user.is_admin, user.role?.length])\r\n\r\n  const handleViewTypeChange = (value) => {\r\n    setSelectedViewType(value)\r\n    if (value.value === 'performance') {\r\n      const locationState = {\r\n        selectedInstance,\r\n        viewType: value,\r\n        initStrategy: strategy,\r\n        initMicroStrategy: { value: '2m', label: '2m' },\r\n        initIndicators: indicators,\r\n        initSymbol: symbol,\r\n      }\r\n      if (value) {\r\n        history.push({\r\n          state: locationState,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  const handlSymbolChange = (e) => {\r\n    if (e) {\r\n      setSymbol(e)\r\n    }\r\n  }\r\n\r\n  const handleMarketTimeChange = (e) => {\r\n    if (e) {\r\n      setExtendMarketTime(e)\r\n    }\r\n  }\r\n\r\n  const handleStrategy = async (e) => {\r\n    if (e) {\r\n      if (strategyList.length) {\r\n        strategyList.forEach((item) => {\r\n          if (item.macro === e.value) {\r\n            const microStrategyOptions = item.micro.map(o => {\r\n              return {\r\n                value: o,\r\n                label: o,\r\n              }\r\n            })\r\n            setOptionsMicroStrategy( microStrategyOptions )\r\n\r\n            const is_2m = microStrategyOptions.filter((o => o.value === '2m'))\r\n\r\n            setMicroStrategy(microStrategyOptions[0])\r\n            \r\n            const symbolOptions = item.symbols.map(o => {\r\n              return {\r\n                value: o,\r\n                label: o,\r\n              }\r\n            })\r\n\r\n            setSymbolList(symbolOptions)\r\n            setSymbol(symbolOptions[0])\r\n          }\r\n        })\r\n      }\r\n      setStrategy(e)\r\n    }\r\n  }\r\n  \r\n  const handleMicroStrategyChange = (e) => {\r\n    if (e) {\r\n      setMicroStrategy(e)\r\n    }\r\n  }\r\n  \r\n  const handleIndicatorsChange = (options) => {\r\n    setIndicators(options);\r\n  }\r\n\r\n  const calculateGridColumn = () => {\r\n    return 12\r\n  }\r\n\r\n  const handleSignout = () => {\r\n    auth.signout()\r\n    history.push('/login')\r\n  }\r\n\r\n  const displayChart = () => {\r\n    return (\r\n      <div className={`row full-height`}>\r\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\r\n          {microStrategy && symbol && (\r\n            < StockChart \r\n              extendMarketTime={extendMarketTime.value}\r\n              selectedInstance={selectedInstance}\r\n              selectedTradeDB='heikfilter-2mins-trades'\r\n              chartPeriod='20D 2min'\r\n              symbol={symbol.value}\r\n              indicators={indicators}\r\n              strategy={strategy}\r\n              isHomePage={true}\r\n              chartColumn={1}\r\n              microStrategy={microStrategy.value}\r\n              startDate={null}\r\n              endDate={null}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  return (\r\n    <div className=\"hunter-chart-container\">\r\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark hunter-nav-bar\">\r\n        <div className=\"logo-title\">\r\n          <a href=\"/chart\" className=\"hunter-navbar-brand\">\r\n            Violette AM - Client Portal\r\n          </a>\r\n        </div>\r\n        <div className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to={\"/chart\"} className=\"nav-link\"></Link>\r\n          </li>\r\n          {/* <div className=\"select-option\">\r\n            <Select\r\n              value={extendMarketTime}\r\n              onChange={handleMarketTimeChange}\r\n              options={optionsMarketTime}\r\n              placeholder=\"Market Time\"\r\n            />\r\n          </div> */}\r\n          <div className=\"select-option\">\r\n            <Select\r\n              value={strategy}\r\n              onChange={handleStrategy}\r\n              options={optionsStratgy}\r\n              placeholder=\"Macro Strategy\"\r\n            />\r\n          </div>\r\n          {isShowMicro && (\r\n            <div className=\"select-option\">\r\n              <Select\r\n                value={microStrategy}\r\n                onChange={handleMicroStrategyChange}\r\n                options={optionsMicroStrategy}\r\n                placeholder=\"Micro Strategy\"\r\n              />\r\n            </div>  \r\n          )}\r\n          <div className=\"select-option\">\r\n            <Select\r\n              value={symbol}\r\n              onChange={handlSymbolChange}\r\n              options={symbolList}\r\n              placeholder=\"Symbol\"\r\n            />\r\n          </div>\r\n          <div className=\"select-multi-option\">\r\n            <Select\r\n              name=\"filters\"\r\n              placeholder=\"Indicators\"\r\n              value={indicators}\r\n              onChange={handleIndicatorsChange}\r\n              options={optionsIndicator}\r\n              isMulti={true}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Collapse navbar isOpen={collapseOpen}>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <UncontrolledDropdown>\r\n                <DropdownToggle\r\n                  caret\r\n                  color=\"default\"\r\n                  nav\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  <div className=\"photo\">\r\n                    <img\r\n                      alt=\"...\"\r\n                      src={require(\"assets/img/anime3.png\").default}\r\n                    />\r\n                  </div>\r\n                  <p className=\"d-lg-none\">Log out</p>\r\n                </DropdownToggle>\r\n                <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\r\n                  <DropdownItem divider tag=\"li\" />\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\" onClick={() => {\r\n                      handleSignout()\r\n                    }}>Log out</DropdownItem>\r\n                  </NavLink>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n              <li className=\"separator d-lg-none\" />\r\n            </Nav>\r\n          </Collapse>    \r\n      </nav>\r\n      <div className=\"display-flex-j-c\">\r\n        <div className=\"graphs-container half-width dark\">\r\n          {displayChart()}\r\n        </div>\r\n        <div className=\"half-width dark\">\r\n          <HybridViewTable\r\n            symbol={symbol}\r\n            macroStrategy={strategy}\r\n            microStrategy={microStrategy}\r\n            isLoaded={isLoaded}\r\n          />\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HybridViewChartTable;","import React from 'react'\r\nimport {\r\n  Button\r\n} from \"reactstrap\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\nimport { routes } from \"routes.js\";\r\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\r\nimport HybridViewChartTable from \"components/HybridViewChartTable/HybridViewChartTable\";\r\n\r\nconst HybridView = () => {\r\n  const [isShowSidebar, setShowSidebar] = React.useState(false);\r\n  const [selectedInstance, setSelectedInstance] = React.useState('hybrid_view');\r\n  \r\n  const handleSidebarChange = () => {\r\n      setShowSidebar(!isShowSidebar);\r\n  };\r\n\r\n  const handleInstanceChange = (instance) => {\r\n      setSelectedInstance(instance)\r\n  }\r\n\r\n  return (\r\n    <BackgroundColorContext.Consumer>\r\n      {({ color }) => (\r\n        <React.Fragment>\r\n          <div className=\"wrapper hunter-wrapper\">\r\n          {!isShowSidebar && (\r\n            <Button\r\n              className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\r\n              onClick={handleSidebarChange}\r\n            >\r\n              <i className=\"tim-icons icon-align-left-2\"/>\r\n            </Button>\r\n          )}\r\n          {isShowSidebar && (\r\n            <Sidebar\r\n              isAdminPage={false}\r\n              routes={routes}\r\n              subInstance={'tradedatatable'}\r\n              selectedInstance={selectedInstance}\r\n              handleSidebarChange={handleSidebarChange}\r\n              handleInstanceChange={handleInstanceChange}\r\n            />\r\n            )}\r\n            <div className=\"col-sm-12\">\r\n              <HybridViewChartTable selectedInstance={selectedInstance} />                \r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </BackgroundColorContext.Consumer>\r\n    );\r\n}\r\n\r\nexport default HybridView","import React from 'react';\r\nimport Select from 'react-select';\r\nimport { useCsvDownload } from 'contexts/CsvDownloadContext';\r\n\r\nconst Header = (props) => {\r\n  const { selectedHeaderNav, setSelectedHeaderNav, symbol, setSymbol, optionsSymbol } = props;\r\n\r\n\r\n  const handleNavClicked = (item) => {\r\n    setSelectedHeaderNav(item);\r\n  }\r\n\r\n  const handleSymbolChange = (e) => {\r\n    setSymbol(e);\r\n  };\r\n\r\n  const csvData = useCsvDownload()\r\n\r\n  return (\r\n    <div className=\"container custom-container\">\r\n      <div className=\"row dashboard-toolbar d-block\">\r\n        <div className=\"dashboard-toolbar-title d-flex\">\r\n          <div className=\"financial-dashboard-title\">\r\n            <span>Dashboard</span>\r\n          </div>\r\n          <div className=\"financial-dashboard-toolbar d-flex\">\r\n            <div className=\"select-option\">\r\n              <Select\r\n                value={symbol}\r\n                onChange={handleSymbolChange}\r\n                options={optionsSymbol}\r\n                placeholder=\"Symbol\"\r\n              />\r\n            </div>\r\n            <div className=\"dashboard-navbar\">\r\n              <ul className=\"nav justify-content-center\">\r\n                <li\r\n                  className={`nav-item ${selectedHeaderNav == \"News\" ? \"selected\" : \"\"}`}\r\n                  onClick={() => handleNavClicked(\"News\")}\r\n                >\r\n                  <i className=\"fas fa-inbox\"></i>\r\n                  <span>News</span>\r\n                </li>\r\n                <li\r\n                  className={`nav-item ${selectedHeaderNav == \"Data Table\" ? \"selected\" : \"\"}`}\r\n                  onClick={() => handleNavClicked(\"Data Table\")}\r\n                >\r\n                  <i className=\"fas fa-image\"></i>\r\n                  <span>Data Table</span>\r\n                </li>\r\n                <li\r\n                  className={`nav-item ${selectedHeaderNav == \"Chart\" ? \"selected\" : \"\"}`}\r\n                  onClick={() => handleNavClicked(\"Chart\")}\r\n                >\r\n                  <i className=\"fas fa-chart-bar\"></i>\r\n                  <span>Chart</span>\r\n                </li>\r\n                {/* <li\r\n                  className={`nav-item ${selectedHeaderNav == \"Income Statement\" ? \"selected\" : \"\"}`}\r\n                  onClick={() => handleNavClicked(\"Income Statement\")}\r\n                >\r\n                  <i className=\"fas fa-file-invoice-dollar\"></i>\r\n                  <span>Income Statement</span>\r\n                </li>\r\n                <li\r\n                  className={`nav-item ${selectedHeaderNav == \"Balance Sheet\" ? \"selected\" : \"\"}`}\r\n                  onClick={() => handleNavClicked(\"Balance Sheet\")}\r\n                >\r\n                  <i className=\"fas fa-money-bill-alt\"></i>\r\n                  <span>Balance Sheet</span>\r\n                </li>\r\n                <li\r\n                  className={`nav-item ${selectedHeaderNav == \"Cash Flow Statement\" ? \"selected\" : \"\"}`}\r\n                  onClick={() => handleNavClicked(\"Cash Flow Statement\")}\r\n                >\r\n                  <i className=\"fas fa-dollar-sign\"></i>\r\n                  <span>Cash Flow Statement</span>\r\n                </li> */}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { isNotDefined, isDefined } from \"react-stockcharts/lib/utils\";\r\n\r\nexport function saveInteractiveNode(chartId) {\r\n\treturn node => {\r\n\t\tthis[`node_${chartId}`] = node;\r\n\t};\r\n}\r\n\r\nexport function handleSelection(type, chartId) {\r\n\treturn selectionArray => {\r\n\t\tconst key = `${type}_${chartId}`;\r\n\t\tconst interactive = this.state[key].map((each, idx) => {\r\n\t\t\treturn {\r\n\t\t\t\t...each,\r\n\t\t\t\tselected: selectionArray[idx]\r\n\t\t\t};\r\n\t\t});\r\n\t\tthis.setState({\r\n\t\t\t[key]: interactive\r\n\t\t});\r\n\t};\r\n}\r\n\r\nexport function saveInteractiveNodes(type, chartId) {\r\n\treturn node => {\r\n\t\tif (isNotDefined(this.interactiveNodes)) {\r\n\t\t\tthis.interactiveNodes = {};\r\n\t\t}\r\n\t\tconst key = `${type}_${chartId}`;\r\n\t\tif (isDefined(node) || isDefined(this.interactiveNodes[key])) {\r\n\t\t\t// console.error(node, key)\r\n\t\t\t// console.log(this.interactiveNodes)\r\n\t\t\tthis.interactiveNodes = {\r\n\t\t\t\t...this.interactiveNodes,\r\n\t\t\t\t[key]: { type, chartId, node },\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport function getInteractiveNodes() {\r\n\treturn this.interactiveNodes;\r\n}","\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { format } from \"d3-format\";\r\nimport { timeFormat } from \"d3-time-format\";\r\nimport dayjs from \"dayjs\";\r\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\r\nimport {\r\n\tBarSeries,\r\n\tCandlestickSeries,\r\n\tLineSeries,\r\n\tMACDSeries,\r\n} from \"react-stockcharts/lib/series\";\r\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\r\nimport {\r\n\tCrossHairCursor,\r\n\tEdgeIndicator,\r\n\tCurrentCoordinate,\r\n\tMouseCoordinateX,\r\n\tMouseCoordinateY,\r\n} from \"react-stockcharts/lib/coordinates\";\r\n\r\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\r\nimport {\r\n\tOHLCTooltip,\r\n\tMovingAverageTooltip,\r\n\tMACDTooltip,\r\n} from \"react-stockcharts/lib/tooltip\";\r\nimport { ema, macd } from \"react-stockcharts/lib/indicator\";\r\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\r\nimport { EquidistantChannel, DrawingObjectSelector } from \"react-stockcharts/lib/interactive\";\r\nimport { last, toObject } from \"react-stockcharts/lib/utils\";\r\nimport {\r\n\tsaveInteractiveNodes,\r\n\tgetInteractiveNodes,\r\n} from \"./interactiveutils\";\r\n\r\nconst macdAppearance = {\r\n\tstroke: {\r\n\t\tmacd: \"#FF0000\",\r\n\t\tsignal: \"#00F300\",\r\n\t},\r\n\tfill: {\r\n\t\tdivergence: \"#4682B4\"\r\n\t},\r\n};\r\n\r\nclass CandleStickChartWithEquidistantChannel extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.onKeyPress = this.onKeyPress.bind(this);\r\n\t\tthis.onDrawComplete = this.onDrawComplete.bind(this);\r\n\t\tthis.saveInteractiveNode = this.saveInteractiveNode.bind(this);\r\n\t\tthis.saveCanvasNode = this.saveCanvasNode.bind(this);\r\n\t\tthis.handleSelection = this.handleSelection.bind(this);\r\n\r\n\t\tthis.saveInteractiveNodes = saveInteractiveNodes.bind(this);\r\n\t\tthis.getInteractiveNodes = getInteractiveNodes.bind(this);\r\n\r\n\t\tthis.state = {\r\n\t\t\tenableInteractiveObject: true,\r\n\t\t\tchannels_1: [],\r\n\t\t\tchannels_3: [],\r\n\t\t};\r\n\t}\r\n\tsaveInteractiveNode(node) {\r\n\t\tthis.node = node;\r\n\t}\r\n\tsaveCanvasNode(node) {\r\n\t\tthis.canvasNode = node;\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tdocument.addEventListener(\"keyup\", this.onKeyPress);\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tdocument.removeEventListener(\"keyup\", this.onKeyPress);\r\n\t}\r\n\thandleSelection(interactives) {\r\n\t\tconst state = toObject(interactives, each => {\r\n\t\t\treturn [\r\n\t\t\t\t`channels_${each.chartId}`,\r\n\t\t\t\teach.objects,\r\n\t\t\t];\r\n\t\t});\r\n\t\tthis.setState(state);\r\n\t}\r\n\tonDrawComplete(channels_1) {\r\n\t\t// this gets called on\r\n\t\t// 1. draw complete of drawing object\r\n\t\t// 2. drag complete of drawing object\r\n\t\tthis.setState({\r\n\t\t\tenableInteractiveObject: false,\r\n\t\t\tchannels_1\r\n\t\t});\r\n\t}\r\n\tonKeyPress(e) {\r\n\t\tconst keyCode = e.which;\r\n\t\tconsole.log(keyCode);\r\n\t\tswitch (keyCode) {\r\n\t\tcase 46: { // DEL\r\n\r\n\t\t\tconst channels_1 = this.state.channels_1\r\n\t\t\t\t.filter(each => !each.selected);\r\n\t\t\tconst channels_3 = this.state.channels_3\r\n\t\t\t\t.filter(each => !each.selected);\r\n\r\n\t\t\tthis.canvasNode.cancelDrag();\r\n\t\t\tthis.setState({\r\n\t\t\t\tchannels_1,\r\n\t\t\t\tchannels_3,\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 27: { // ESC\r\n\t\t\tthis.node.terminate();\r\n\t\t\tthis.canvasNode.cancelDrag();\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tenableInteractiveObject: false\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 68:   // D - Draw drawing object\r\n\t\tcase 69: { // E - Enable drawing object\r\n\t\t\tthis.setState({\r\n\t\t\t\tenableInteractiveObject: true\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tconst ema26 = ema()\r\n\t\t\t.id(0)\r\n\t\t\t.options({ windowSize: 26 })\r\n\t\t\t.merge((d, c) => { d.ema26 = c; })\r\n\t\t\t.accessor(d => d.ema26);\r\n\r\n\t\tconst ema12 = ema()\r\n\t\t\t.id(1)\r\n\t\t\t.options({ windowSize: 12 })\r\n\t\t\t.merge((d, c) => {d.ema12 = c;})\r\n\t\t\t.accessor(d => d.ema12);\r\n\r\n\t\tconst macdCalculator = macd()\r\n\t\t\t.options({\r\n\t\t\t\tfast: 12,\r\n\t\t\t\tslow: 26,\r\n\t\t\t\tsignal: 9,\r\n\t\t\t})\r\n\t\t\t.merge((d, c) => {d.macd = c;})\r\n\t\t\t.accessor(d => d.macd);\r\n\r\n\t\tconst { type, data: initialData, width, ratio } = this.props;\r\n    initialData.dataPoints.forEach(line => {\r\n\t\t\tline.date = dayjs(line.calendarDate).toDate();\r\n\t\t});\r\n\t\tconst { channels_1, channels_3 } = this.state;\r\n\r\n\t\tconst calculatedData = macdCalculator(ema12(ema26(initialData.dataPoints)));\r\n\t\tconst xScaleProvider = discontinuousTimeScaleProvider\r\n\t\t\t.inputDateAccessor(d => d.date);\r\n\t\tconst {\r\n\t\t\tdata,\r\n\t\t\txScale,\r\n\t\t\txAccessor,\r\n\t\t\tdisplayXAccessor,\r\n\t\t} = xScaleProvider(calculatedData);\r\n\r\n\t\tconst start = xAccessor(last(data));\r\n\t\tconst end = xAccessor(data[Math.max(0, data.length - 150)]);\r\n\t\tconst xExtents = [start, end];\r\n\r\n\t\treturn (\r\n\t\t\t<ChartCanvas ref={this.saveCanvasNode}\r\n\t\t\t\theight={380}\r\n\t\t\t\twidth={width}\r\n\t\t\t\tratio={ratio}\r\n\t\t\t\tmargin={{ left: 70, right: 70, top: 20, bottom: 30 }}\r\n\t\t\t\ttype={type}\r\n\t\t\t\tseriesName=\"MSFT\"\r\n\t\t\t\tdata={data}\r\n\t\t\t\txScale={xScale}\r\n\t\t\t\txAccessor={xAccessor}\r\n\t\t\t\tdisplayXAccessor={displayXAccessor}\r\n\t\t\t\txExtents={xExtents}\r\n\t\t\t>\r\n\t\t\t\t\r\n\t\t\t\t<Chart id={3} height={250}\r\n\t\t\t\t\tyExtents={[d => d.value]}\r\n\t\t\t\t\torigin={(w, h) => [0, h - 300]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\r\n\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" ticks={5} tickFormat={format(\".2s\")}/>\r\n\r\n          <MouseCoordinateX\r\n\t\t\t\t\t\tat=\"bottom\"\r\n\t\t\t\t\t\torient=\"bottom\"\r\n\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\r\n\t\t\t\t\t<MouseCoordinateY\r\n\t\t\t\t\t\tat=\"left\"\r\n\t\t\t\t\t\torient=\"left\"\r\n\t\t\t\t\t\tdisplayFormat={format(\".4s\")} />\r\n\r\n\t\t\t\t\t<BarSeries yAccessor={d => d.value} fill={d => initialData.color} baseAt={(xScale, yScale, d) => yScale(0)} />\r\n\t\t\t\t</Chart>\r\n\t\t\t\t<CrossHairCursor />\r\n\t\t\t\t<DrawingObjectSelector\r\n\t\t\t\t\tenabled={!this.state.enableInteractiveObject}\r\n\t\t\t\t\tgetInteractiveNodes={this.getInteractiveNodes}\r\n\t\t\t\t\tdrawingObjectMap={{\r\n\t\t\t\t\t\tEquidistantChannel: \"channels\"\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonSelect={this.handleSelection}\r\n\t\t\t\t/>\r\n\t\t\t</ChartCanvas>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nCandleStickChartWithEquidistantChannel.propTypes = {\r\n\tdata: PropTypes.array.isRequired,\r\n\twidth: PropTypes.number.isRequired,\r\n\tratio: PropTypes.number.isRequired,\r\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\r\n};\r\n\r\nCandleStickChartWithEquidistantChannel.defaultProps = {\r\n\ttype: \"svg\",\r\n};\r\n\r\nCandleStickChartWithEquidistantChannel = fitWidth(CandleStickChartWithEquidistantChannel);\r\n\r\nexport default CandleStickChartWithEquidistantChannel;\r\n","import React from 'react';\r\n\r\nconst ChartTools = (props) => {\r\n  const {\r\n    aggregationTypeForOne,\r\n    setAggregrationTypeForOne,\r\n    color,\r\n  } = props;\r\n  \r\n  const handleAggregationForOneClicked = (aggregationType) => {\r\n    if (aggregationTypeForOne === aggregationType) {\r\n      setAggregrationTypeForOne(\"\");\r\n    } else {\r\n      setAggregrationTypeForOne(aggregationType);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-chart-tool\">\r\n      <ul className=\"nav justify-content-center\">\r\n        <li\r\n          className=\"nav-item\"\r\n          style={aggregationTypeForOne === \"YA\" ? { backgroundColor: color, color: \"white\" } : {}}\r\n          onClick={() => handleAggregationForOneClicked(\"YA\")}\r\n        >\r\n          <span>A</span>\r\n        </li>\r\n        <li\r\n          className=\"nav-item\"\r\n          style={aggregationTypeForOne === \"QA\" ? { backgroundColor: color, color: \"white\" } : {}}\r\n          onClick={() => handleAggregationForOneClicked(\"QA\")}\r\n        >\r\n          <span>Q</span>\r\n        </li>\r\n        <li\r\n          className=\"nav-item\"\r\n          style={aggregationTypeForOne === \"TA\" ? { backgroundColor: color, color: \"white\" } : {}}\r\n          onClick={() => handleAggregationForOneClicked(\"TA\")}\r\n        >\r\n          <span>T</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartTools;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Chart from './Chart';\r\nimport ChartTools from '../ChartTools';\r\n\r\nconst GroupBarChart = (props) => {\r\n  const { data, chartData, globalAggregationType } = props;\r\n\r\n  const [aggregationTypeForOne, setAggregrationTypeForOne] = useState();\r\n  const [currentData, setCurrentData] = useState();\r\n\r\n  const labels = [\r\n    [\r\n      'Revenue',\r\n      'Cost of Revenue',\r\n      'Gross Profit',\r\n      'Ebit',\r\n      'Net Income',\r\n      'Earnings per Basic Share',\r\n    ],\r\n    [\r\n      'Total Assets',\r\n      'Total Liabilities',\r\n      'Total Debt [USD]',\r\n      'Receivables',\r\n      'Payables',\r\n      'Cash & Cash Equivalents [USD]',\r\n    ],\r\n    [\r\n      'Net Cash Flow from Operations',\r\n      'Net Cash Flow from Investing',\r\n      'Net Cash Flow from Financing',\r\n      'Issue/Repayment of Debt Securities',\r\n      'Issuance/Purchase of Equity Shares',\r\n      'Payment of Dividends & Other Cash Distributions',\r\n    ],\r\n  ];\r\n\r\n  const filterByAggregationTyoe = (selectedData) => {\r\n    if (selectedData) {\r\n      let filteredData = {...selectedData};\r\n      const dataPoints = filteredData.dataPoints.filter(\r\n        (item) => aggregationTypeForOne === \"\" || item.period === aggregationTypeForOne\r\n      );\r\n      filteredData['dataPoints'] = dataPoints;\r\n      return filteredData;\r\n    }\r\n    return selectedData;\r\n  };\r\n\r\n  const handleDataTypeChanged = (e) => {\r\n    const selectedData = chartData.filter(\r\n      (item) => item.label === e.target.value\r\n    );\r\n    const filteredSelectedData = filterByAggregationTyoe(selectedData[0]);\r\n    setCurrentData(filteredSelectedData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setAggregrationTypeForOne(globalAggregationType);\r\n    const filteredSelectedData = filterByAggregationTyoe(data);\r\n    setCurrentData(filteredSelectedData);\r\n  }, [globalAggregationType]);\r\n\r\n  useEffect(() => {\r\n    const filteredSelectedData = filterByAggregationTyoe(data);\r\n    setCurrentData(filteredSelectedData);\r\n  }, [aggregationTypeForOne]);\r\n\r\n  return (\r\n    <>\r\n      {currentData && (\r\n        <>\r\n          <div className=\"chart-toolbar\">\r\n            <div className=\"chart-toolbar-select\">\r\n              <select\r\n                className=\"browser-default custom-select\"\r\n                style={{ borderColor: currentData.color, boxShadow: 'unset' }}\r\n                onChange={handleDataTypeChanged}\r\n              >\r\n                {labels[currentData.group].map((item, index) => (\r\n                  <option\r\n                    key={index}\r\n                    val={item}\r\n                    selected={item === currentData.label ? true : false}\r\n                  >\r\n                    {item}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <ChartTools\r\n              aggregationTypeForOne={aggregationTypeForOne}\r\n              setAggregrationTypeForOne={setAggregrationTypeForOne}\r\n              color={currentData.color}\r\n            />\r\n          </div>\r\n          <div className=\"chart-title-area\">\r\n            <div style={{ backgroundColor: currentData.color }}></div>\r\n            <span>{currentData.label}</span>\r\n          </div>\r\n          {currentData.dataPoints.length > 0 ? (\r\n            <Chart type={'svg'} data={currentData} />\r\n          ) : (\r\n            <div className=\"no-data\">No data...</div>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GroupBarChart;\r\n","import React from 'react';\r\n\r\nconst GraphTypes = (props) => {\r\n  const {\r\n    selectedAggregationType,\r\n    setSelectedAggregationType,\r\n  } = props;\r\n\r\n  const handleAggregationTypeClicked = (aggregationType) => {\r\n    if (selectedAggregationType === aggregationType) {\r\n      setSelectedAggregationType('');\r\n    } else {\r\n      setSelectedAggregationType(aggregationType);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-graph-types\">\r\n      <ul className=\"nav justify-content-center\">\r\n        <li\r\n          className={`nav-item ${selectedAggregationType === \"YA\" ? \"selected\" : \"\"}`}\r\n          onClick={() => handleAggregationTypeClicked(\"YA\")}\r\n        >\r\n          <span>ANN</span>\r\n        </li>\r\n        <li\r\n          className={`nav-item ${selectedAggregationType === \"QA\" ? \"selected\" : \"\"}`}\r\n          onClick={() => handleAggregationTypeClicked(\"QA\")}\r\n        >\r\n          <span>QTR</span>\r\n        </li>\r\n        <li\r\n          className={`nav-item ${selectedAggregationType === \"TA\" ? \"selected\" : \"\"}`}\r\n          onClick={() => handleAggregationTypeClicked(\"TA\")}\r\n        >\r\n          <span>TTM</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GraphTypes;\r\n","import React from 'react';\r\n\r\nconst StockTypes = (props) => {\r\n  const {\r\n    selectedStockType,\r\n    setSelectedStockType,\r\n    selectedHeaderNav,\r\n  } = props;\r\n\r\n  const handleStockTypeClicked = (stockType) => {\r\n    if (selectedHeaderNav === 'Chart') {\r\n      setSelectedStockType(stockType);\r\n    } else {\r\n      if (selectedStockType === stockType) {\r\n        setSelectedStockType('');\r\n      } else {\r\n        setSelectedStockType(stockType);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-graph-types\">\r\n      <ul className=\"nav justify-content-center\">\r\n        <li\r\n          className={`nav-item ${selectedStockType === \"Income Statement\" ? \"selected\" : \"\"}`}\r\n          onClick={() => handleStockTypeClicked(\"Income Statement\")}\r\n        >\r\n          <span>Income Statement</span>\r\n        </li>\r\n        <li\r\n          className={`nav-item ${selectedStockType === \"Balance Sheet\" ? \"selected\" : \"\"}`}\r\n          onClick={() => handleStockTypeClicked(\"Balance Sheet\")}\r\n        >\r\n          <span>Balance Sheet</span>\r\n        </li>\r\n        <li\r\n          className={`nav-item ${selectedStockType === \"Cash Flow Statement\" ? \"selected\" : \"\"}`}\r\n          onClick={() => handleStockTypeClicked(\"Cash Flow Statement\")}\r\n        >\r\n          <span>Cash Flow Statement</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockTypes;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\nimport { useCsvDownloadUpdate } from 'contexts/CsvDownloadContext';\r\nimport { useDatatableLoading, useDatatable } from \"contexts/DatatableContext\";\r\nimport Spinner from \"components/Spinner\"\r\n\r\nconst FinancialDataTable = (props) => {\r\n  const { data, selectedStockType, selectedAggregationType } = props;\r\n\r\n  const [datatable, setDatatable] = useState();\r\n  const [sorted, setSorted] = useState(0);\r\n\r\n  const [isLoadingData, setLoadingData] = useDatatableLoading()\r\n  const updateCsvDownload = useCsvDownloadUpdate();\r\n\r\n  const wrapSetDatatable = (data) => {\r\n    setDatatable(data)\r\n    updateCsvDownload([...data.rows[0]])\r\n  }\r\n\r\n  const handleSortClicked = (label) => {\r\n    const sort = sorted === 0 || sorted === 2 ? 1 : 2;\r\n    let rows = datatable.rows;\r\n    for (let i = 0; i < rows.length; i++) {\r\n      if (sort === 1) {\r\n        rows[i].sort(function (a, b) {\r\n          let valueA = a[label];\r\n          let valueB = b[label];\r\n          if (typeof a[label] != 'string') {\r\n            valueA = valueA.toString();\r\n          }\r\n          if (typeof b[label] != 'string') {\r\n            valueB = valueB.toString();\r\n          }\r\n          return valueB.localeCompare(valueA);\r\n        });\r\n      } else if (sort === 2) {\r\n        rows[i].sort(function (a, b) {\r\n          let valueA = a[label];\r\n          let valueB = b[label];\r\n          if (typeof a[label] != 'string') {\r\n            valueA = valueA.toString();\r\n          }\r\n          if (typeof b[label] != 'string') {\r\n            valueB = valueB.toString();\r\n          }\r\n          return valueA.localeCompare(valueB);\r\n        });\r\n      }\r\n    }\r\n    setSorted(sort);\r\n    wrapSetDatatable({\r\n      columns: datatable.columns,\r\n      rows,\r\n    });\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      let columns = [\r\n        {\r\n          label: 'BreakDown',\r\n          field: 'BreakDown',\r\n        },\r\n        {\r\n          label: 'TTM',\r\n          field: 'TTM',\r\n        },\r\n      ];\r\n      let rows = [];\r\n      data.map((item) => {\r\n        if (selectedAggregationType === '' || selectedAggregationType === item.period) {\r\n          const calendarDateKey = item['calendarDate'];\r\n          if (!columns.includes(calendarDateKey)) {\r\n            columns.push({\r\n              label: calendarDateKey,\r\n              field: calendarDateKey,\r\n            });\r\n          }\r\n\r\n          const keys = Object.keys(item);\r\n          keys.map((key, index) => {\r\n            if (!(index in rows)) {\r\n              rows[index] = {};\r\n            }\r\n            rows[index]['BreakDown'] = key;\r\n            rows[index]['TTM'] = '1000000';\r\n            rows[index][calendarDateKey] = item[key];\r\n          });\r\n        }\r\n      });\r\n\r\n      if (selectedStockType === '') {\r\n        rows = [rows, rows, rows];\r\n      } else {\r\n        rows = [rows];\r\n      }\r\n      wrapSetDatatable({\r\n        columns,\r\n        rows,\r\n      });\r\n    }\r\n  }, [data, selectedAggregationType, selectedStockType]);\r\n\r\n  const formatNumber = (num) => {\r\n    let number = parseInt(num)\r\n    if (number > 0) {\r\n      if ( number / 1000 < 999 ) {\r\n        return `${number / 1000} Th`\r\n      } else if ( number / 1000000 < 999 ) {\r\n        return `${number / 1000000} M`\r\n      } else if ( number / 1000000000 < 999 ) {\r\n        return `${number / 1000000000} B`\r\n      } else if ( number / 1000000000000 < 999 ) {\r\n        return `${number / 1000000000000} Tr`\r\n      } else if ( number / 1000000000000000 < 999 ) {\r\n        return `${number / 1000000000000000} Q`\r\n      }\r\n    } else if (number < 0) {\r\n      number = -number;\r\n      if ( number < 1000 ) {\r\n        return `-${number}`\r\n      }\r\n      else if ( number / 1000 < 999 ) {\r\n        return `-${number / 1000} Th`\r\n      } else if ( number / 1000000 < 999 ) {\r\n        return `-${number / 1000000} M`\r\n      } else if ( number / 1000000000 < 999 ) {\r\n        return `-${number / 1000000000} B`\r\n      } else if ( number / 1000000000000 < 999 ) {\r\n        return `-${number / 1000000000000} Tr`\r\n      } else if ( number / 1000000000000000 < 999 ) {\r\n        return `-${number / 1000000000000000} Q`\r\n      }\r\n    }\r\n\r\n    return number\r\n  }\r\n\r\n  const formatData = (rows) => {\r\n    const newRows = []\r\n    rows.map((row) => {\r\n      let newObject = {}\r\n      Object.keys(row).map(key => {\r\n        if ((key === 'TTM') || (typeof(row[key]) !== 'string') && parseInt(row[key]) !== NaN) {\r\n          newObject[key] = formatNumber(row[key])\r\n        } else {\r\n          newObject[key] = row[key]\r\n        }\r\n      })\r\n      newRows.push(newObject)\r\n    })\r\n    return newRows\r\n  }\r\n\r\n  return (\r\n    <div className=\"hunter-chart-container\">\r\n      <div className=\"col-sm-12 hunter-data-table-container financial-data-table\">\r\n        {isLoadingData && <div className=\"hunter-spinner-area\"><span className=\"mr-30\">Loading ...</span>    <Spinner>Loading</Spinner></div>}\r\n        {!isLoadingData && datatable && (\r\n          <MDBTable\r\n            hover\r\n            dark={true}\r\n            maxHeight=\"80vh\"\r\n            noBottomColumns={true}\r\n            striped={true}\r\n            scrollX={true}\r\n            scrollY={true}\r\n            paging={false}\r\n          >\r\n            <MDBTableHead class={'financial-table-head'}>\r\n              <tr>\r\n                {datatable.columns.map((item) => (\r\n                  <th\r\n                    key={item.label}\r\n                    onClick={() => handleSortClicked(item.label)}\r\n                  >\r\n                    {item.label}{' '}\r\n                    <span>\r\n                      <i className=\"fa fa-sort\" />\r\n                    </span>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </MDBTableHead>\r\n            {datatable.rows.length === 3 ? (\r\n              <>\r\n                <MDBTableBody\r\n                  class={'financial-table-body-1'}\r\n                  rows={datatable.rows[0]}\r\n                />\r\n                <MDBTableBody\r\n                  rows={datatable.rows[1]}\r\n                  class=\"financial-table-body-2\"\r\n                />\r\n                <MDBTableBody\r\n                  rows={datatable.rows[2]}\r\n                  class=\"financial-table-body-3\"\r\n                />\r\n              </>\r\n            ) : (\r\n              <MDBTableBody\r\n                rows={formatData(datatable.rows[0])}\r\n                class={\r\n                  selectedStockType === 'Income Statement'\r\n                    ? 'financial-table-body-1'\r\n                    : selectedStockType === 'Balance Sheet'\r\n                    ? 'financial-table-body-2'\r\n                    : 'financial-table-body-3'\r\n                }\r\n              />\r\n            )}\r\n          </MDBTable>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinancialDataTable;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport Pagination from 'react-bootstrap/Pagination'\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\nimport { Collapse, CardBody, Card } from 'reactstrap';\r\nimport moment from 'moment'\r\n\r\nconst FinancialStatementsDataTable = (props) => {\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [wholeRows, setWholeRows] = useState(0);\r\n  const [currentData, setCurrentData] = useState({\r\n    columns: [\r\n      {\r\n        label: 'Id',\r\n        field: 'id',\r\n        width: 100,\r\n      },\r\n      {\r\n        label: 'Time',\r\n        field: 'time',\r\n        width: 300,\r\n      },\r\n      {\r\n        label: 'Title',\r\n        field: 'title',\r\n        width: 300,\r\n      }\r\n    ],\r\n    rows: [],\r\n  });\r\n  const { data } = props;\r\n  const [selectedRow, setSelectedRow] = useState('no select');\r\n  const [isOpened, setIsOpened] = useState(false);\r\n\r\n  const [symbol, setSymbol] = useState({ value: 'GOOG', label: 'GOOG' });\r\n  const [optionsSymbol, setOptionsSymbol] = useState([]);\r\n  // const [datatable, setDatatable] = useState();\r\n  const columns = data.columns.map((item, index) => {\r\n    if (index === 0) {\r\n      return {\r\n        label: item,\r\n        field: item,\r\n        width: 100,\r\n      };  \r\n    } else if (index === 1){\r\n      return {\r\n        label: item,\r\n        field: item,\r\n        width: 300,\r\n      };\r\n    } else {\r\n      return {\r\n        label: item,\r\n        field: item,\r\n      };\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data.rows.length) {\r\n      setWholeRows(data.rows.length)\r\n      const realData = data.rows.slice(currentPage * 10, 10);\r\n      setCurrentData({\r\n        columns: columns,\r\n        rows: realData.map((row, index) => {\r\n          return {\r\n            author: row.author,\r\n            amp_url: row.amp_url,\r\n            article_url: row.article_url,\r\n            published_utc: row.published_utc,\r\n            dataId: row.id,\r\n            description: row.description,\r\n            id: index,\r\n            time: moment(row.published_utc).format(\"YYYY-MM-DD h:mm:ss\"),\r\n            title: row.title,\r\n            publisher: row.publisher,\r\n          }\r\n        })\r\n      })\r\n    }\r\n\r\n  }, [data]);\r\n\r\n  const handlePrevClick = () => {\r\n    const realData = data.rows.slice((currentPage - 1) * 10, (currentPage) * 10);\r\n    setCurrentData({\r\n      columns: columns,\r\n      rows: realData.map((row, index) => {\r\n        return {\r\n          author: row.author,\r\n          amp_url: row.amp_url,\r\n          article_url: row.article_url,\r\n          published_utc: row.published_utc,\r\n          dataId: row.id,\r\n          description: row.description,\r\n          id: (currentPage-1) * 10 + index,\r\n          time: moment(row.published_utc).format(\"YYYY-MM-DD h:mm:ss\"),\r\n          title: row.title,\r\n          publisher: row.publisher,\r\n        }\r\n      })\r\n    })  \r\n    \r\n    setCurrentPage(currentPage - 1)\r\n  }\r\n  \r\n  const handleNextClick = () => {\r\n    const realData = data.rows.slice((currentPage + 1) * 10, (currentPage + 2) * 10);\r\n    setCurrentData({\r\n      columns: columns,\r\n      rows: realData.map((row, index) => {\r\n        return {\r\n          author: row.author,\r\n          amp_url: row.amp_url,\r\n          article_url: row.article_url,\r\n          published_utc: row.published_utc,\r\n          dataId: row.id,\r\n          description: row.description,\r\n          id: (currentPage+1) * 10 + index,\r\n          time: moment(row.published_utc).format(\"YYYY-MM-DD h:mm:ss\"),\r\n          title: row.title,\r\n          publisher: row.publisher,\r\n        }\r\n      })\r\n    })\r\n    setCurrentPage(currentPage + 1)\r\n  }\r\n\r\n  const handleRowSelect = (dataId) => {\r\n      setIsOpened(!isOpened)\r\n      setSelectedRow(dataId)\r\n  }\r\n\r\n  return (\r\n    <div className=\"hunter-chart-container\">\r\n      <div className=\"col-sm-12 hunter-data-table-container financial-data-table mt-30 pt-100\">\r\n        {/* <div className=\"hunter-search-filter-area\">\r\n          <div className=\"select-option\">\r\n            <Select\r\n              value={symbol}\r\n              onChange={handleSymbolChange}\r\n              options={optionsSymbol}\r\n              placeholder=\"Symbol\"\r\n            />\r\n          </div>\r\n        </div> */}\r\n        {currentData && (\r\n          <MDBTable\r\n            hover\r\n            dark={true}\r\n            maxHeight='80vh'\r\n            noBottomColumns={true}\r\n            striped={true}\r\n            scrollX={true}\r\n            scrollY={true}\r\n            pagination\r\n          >\r\n            <MDBTableHead\r\n              class={\"financial-table-head\"}\r\n            >\r\n              <tr>\r\n                {currentData.columns.map((item) => (\r\n                  <th key={item.label}>{item.label}</th>\r\n                ))}\r\n              </tr>\r\n            </MDBTableHead>\r\n            <MDBTableBody\r\n              className={\"financial-table-body-1\"}\r\n            >\r\n              {currentData.rows.map((item) => (\r\n                <tr onClick={() => {\r\n                  handleRowSelect(item.dataId)\r\n                }}>\r\n                  <td key={item.id} className=\"hunter-financial-table-column1\">{item.id}</td>\r\n                  <td key={item.time} className=\"hunter-financial-table-column2\">{item.time}</td>\r\n                  <td key={item.title} className=\"hunter-financial-table-column3\">\r\n                    <p>{item.title}</p>\r\n                    <Collapse isOpen={isOpened === false && item.dataId === selectedRow}>\r\n                      <Card>\r\n                        <CardBody className=\"hunter-card-body\">\r\n                        <div className=\"hunter-data-table-details-area\">\r\n                          <div className=\"hunter-data-table-details-area-title\">\r\n                            {moment(item.date).format(\"YYYY-MM-DD h:mm:ss\")} : {item.title}\r\n                          </div>\r\n                          <div className=\"hunter-data-table-details-area-content\">\r\n                            <p>{item.description}</p>\r\n                            <div className=\"hunter-data-table-details-area-row\"><div className=\"hunter-data-table-details-area-key\">author:</div> {item.author}</div>\r\n                            <div className=\"hunter-data-table-details-area-row\"><div className=\"hunter-data-table-details-area-key\">publisher:</div> {item.publisher.name}</div>\r\n                            <div className=\"hunter-data-table-details-area-row\"><div className=\"hunter-data-table-details-area-key\">published_utc:</div> {item.published_utc}</div>\r\n                            <div className=\"hunter-data-table-details-area-row\"><div className=\"hunter-data-table-details-area-key\">amp_url:</div> {item.amp_url}</div>\r\n                            <div className=\"hunter-data-table-details-area-row\"><div className=\"hunter-data-table-details-area-key\">article_url:</div> {item.article_url}</div>\r\n                          </div>\r\n                        </div>\r\n                        </CardBody>\r\n                      </Card>\r\n                    </Collapse>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </MDBTableBody>\r\n          </MDBTable>\r\n        )}\r\n        <Pagination>\r\n          <Pagination.Item>{currentPage*10}</Pagination.Item>\r\n          <Pagination.Item>{(currentPage) * 10 + 9}</Pagination.Item>\r\n          <Pagination.Item> of </Pagination.Item>\r\n          <Pagination.Item> { wholeRows } </Pagination.Item>\r\n          <Pagination.Prev disabled={currentPage <= 0} onClick={() => { handlePrevClick() }}/>\r\n          <Pagination.Next disabled={(currentPage + 1) >= wholeRows / 10} onClick={() => { handleNextClick() }}/>\r\n        </Pagination>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinancialStatementsDataTable;","import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\n// javascript plugin used to create scrollbars on windows\r\nimport disableScroll from 'disable-scroll';\r\nimport '../../assets/css/financialDashboardStyles.css';\r\n\r\nimport { Button } from 'reactstrap';\r\nimport { routes } from 'routes.js';\r\n\r\nimport Sidebar from 'components/Sidebar/Sidebar.js';\r\nimport Header from 'components/FinancialDashboard/Header';\r\nimport BarChart from 'components/FinancialDashboard/BarChart';\r\nimport GraphTypes from 'components/FinancialDashboard/GraphTypes';\r\nimport StockTypes from 'components/FinancialDashboard/StockTypes';\r\nimport FinancialDataTable from 'components/FinancialDashboard/FinancialDataTable';\r\nimport FinancialStatementsDataTable from 'components/FinancialDashboard/FinancialStatementsDataTable';\r\n\r\nimport { CsvDownloadProvider } from 'contexts/CsvDownloadContext';\r\nimport ButtonCsvDownload from 'components/ButtonCsvDownload'\r\n\r\nimport { getNewsFinancialData } from 'api/Api';\r\nimport { useDatatableLoading, useDatatable } from \"contexts/DatatableContext\";\r\nimport Spinner from 'components/Spinner'\r\n\r\nimport {\r\n  getAllSymbols,\r\n  getIncomeStatement,\r\n  getBalanceSheet,\r\n  getCashStatement,\r\n  getFinancialTotalData,\r\n} from 'api/Api';\r\n\r\nconst FinancialDashboard = () => {\r\n  const [symbol, setSymbol] = useState({ value: 'AAPL', label: 'AAPL' });\r\n  const [optionsSymbol, setOptionsSymbol] = useState([]);\r\n  const [isShowSidebar, setShowSidebar] = useState(false);\r\n  const [selectedInstance, setSelectedInstance] = useState('financial_data');\r\n  const [selectedHeaderNav, setSelectedHeaderNav] = useState('Chart');\r\n  const [selectedAggregationType, setSelectedAggregationType] = useState('QA');\r\n  const [selectedStockType, setSelectedStockType] =\r\n    useState('Income Statement');\r\n\r\n  const [isLoadingData, setLoadingData] = useDatatableLoading()\r\n\r\n  const [chartData, setChartData] = useState(null);\r\n  const [datatable, setDataTable] = useState();\r\n  const [isLoading, setIsLoading] = useState(0);\r\n\r\n  const handleSidebarChange = () => {\r\n    setShowSidebar(!isShowSidebar);\r\n  };\r\n\r\n  const handleInstanceChange = (instance) => {\r\n    setSelectedInstance(instance);\r\n  };\r\n\r\n  const [financialStatements, setFinancialStatements] = useState({\r\n    columns: ['id', 'time', 'title'],\r\n    rows: [],\r\n  });\r\n\r\n  const sortDataPointsByDate = (data) => {\r\n    let sortedData = { ...data };\r\n    if (sortedData.dataPoints.length > 0) {\r\n      sortedData.dataPoints.sort(function (a, b) {\r\n        let valueA = a['calendarDate'];\r\n        let valueB = b['calendarDate'];\r\n        if (typeof a['calendarDate'] != 'string') {\r\n          valueA = valueA.toString();\r\n        }\r\n        if (typeof b['calendarDate'] != 'string') {\r\n          valueB = valueB.toString();\r\n        }\r\n        return valueA.localeCompare(valueB);\r\n      });\r\n    }\r\n    return sortedData;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoadingData(true)\r\n    disableScroll.on();\r\n    const getSymbols = async () => {\r\n      const res = await getAllSymbols();\r\n      setOptionsSymbol(res);\r\n    };\r\n    getSymbols();\r\n    setLoadingData(false)\r\n\r\n    return () => {\r\n      disableScroll.off();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(1);\r\n    setChartData();\r\n    setLoadingData(true)\r\n    const getNewsFinancials = async () => {\r\n      setLoadingData(true)\r\n      const res = await getNewsFinancialData(symbol.value);\r\n      setFinancialStatements({\r\n        columns: ['id', 'time', 'title'],\r\n        rows: res.results,\r\n      });\r\n      setLoadingData(false)\r\n    };\r\n\r\n    const getTotalData = async () => {\r\n      setLoadingData(true)\r\n      const res = await getFinancialTotalData(symbol.value);\r\n      setDataTable(res.results);\r\n      setIsLoading(2);\r\n      setLoadingData(false)\r\n    };\r\n\r\n    const getIncomeForDataTable = async () => {\r\n      setLoadingData(true)\r\n      const res = await getFinancialTotalData(symbol.value);\r\n      setDataTable(res.results);\r\n      setIsLoading(2);\r\n      setLoadingData(false)\r\n    };\r\n\r\n    const getBalanceForDataTable = async () => {\r\n      setLoadingData(true)\r\n      const res = await getFinancialTotalData(symbol.value);\r\n      setDataTable(res.results);\r\n      setIsLoading(2);\r\n      setLoadingData(false)\r\n    };\r\n\r\n    const getCashForDataTable = async () => {\r\n      setLoadingData(true)\r\n      const res = await getFinancialTotalData(symbol.value);\r\n      setDataTable(res.results);\r\n      setIsLoading(2);\r\n      setLoadingData(false)\r\n    };\r\n\r\n    const getIncome = async () => {\r\n      setLoadingData(true)\r\n      const res = await getIncomeStatement(symbol.value);\r\n      let revenus = {\r\n        label: 'Revenue',\r\n        group: 0,\r\n        color: 'rgb(25, 185, 154)',\r\n        dataPoints: [],\r\n      };\r\n      let costOfRevenue = {\r\n        label: 'Cost of Revenue',\r\n        group: 0,\r\n        color: 'rgb(8, 64, 129)',\r\n        dataPoints: [],\r\n      };\r\n      let grossProfit = {\r\n        label: 'Gross Profit',\r\n        group: 0,\r\n        color: 'rgb(127, 0, 0)',\r\n        dataPoints: [],\r\n      };\r\n      let EBITDAMargin = {\r\n        label: 'Ebit',\r\n        group: 0,\r\n        color: 'rgb(89, 201, 108)',\r\n        dataPoints: [],\r\n      };\r\n      let NetIncome = {\r\n        label: 'Net Income',\r\n        group: 0,\r\n        color: 'rgb(75, 87, 74)',\r\n        dataPoints: [],\r\n      };\r\n      let earningsPerBasicShare = {\r\n        label: 'Earnings per Basic Share',\r\n        group: 0,\r\n        color: 'rgb(226, 71, 130)',\r\n        dataPoints: [],\r\n      };\r\n      if (res && res.results) {\r\n        res.results.map((item) => {\r\n          revenus.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.revenues,\r\n          });\r\n          costOfRevenue.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.costOfRevenue,\r\n          });\r\n          grossProfit.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.grossProfit,\r\n          });\r\n          EBITDAMargin.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.EBITDAMargin,\r\n          });\r\n          NetIncome.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.netIncome,\r\n          });\r\n          earningsPerBasicShare.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.earningsPerBasicShare,\r\n          });\r\n        });\r\n      }\r\n      setChartData([\r\n        sortDataPointsByDate(revenus),\r\n        sortDataPointsByDate(costOfRevenue),\r\n        sortDataPointsByDate(grossProfit),\r\n        sortDataPointsByDate(EBITDAMargin),\r\n        sortDataPointsByDate(NetIncome),\r\n        sortDataPointsByDate(earningsPerBasicShare),\r\n      ]);\r\n      setIsLoading(2);\r\n      setLoadingData(false)\r\n    };\r\n\r\n    const getBalance = async () => {\r\n      setLoadingData(true)\r\n      const res = await getBalanceSheet(symbol.value);\r\n      let assets = {\r\n        label: 'Total Assets',\r\n        group: 1,\r\n        color: 'rgb(182, 116, 194)',\r\n        dataPoints: [],\r\n      };\r\n      let liabilitiesNonCurrent = {\r\n        label: 'Total Liabilities',\r\n        group: 1,\r\n        color: 'rgb(186, 56, 58)',\r\n        dataPoints: [],\r\n      };\r\n      let debt = {\r\n        label: 'Total Debt [USD]',\r\n        group: 1,\r\n        color: 'rgb(172, 114, 47)',\r\n        dataPoints: [],\r\n      };\r\n      let tradeAndNonTradeReceivables = {\r\n        label: 'Receivables',\r\n        group: 1,\r\n        color: 'rgb(99, 89, 135)',\r\n        dataPoints: [],\r\n      };\r\n      let tradeAndNonTradePayables = {\r\n        label: 'Payables',\r\n        group: 1,\r\n        color: 'rgb(179, 8, 167)',\r\n        dataPoints: [],\r\n      };\r\n      let cashAndEquivalents = {\r\n        label: 'Cash & Cash Equivalents [USD]',\r\n        group: 1,\r\n        color: 'rgb(46, 149, 187)',\r\n        dataPoints: [],\r\n      };\r\n      if (res && res.results) {\r\n        res.results.map((item) => {\r\n          assets.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.assets,\r\n          });\r\n          liabilitiesNonCurrent.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.liabilitiesNonCurrent,\r\n          });\r\n          debt.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.debt,\r\n          });\r\n          tradeAndNonTradeReceivables.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.tradeAndNonTradeReceivables,\r\n          });\r\n          tradeAndNonTradePayables.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.tradeAndNonTradePayables,\r\n          });\r\n          cashAndEquivalents.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.cashAndEquivalents,\r\n          });\r\n        });\r\n      }\r\n\r\n      setChartData([\r\n        sortDataPointsByDate(assets),\r\n        sortDataPointsByDate(liabilitiesNonCurrent),\r\n        sortDataPointsByDate(debt),\r\n        sortDataPointsByDate(tradeAndNonTradeReceivables),\r\n        sortDataPointsByDate(tradeAndNonTradePayables),\r\n        sortDataPointsByDate(cashAndEquivalents),\r\n      ]);\r\n      setIsLoading(2);\r\n      setLoadingData(false)\r\n    };\r\n\r\n    const getCash = async () => {\r\n      setLoadingData(true)\r\n      const res = await getCashStatement(symbol.value);\r\n      let netCashFlowFromOperations = {\r\n        label: 'Net Cash Flow from Operations',\r\n        group: 2,\r\n        color: 'rgb(230, 195, 176)',\r\n        dataPoints: [],\r\n      };\r\n      let netCashFlowFromInvesting = {\r\n        label: 'Net Cash Flow from Investing',\r\n        group: 2,\r\n        color: 'rgb(182, 102, 232)',\r\n        dataPoints: [],\r\n      };\r\n      let netCashFlowFromFinancing = {\r\n        label: 'Net Cash Flow from Financing',\r\n        group: 2,\r\n        color: 'rgb(221, 171, 219)',\r\n        dataPoints: [],\r\n      };\r\n      let issuanceDebtSecurities = {\r\n        label: 'Issue/Repayment of Debt Securities',\r\n        group: 2,\r\n        color: 'rgb(90, 125, 16)',\r\n        dataPoints: [],\r\n      };\r\n      let issuanceEquityShares = {\r\n        label: 'Issuance/Purchase of Equity Shares',\r\n        group: 2,\r\n        color: 'rgb(241, 76, 34)',\r\n        dataPoints: [],\r\n      };\r\n      let paymentDividendsOtherCashDistributions = {\r\n        label: 'Payment of Dividends & Other Cash Distributions',\r\n        group: 2,\r\n        color: 'rgb(96, 54, 217)',\r\n        dataPoints: [],\r\n      };\r\n      if (res && res.results) {\r\n        res.results.map((item) => {\r\n          netCashFlowFromOperations.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.netCashFlowFromOperations,\r\n          });\r\n          netCashFlowFromInvesting.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.netCashFlowFromInvesting,\r\n          });\r\n          netCashFlowFromFinancing.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.netCashFlowFromFinancing,\r\n          });\r\n          issuanceDebtSecurities.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.issuanceDebtSecurities,\r\n          });\r\n          issuanceEquityShares.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.issuanceEquityShares,\r\n          });\r\n          paymentDividendsOtherCashDistributions.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.paymentDividendsOtherCashDistributions,\r\n          });\r\n        });\r\n      }\r\n\r\n      setChartData([\r\n        sortDataPointsByDate(netCashFlowFromOperations),\r\n        sortDataPointsByDate(netCashFlowFromInvesting),\r\n        sortDataPointsByDate(netCashFlowFromFinancing),\r\n        sortDataPointsByDate(issuanceDebtSecurities),\r\n        sortDataPointsByDate(issuanceEquityShares),\r\n        sortDataPointsByDate(paymentDividendsOtherCashDistributions),\r\n      ]);\r\n      setIsLoading(2);\r\n      setLoadingData(false)\r\n    };\r\n\r\n    if (selectedHeaderNav === 'News') {\r\n      setLoadingData(true)\r\n      getNewsFinancials();\r\n    } else if (selectedHeaderNav === 'Data Table') {\r\n      setLoadingData(true)\r\n      if (selectedStockType === '') {\r\n        getTotalData();\r\n      } else if (selectedStockType === 'Income Statement') {\r\n        getIncomeForDataTable();\r\n      } else if (selectedStockType === 'Balance Sheet') {\r\n        getBalanceForDataTable();\r\n      } else if (selectedStockType === 'Cash Flow Statement') {\r\n        getCashForDataTable();\r\n      }\r\n\r\n      // update database for csv download\r\n      // setLoadingData(false)\r\n\r\n    } else if (selectedHeaderNav === 'Chart') {\r\n      if (selectedStockType === 'Income Statement') {\r\n        getIncome();\r\n      } else if (selectedStockType === 'Balance Sheet') {\r\n        getBalance();\r\n      } else if (selectedStockType === 'Cash Flow Statement') {\r\n        getCash();\r\n      }\r\n\r\n    }\r\n    // setLoadingData(false)\r\n  }, [selectedHeaderNav, selectedStockType, symbol]);\r\n\r\n  return (\r\n      <CsvDownloadProvider>\r\n        <div className=\"financial-dashboard-container\">\r\n          {!isShowSidebar && (\r\n            <Button\r\n              className={'show-sidebar-toggle-area show-sidebar-icon'}\r\n              onClick={handleSidebarChange}\r\n            >\r\n              <i className=\"tim-icons icon-align-left-2\" />\r\n            </Button>\r\n          )}\r\n          {isShowSidebar && (\r\n            <Sidebar\r\n              isAdminPage={false}\r\n              routes={routes}\r\n              subInstance={'tradedatatable'}\r\n              selectedInstance={selectedInstance}\r\n              handleSidebarChange={handleSidebarChange}\r\n              handleInstanceChange={handleInstanceChange}\r\n            />\r\n          )}\r\n          <Header\r\n            selectedHeaderNav={selectedHeaderNav}\r\n            setSelectedHeaderNav={setSelectedHeaderNav}\r\n            symbol={symbol}\r\n            setSymbol={setSymbol}\r\n            optionsSymbol={optionsSymbol}\r\n          />\r\n          {selectedHeaderNav !== 'News' && (\r\n            <div className=\"filter-types-section\">\r\n              <GraphTypes\r\n                selectedAggregationType={selectedAggregationType}\r\n                setSelectedAggregationType={setSelectedAggregationType}\r\n              />\r\n              <StockTypes\r\n                selectedStockType={selectedStockType}\r\n                setSelectedStockType={setSelectedStockType}\r\n                selectedHeaderNav={selectedHeaderNav}\r\n              />\r\n              {selectedHeaderNav == 'Data Table' && (<ButtonCsvDownload filename={\"financial.csv\"}>Csv Download</ButtonCsvDownload>)}\r\n            </div>\r\n          )}\r\n          {selectedHeaderNav === 'Data Table' ? (\r\n            <>\r\n              {isLoadingData && <div className=\"hunter-spinner-area\"><span className=\"mr-30\">Loading ...</span>    <Spinner>Loading</Spinner></div>}\r\n              {!isLoadingData &&\r\n              <FinancialDataTable\r\n                data={datatable}\r\n                selectedStockType={selectedStockType}\r\n                selectedAggregationType={selectedAggregationType}\r\n              />}\r\n            </>\r\n          ) : selectedHeaderNav === 'News' ? (\r\n            <>\r\n              {isLoadingData && <div className=\"hunter-spinner-area\"><span className=\"mr-30\">Loading ...</span>    <Spinner>Loading</Spinner></div>}\r\n              {!isLoadingData &&\r\n              <FinancialStatementsDataTable\r\n                data={financialStatements}\r\n              />}\r\n            </>\r\n          ) : (\r\n            <div className=\"container custom-container chart-area\">\r\n              <div className=\"row justify-content-center\">\r\n                {chartData ? (\r\n                  chartData.map((data) => (\r\n                    <div\r\n                      key={data.label}\r\n                      className=\"col-lg-4 col-md-4 col-sm-6 col-xs-12 group-bar-chart\"\r\n                    >\r\n                      <BarChart\r\n                        data={data}\r\n                        chartData={chartData}\r\n                        globalAggregationType={selectedAggregationType}\r\n                      />\r\n                    </div>\r\n                  ))\r\n                ) : isLoading === 2 ? (\r\n                  <div className=\"no-data\">No data</div>\r\n                ) : (\r\n                  <div className=\"no-data\">Fetching...</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </CsvDownloadProvider>\r\n  );\r\n};\r\n\r\nexport default FinancialDashboard;\r\n","import React from 'react';\r\nimport Select from 'react-select';\r\nimport { useCsvDownload } from 'contexts/CsvDownloadContext';\r\n\r\nconst Header = (props) => {\r\n  const { selectedHeaderNav, setSelectedHeaderNav, symbol, setSymbol, optionsSymbol } = props;\r\n\r\n\r\n  const handleNavClicked = (item) => {\r\n    setSelectedHeaderNav(item);\r\n  }\r\n\r\n  const handleSymbolChange = (e) => {\r\n    setSymbol(e);\r\n  };\r\n\r\n  const csvData = useCsvDownload()\r\n\r\n  return (\r\n    <div className=\"container custom-container\">\r\n      <div className=\"row dashboard-toolbar d-block\">\r\n        <div className=\"news-toolbar-title\">\r\n          <div className=\"financial-dashboard-title\">\r\n            <span>News Dashboard</span>\r\n          </div>\r\n          <div className=\"news-dashboard-toolbar d-flex\">\r\n            <div className=\"select-option\">\r\n              <Select\r\n                value={symbol}\r\n                onChange={handleSymbolChange}\r\n                options={optionsSymbol}\r\n                placeholder=\"Symbol\"\r\n              />\r\n            </div>\r\n            <div className=\"dashboard-navbar\">\r\n              <ul className=\"nav justify-content-center\">\r\n                <li\r\n                  className={`nav-item selected`}\r\n                  onClick={() => handleNavClicked(\"News\")}\r\n                >\r\n                  <i className=\"fas fa-inbox\"></i>\r\n                  <span>Symbols</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\n// javascript plugin used to create scrollbars on windows\r\nimport disableScroll from 'disable-scroll';\r\nimport '../../assets/css/financialDashboardStyles.css';\r\n\r\nimport { Button } from 'reactstrap';\r\nimport { routes } from 'routes.js';\r\n\r\nimport Sidebar from 'components/Sidebar/Sidebar.js';\r\nimport Header from 'components/NewsDashboard/Header';\r\nimport BarChart from 'components/FinancialDashboard/BarChart';\r\nimport GraphTypes from 'components/FinancialDashboard/GraphTypes';\r\nimport StockTypes from 'components/FinancialDashboard/StockTypes';\r\nimport FinancialDataTable from 'components/FinancialDashboard/FinancialDataTable';\r\nimport FinancialStatementsDataTable from 'components/FinancialDashboard/FinancialStatementsDataTable';\r\n\r\nimport { CsvDownloadProvider } from 'contexts/CsvDownloadContext';\r\nimport ButtonCsvDownload from 'components/ButtonCsvDownload'\r\n\r\nimport { getNewsFinancialData } from 'api/Api';\r\nimport { useDatatableLoading, useDatatable } from \"contexts/DatatableContext\";\r\nimport Spinner from 'components/Spinner'\r\n\r\nimport {\r\n  getAllSymbols,\r\n  getIncomeStatement,\r\n  getBalanceSheet,\r\n  getCashStatement,\r\n  getFinancialTotalData,\r\n} from 'api/Api';\r\n\r\nconst FinancialDashboard = () => {\r\n  const [symbol, setSymbol] = useState({ value: 'AAPL', label: 'AAPL' });\r\n  const [optionsSymbol, setOptionsSymbol] = useState([]);\r\n  const [isShowSidebar, setShowSidebar] = useState(false);\r\n  const [selectedInstance, setSelectedInstance] = useState('news_data');\r\n  const [selectedHeaderNav, setSelectedHeaderNav] = useState('News');\r\n  const [selectedAggregationType, setSelectedAggregationType] = useState('QA');\r\n  const [selectedStockType, setSelectedStockType] =\r\n    useState('Income Statement');\r\n\r\n  const [isLoadingData, setLoadingData] = useDatatableLoading()\r\n\r\n  const [chartData, setChartData] = useState(null);\r\n  const [datatable, setDataTable] = useState();\r\n  const [isLoading, setIsLoading] = useState(0);\r\n\r\n  const handleSidebarChange = () => {\r\n    setShowSidebar(!isShowSidebar);\r\n  };\r\n\r\n  const handleInstanceChange = (instance) => {\r\n    setSelectedInstance(instance);\r\n  };\r\n\r\n  const [financialStatements, setFinancialStatements] = useState({\r\n    columns: ['id', 'time', 'title'],\r\n    rows: [],\r\n  });\r\n\r\n  const sortDataPointsByDate = (data) => {\r\n    let sortedData = { ...data };\r\n    if (sortedData.dataPoints.length > 0) {\r\n      sortedData.dataPoints.sort(function (a, b) {\r\n        let valueA = a['calendarDate'];\r\n        let valueB = b['calendarDate'];\r\n        if (typeof a['calendarDate'] != 'string') {\r\n          valueA = valueA.toString();\r\n        }\r\n        if (typeof b['calendarDate'] != 'string') {\r\n          valueB = valueB.toString();\r\n        }\r\n        return valueA.localeCompare(valueB);\r\n      });\r\n    }\r\n    return sortedData;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoadingData(true)\r\n    disableScroll.on();\r\n    const getSymbols = async () => {\r\n      const res = await getAllSymbols();\r\n      setOptionsSymbol(res);\r\n    };\r\n    getSymbols();\r\n    setLoadingData(false)\r\n\r\n    return () => {\r\n      disableScroll.off();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(1);\r\n    setChartData();\r\n    setLoadingData(true)\r\n    const getNewsFinancials = async () => {\r\n      setLoadingData(true)\r\n      const res = await getNewsFinancialData(symbol.value);\r\n      setFinancialStatements({\r\n        columns: ['id', 'time', 'title'],\r\n        rows: res.results,\r\n      });\r\n      setLoadingData(false)\r\n    };\r\n\r\n    const getTotalData = async () => {\r\n      setLoadingData(true)\r\n      const res = await getFinancialTotalData(symbol.value);\r\n      setDataTable(res.results);\r\n      setIsLoading(2);\r\n      setLoadingData(false)\r\n    };\r\n\r\n    const getIncomeForDataTable = async () => {\r\n      setLoadingData(true)\r\n      const res = await getFinancialTotalData(symbol.value);\r\n      setDataTable(res.results);\r\n      setIsLoading(2);\r\n      setLoadingData(false)\r\n    };\r\n\r\n    const getBalanceForDataTable = async () => {\r\n      setLoadingData(true)\r\n      const res = await getFinancialTotalData(symbol.value);\r\n      setDataTable(res.results);\r\n      setIsLoading(2);\r\n      setLoadingData(false)\r\n    };\r\n\r\n    const getCashForDataTable = async () => {\r\n      setLoadingData(true)\r\n      const res = await getFinancialTotalData(symbol.value);\r\n      setDataTable(res.results);\r\n      setIsLoading(2);\r\n      setLoadingData(false)\r\n    };\r\n\r\n    const getIncome = async () => {\r\n      setLoadingData(true)\r\n      const res = await getIncomeStatement(symbol.value);\r\n      let revenus = {\r\n        label: 'Revenue',\r\n        group: 0,\r\n        color: 'rgb(25, 185, 154)',\r\n        dataPoints: [],\r\n      };\r\n      let costOfRevenue = {\r\n        label: 'Cost of Revenue',\r\n        group: 0,\r\n        color: 'rgb(8, 64, 129)',\r\n        dataPoints: [],\r\n      };\r\n      let grossProfit = {\r\n        label: 'Gross Profit',\r\n        group: 0,\r\n        color: 'rgb(127, 0, 0)',\r\n        dataPoints: [],\r\n      };\r\n      let EBITDAMargin = {\r\n        label: 'Ebit',\r\n        group: 0,\r\n        color: 'rgb(89, 201, 108)',\r\n        dataPoints: [],\r\n      };\r\n      let NetIncome = {\r\n        label: 'Net Income',\r\n        group: 0,\r\n        color: 'rgb(75, 87, 74)',\r\n        dataPoints: [],\r\n      };\r\n      let earningsPerBasicShare = {\r\n        label: 'Earnings per Basic Share',\r\n        group: 0,\r\n        color: 'rgb(226, 71, 130)',\r\n        dataPoints: [],\r\n      };\r\n      if (res && res.results) {\r\n        res.results.map((item) => {\r\n          revenus.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.revenues,\r\n          });\r\n          costOfRevenue.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.costOfRevenue,\r\n          });\r\n          grossProfit.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.grossProfit,\r\n          });\r\n          EBITDAMargin.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.EBITDAMargin,\r\n          });\r\n          NetIncome.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.netIncome,\r\n          });\r\n          earningsPerBasicShare.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.earningsPerBasicShare,\r\n          });\r\n        });\r\n      }\r\n      setChartData([\r\n        sortDataPointsByDate(revenus),\r\n        sortDataPointsByDate(costOfRevenue),\r\n        sortDataPointsByDate(grossProfit),\r\n        sortDataPointsByDate(EBITDAMargin),\r\n        sortDataPointsByDate(NetIncome),\r\n        sortDataPointsByDate(earningsPerBasicShare),\r\n      ]);\r\n      setIsLoading(2);\r\n      setLoadingData(false)\r\n    };\r\n\r\n    const getBalance = async () => {\r\n      setLoadingData(true)\r\n      const res = await getBalanceSheet(symbol.value);\r\n      let assets = {\r\n        label: 'Total Assets',\r\n        group: 1,\r\n        color: 'rgb(182, 116, 194)',\r\n        dataPoints: [],\r\n      };\r\n      let liabilitiesNonCurrent = {\r\n        label: 'Total Liabilities',\r\n        group: 1,\r\n        color: 'rgb(186, 56, 58)',\r\n        dataPoints: [],\r\n      };\r\n      let debt = {\r\n        label: 'Total Debt [USD]',\r\n        group: 1,\r\n        color: 'rgb(172, 114, 47)',\r\n        dataPoints: [],\r\n      };\r\n      let tradeAndNonTradeReceivables = {\r\n        label: 'Receivables',\r\n        group: 1,\r\n        color: 'rgb(99, 89, 135)',\r\n        dataPoints: [],\r\n      };\r\n      let tradeAndNonTradePayables = {\r\n        label: 'Payables',\r\n        group: 1,\r\n        color: 'rgb(179, 8, 167)',\r\n        dataPoints: [],\r\n      };\r\n      let cashAndEquivalents = {\r\n        label: 'Cash & Cash Equivalents [USD]',\r\n        group: 1,\r\n        color: 'rgb(46, 149, 187)',\r\n        dataPoints: [],\r\n      };\r\n      if (res && res.results) {\r\n        res.results.map((item) => {\r\n          assets.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.assets,\r\n          });\r\n          liabilitiesNonCurrent.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.liabilitiesNonCurrent,\r\n          });\r\n          debt.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.debt,\r\n          });\r\n          tradeAndNonTradeReceivables.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.tradeAndNonTradeReceivables,\r\n          });\r\n          tradeAndNonTradePayables.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.tradeAndNonTradePayables,\r\n          });\r\n          cashAndEquivalents.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.cashAndEquivalents,\r\n          });\r\n        });\r\n      }\r\n\r\n      setChartData([\r\n        sortDataPointsByDate(assets),\r\n        sortDataPointsByDate(liabilitiesNonCurrent),\r\n        sortDataPointsByDate(debt),\r\n        sortDataPointsByDate(tradeAndNonTradeReceivables),\r\n        sortDataPointsByDate(tradeAndNonTradePayables),\r\n        sortDataPointsByDate(cashAndEquivalents),\r\n      ]);\r\n      setIsLoading(2);\r\n      setLoadingData(false)\r\n    };\r\n\r\n    const getCash = async () => {\r\n      setLoadingData(true)\r\n      const res = await getCashStatement(symbol.value);\r\n      let netCashFlowFromOperations = {\r\n        label: 'Net Cash Flow from Operations',\r\n        group: 2,\r\n        color: 'rgb(230, 195, 176)',\r\n        dataPoints: [],\r\n      };\r\n      let netCashFlowFromInvesting = {\r\n        label: 'Net Cash Flow from Investing',\r\n        group: 2,\r\n        color: 'rgb(182, 102, 232)',\r\n        dataPoints: [],\r\n      };\r\n      let netCashFlowFromFinancing = {\r\n        label: 'Net Cash Flow from Financing',\r\n        group: 2,\r\n        color: 'rgb(221, 171, 219)',\r\n        dataPoints: [],\r\n      };\r\n      let issuanceDebtSecurities = {\r\n        label: 'Issue/Repayment of Debt Securities',\r\n        group: 2,\r\n        color: 'rgb(90, 125, 16)',\r\n        dataPoints: [],\r\n      };\r\n      let issuanceEquityShares = {\r\n        label: 'Issuance/Purchase of Equity Shares',\r\n        group: 2,\r\n        color: 'rgb(241, 76, 34)',\r\n        dataPoints: [],\r\n      };\r\n      let paymentDividendsOtherCashDistributions = {\r\n        label: 'Payment of Dividends & Other Cash Distributions',\r\n        group: 2,\r\n        color: 'rgb(96, 54, 217)',\r\n        dataPoints: [],\r\n      };\r\n      if (res && res.results) {\r\n        res.results.map((item) => {\r\n          netCashFlowFromOperations.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.netCashFlowFromOperations,\r\n          });\r\n          netCashFlowFromInvesting.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.netCashFlowFromInvesting,\r\n          });\r\n          netCashFlowFromFinancing.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.netCashFlowFromFinancing,\r\n          });\r\n          issuanceDebtSecurities.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.issuanceDebtSecurities,\r\n          });\r\n          issuanceEquityShares.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.issuanceEquityShares,\r\n          });\r\n          paymentDividendsOtherCashDistributions.dataPoints.push({\r\n            calendarDate: item.calendarDate,\r\n            period: item.period,\r\n            value: item.paymentDividendsOtherCashDistributions,\r\n          });\r\n        });\r\n      }\r\n\r\n      setChartData([\r\n        sortDataPointsByDate(netCashFlowFromOperations),\r\n        sortDataPointsByDate(netCashFlowFromInvesting),\r\n        sortDataPointsByDate(netCashFlowFromFinancing),\r\n        sortDataPointsByDate(issuanceDebtSecurities),\r\n        sortDataPointsByDate(issuanceEquityShares),\r\n        sortDataPointsByDate(paymentDividendsOtherCashDistributions),\r\n      ]);\r\n      setIsLoading(2);\r\n      setLoadingData(false)\r\n    };\r\n\r\n    if (selectedHeaderNav === 'News') {\r\n      setLoadingData(true)\r\n      getNewsFinancials();\r\n    } else if (selectedHeaderNav === 'Data Table') {\r\n      setLoadingData(true)\r\n      if (selectedStockType === '') {\r\n        getTotalData();\r\n      } else if (selectedStockType === 'Income Statement') {\r\n        getIncomeForDataTable();\r\n      } else if (selectedStockType === 'Balance Sheet') {\r\n        getBalanceForDataTable();\r\n      } else if (selectedStockType === 'Cash Flow Statement') {\r\n        getCashForDataTable();\r\n      }\r\n\r\n      // update database for csv download\r\n      // setLoadingData(false)\r\n\r\n    } else if (selectedHeaderNav === 'Chart') {\r\n      if (selectedStockType === 'Income Statement') {\r\n        getIncome();\r\n      } else if (selectedStockType === 'Balance Sheet') {\r\n        getBalance();\r\n      } else if (selectedStockType === 'Cash Flow Statement') {\r\n        getCash();\r\n      }\r\n\r\n    }\r\n    // setLoadingData(false)\r\n  }, [selectedHeaderNav, selectedStockType, symbol]);\r\n\r\n  return (\r\n      <CsvDownloadProvider>\r\n        <div className=\"financial-dashboard-container\">\r\n          {!isShowSidebar && (\r\n            <Button\r\n              className={'show-sidebar-toggle-area show-sidebar-icon'}\r\n              onClick={handleSidebarChange}\r\n            >\r\n              <i className=\"tim-icons icon-align-left-2\" />\r\n            </Button>\r\n          )}\r\n          {isShowSidebar && (\r\n            <Sidebar\r\n              isAdminPage={false}\r\n              routes={routes}\r\n              subInstance={'tradedatatable'}\r\n              selectedInstance={selectedInstance}\r\n              handleSidebarChange={handleSidebarChange}\r\n              handleInstanceChange={handleInstanceChange}\r\n            />\r\n          )}\r\n          <Header\r\n            selectedHeaderNav={selectedHeaderNav}\r\n            setSelectedHeaderNav={setSelectedHeaderNav}\r\n            symbol={symbol}\r\n            setSymbol={setSymbol}\r\n            optionsSymbol={optionsSymbol}\r\n          />\r\n          {selectedHeaderNav !== 'News' && (\r\n            <div className=\"filter-types-section\">\r\n              <GraphTypes\r\n                selectedAggregationType={selectedAggregationType}\r\n                setSelectedAggregationType={setSelectedAggregationType}\r\n              />\r\n              <StockTypes\r\n                selectedStockType={selectedStockType}\r\n                setSelectedStockType={setSelectedStockType}\r\n                selectedHeaderNav={selectedHeaderNav}\r\n              />\r\n              {selectedHeaderNav == 'Data Table' && (<ButtonCsvDownload filename={\"financial.csv\"}>Csv Download</ButtonCsvDownload>)}\r\n            </div>\r\n          )}\r\n          {selectedHeaderNav === 'Data Table' ? (\r\n            <>\r\n              {isLoadingData && <div className=\"hunter-spinner-area\"><span className=\"mr-30\">Loading ...</span>    <Spinner>Loading</Spinner></div>}\r\n              {!isLoadingData &&\r\n              <FinancialDataTable\r\n                data={datatable}\r\n                selectedStockType={selectedStockType}\r\n                selectedAggregationType={selectedAggregationType}\r\n              />}\r\n            </>\r\n          ) : selectedHeaderNav === 'News' ? (\r\n            <>\r\n              {isLoadingData && <div className=\"hunter-spinner-area\"><span className=\"mr-30\">Loading ...</span>    <Spinner>Loading</Spinner></div>}\r\n              {!isLoadingData &&\r\n              <FinancialStatementsDataTable\r\n                data={financialStatements}\r\n              />}\r\n            </>\r\n          ) : (\r\n            <div className=\"container custom-container chart-area\">\r\n              <div className=\"row justify-content-center\">\r\n                {chartData ? (\r\n                  chartData.map((data) => (\r\n                    <div\r\n                      key={data.label}\r\n                      className=\"col-lg-4 col-md-4 col-sm-6 col-xs-12 group-bar-chart\"\r\n                    >\r\n                      <BarChart\r\n                        data={data}\r\n                        chartData={chartData}\r\n                        globalAggregationType={selectedAggregationType}\r\n                      />\r\n                    </div>\r\n                  ))\r\n                ) : isLoading === 2 ? (\r\n                  <div className=\"no-data\">No data</div>\r\n                ) : (\r\n                  <div className=\"no-data\">Fetching...</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </CsvDownloadProvider>\r\n  );\r\n};\r\n\r\nexport default FinancialDashboard;\r\n","import React, { Component } from \"react\"\r\nimport Select from 'react-select'\r\n\r\nclass CustomSelect extends React.Component {\r\n  render() {\r\n    const {\r\n      isValid\r\n    } = this.props\r\n\r\n    const customStyles = {\r\n      control: (base, state) => ({\r\n        ...base,\r\n        // state.isFocused can display different borderColor if you need it\r\n        borderColor: state.isFocused ?\r\n          '#ddd' : isValid ?\r\n          '#ddd' : 'red',\r\n        // overwrittes hover style\r\n        '&:hover': {\r\n          borderColor: state.isFocused ?\r\n            '#ddd' : isValid ?\r\n            '#ddd' : 'red'\r\n        }\r\n      })\r\n    }\r\n    return <Select styles={ customStyles } {...this.props}/>\r\n  }\r\n}\r\n\r\nexport default CustomSelect;","import React, { Component } from \"react\";\r\nimport BaseSelect from 'react-select'\r\n// import { Editor } from \"react-draft-wysiwyg\";\r\nimport { EditorState, convertToRaw ,convertFromHTML,ContentState} from \"draft-js\";\r\nimport {\r\n  getBotStatusList,\r\n  getConfigFileDetail,\r\n  getModuleTypeNames,\r\n  getFileTypeNames,\r\n  saveConfigFile,\r\n  saveScriptFile,\r\n  getConfigFileList,\r\n  getBotConfigList,\r\n  getBotConfigFileList,\r\n  updateBotStatus,\r\n  getIndicatorSignallingList,\r\n} from \"api/Api\";\r\nimport {\r\n  Button\r\n} from \"reactstrap\";\r\nimport { MDBBtn } from \"mdbreact\";\r\n\r\nimport Editor from 'react-simple-code-editor';\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-javascript';\r\n\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\nimport { MDBDataTableV5 } from 'mdbreact';\r\nimport moment from 'moment'\r\nimport \"./Editor.css\"\r\nimport Select from \"components/CustomSelect\"\r\n\r\nexport default class TextEditor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      code: '',\r\n      key: 'parameter',\r\n      editorState: EditorState.createEmpty(),\r\n      textdata:[\"hello\"],\r\n      scriptfiles: [],\r\n      scriptfile: null,\r\n      selectedFileType: null,\r\n      selectedModuleType: null,\r\n      selectedModule1Type: null,\r\n      module1TypeOptions: [\r\n        { value: 'watchlists', label: 'watchlists' },\r\n        { value: 'indicator_signaling', label: 'indicator_signaling' },\r\n        { value: 'order_signalling', label: 'order_signalling' },\r\n        { value: 'order_routing', label: 'order_routing' },\r\n        { value: 'indicators', label: 'pass in processed data into indicators' },\r\n        { value: 'core', label: 'core' },\r\n      ],\r\n      processConfigOptions: {\r\n        name: '',\r\n\r\n        indicator: [\r\n          {\r\n            value: 'heik_diff',\r\n            label: 'heik_diff'\r\n          },\r\n          {\r\n            value: 'heik',\r\n            label: 'heik'\r\n          },\r\n          {\r\n            value: 'rsi1',\r\n            label: 'rsi1'\r\n          },\r\n          {\r\n            value: 'rsi2',\r\n            label: 'rsi2'\r\n          },\r\n          {\r\n            value: 'rsi3',\r\n            label: 'rsi3'\r\n          },\r\n        ],\r\n        watchlist: [\r\n          {\r\n            value: 'tech',\r\n            label: 'tech'\r\n          },\r\n          {\r\n            value: 'buffett',\r\n            label: 'buffett'\r\n          },\r\n        ],\r\n        position_sizing: [{value: 'equal', label: 'equal'}],\r\n        order_routing: [\r\n          {\r\n            value: 'alphaca',\r\n            label: 'alphaca'\r\n          },\r\n        ],\r\n        data_source: [{\r\n          label: \"polygon\",\r\n          value: \"polygon\"\r\n        }],\r\n        live_trading: [\r\n          {\r\n            value: true,\r\n            label: 'true'\r\n          },\r\n          {\r\n            value: false,\r\n            label: 'false'\r\n          },\r\n        ],\r\n        starting_cash: 10000,\r\n        extended_hours: [\r\n          {value: true, label: 'true'},\r\n          {value: false, label: 'false'}\r\n        ],\r\n        macro_strategy: [{value: 'tsrh_dc', label: 'tsrh_dc'}],\r\n        indicator_signalling: [\r\n          {\r\n            label: \"alternative\",\r\n            value: \"alternative\"\r\n          },\r\n          {\r\n            value: 'default',\r\n            label: 'default'\r\n          }\r\n        ],\r\n        asset_class: [\r\n          {\r\n            label: \"crypto\",\r\n            value: \"crypto\"\r\n          },\r\n          {\r\n            label: \"equities\",\r\n            value: \"equities\"\r\n          }\r\n        ],\r\n      },\r\n      botConfigOptions: {\r\n        bot_name_config: '',\r\n        extended_hours_config: [\r\n          {value: true, label: 'true'},\r\n          {value: false, label: 'false'}\r\n        ],\r\n        macro_strategy_config: [],\r\n        start_date_config: ''\r\n      },\r\n      processConfigSetting: {\r\n        name: '',\r\n        indicator: null,\r\n        watchlist: null,\r\n        position_sizing: null,\r\n        order_routing: null,\r\n        data_source: null,\r\n        live_trading: null,\r\n        starting_cash: 10000,\r\n        extended_hours: null,\r\n        macro_strategy: null,\r\n        indicator_signalling: null,\r\n        asset_class: null,\r\n      },\r\n      botConfigSetting: {\r\n        bot_name_config: '',\r\n        extended_hours_config: null,\r\n        macro_strategy_config: null,\r\n        start_date_config: ''\r\n      },\r\n      selectedConfigFile: null,\r\n      selectedBotConfigFile: null,\r\n      selectedModuleContents: [],\r\n      filename: '',\r\n      file:[],\r\n      content: null,\r\n      isUpdate: false,\r\n      isShowOpenModal: false,\r\n      isShowAddIndicatorModal: false,\r\n      isShowSaveModal: false,\r\n      isCheckedStrategy: false,\r\n      isShowConfigOpenModal: false,\r\n      isShowBotConfigOpenModal: false,\r\n      strategyIndicators: [],\r\n      headerColumnsBotStatus: [\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          width: 100,\r\n          attributes: {\r\n            'aria-controls': 'DataTable',\r\n            'aria-label': 'symbol',\r\n          },\r\n        },\r\n        {\r\n          label: 'BOT NAME',\r\n          field: 'name',\r\n          width: 200,\r\n        },\r\n        {\r\n          label: 'STATUS',\r\n          field: 'status',\r\n          width: 150,\r\n        },\r\n        {\r\n          label: 'UPDATED',\r\n          field: 'updated',\r\n          width: 150,\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: false,\r\n          width: 100,\r\n        }\r\n      ],\r\n      headerColumnsBotConfig: [\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          wdith: 100,\r\n          attributes: {\r\n            'aria-controls': 'DataTable',\r\n            'aria-label': 'ID',\r\n          },\r\n        },\r\n        {\r\n          label: 'BOT NAME',\r\n          field: 'name',\r\n          width: 200,\r\n        },\r\n        {\r\n          label: 'Time Frame',\r\n          field: 'timeframe',\r\n          with: 200,\r\n        },\r\n        {\r\n          label: 'Indicator',\r\n          field: 'indicator',\r\n          with: 500,\r\n        },\r\n        {\r\n          label: 'Watch List',\r\n          field: 'watchlist',\r\n          with: 100,\r\n        },\r\n        {\r\n          label: 'Position Sizing',\r\n          field: 'position_sizing',\r\n          sort: false,\r\n          with: 100,\r\n        },\r\n        {\r\n          label: 'Order Routing',\r\n          field: 'order_routing',\r\n          sort: false,\r\n          with: 100,\r\n        },\r\n        {\r\n          label: 'Data Source',\r\n          field: 'data_source',\r\n          sort: false,\r\n          with: 100,\r\n        },\r\n        {\r\n          label: 'Live Trading',\r\n          field: 'live_trading',\r\n          sort: false,\r\n          with: 100,\r\n        },\r\n        {\r\n          label: 'Starting Cash',\r\n          field: 'starting_cash',\r\n          sort: false,\r\n          with: 100,\r\n        },\r\n        {\r\n          label: 'Hours',\r\n          field: 'hours',\r\n          sort: false,\r\n          with: 100,\r\n        },\r\n        {\r\n          label: 'Macro Strategy',\r\n          field: 'macro_strategy',\r\n          sort: false,\r\n          with: 100,\r\n        },\r\n        {\r\n          label: 'Indicator Signalling',\r\n          field: 'indicator_signalling',\r\n          sort: false,\r\n          with: 100,\r\n        },\r\n        {\r\n          label: 'Asset Class',\r\n          field: 'asset_class',\r\n          sort: false,\r\n          with: 100,\r\n        }\r\n      ],\r\n      headerColumnsSmallBotConfig: [\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          wdith: 100,\r\n          attributes: {\r\n            'aria-controls': 'DataTable',\r\n            'aria-label': 'ID',\r\n          },\r\n        },\r\n        {\r\n          label: 'BOT NAME',\r\n          field: 'name',\r\n          width: 200,\r\n        },\r\n        {\r\n          label: 'Macro Strategy',\r\n          field: 'macro_strategy',\r\n          sort: false,\r\n          with: 100,\r\n        },\r\n        {\r\n          label: 'Extended Hours',\r\n          field: 'hours',\r\n          sort: false,\r\n          with: 100,\r\n        },\r\n        {\r\n          label: 'Start Date',\r\n          field: 'start_date',\r\n          sort: false,\r\n          with: 100,\r\n        }\r\n      ],\r\n      botStatusDatatable: {\r\n        columns: [],\r\n        rows: [],\r\n      },\r\n      botConfigDatatable: {\r\n        columns: [],\r\n        rows: [],\r\n      },\r\n      botConfigSmallDatatable: {\r\n        columns: [],\r\n        rows: [],\r\n      },\r\n      selectValidations: {\r\n        name: true,\r\n        indicator: true,\r\n        watchlist: true,\r\n        position_sizing: true,\r\n        order_routing: true,\r\n        data_source: true,\r\n        live_trading: true,\r\n        starting_cash: true,\r\n        extended_hours: true,\r\n        macro_strategy: true,\r\n        indicator_signalling: true,\r\n        asset_class: true,\r\n      },\r\n    };\r\n\r\n\r\n  }\r\n\r\n  openAddIndicatorModal = () => {\r\n    this.setState({ isShowAddIndicatorModal: true });\r\n  }\r\n\r\n  handleChange = (checked) => {\r\n    this.setState({ isCheckedStrategy: checked });\r\n  }\r\n\r\n\r\n  async componentDidMount () {\r\n    // loading indicator signalling options\r\n    await this.loadIndicatorSignallingOptions()\r\n\r\n    this.loadModuleTypes()\r\n    this.loadConfigFiles()\r\n    this.loadBotConfigFiles()\r\n    this.loadBotStatusList()\r\n    this.loadBotConfigList()\r\n  }\r\n\r\n\r\n  async loadIndicatorSignallingOptions() {\r\n    const res = await getIndicatorSignallingList();\r\n\r\n    if (res.success) {\r\n      //this.state.processConfigOptions.\r\n      let updatedState = this.state\r\n      updatedState.processConfigOptions.indicator_signalling = res.data\r\n\r\n      this.setState((state, props) => (updatedState));\r\n    }\r\n  }\r\n\r\n  loadConfigFiles = async () => {\r\n    const res = await getConfigFileList('bot_configs');\r\n    if (res.success) {\r\n      const configFiles = res.result.map(value => {\r\n        return {\r\n          value: value,\r\n          label: value\r\n        }\r\n      })\r\n\r\n      this.setState({\r\n        configFileOptions: configFiles,\r\n        selectedConfigFile: configFiles[0],\r\n        isUpdate: true,\r\n      })\r\n    }\r\n  }\r\n\r\n  loadBotConfigFiles = async () => {\r\n    const res = await getBotConfigFileList('bot_configs');\r\n    if (res.success) {\r\n      const configFiles = res.result.map(value => {\r\n        return {\r\n          value: value,\r\n          label: value\r\n        }\r\n      })\r\n\r\n      this.setState({\r\n        botConfigFileOptions: configFiles,\r\n        selectedBotConfigFile: configFiles[0],\r\n        isUpdate: true,\r\n      })\r\n    }\r\n  }\r\n\r\n  updateBotStatus = async (bot, action) => {\r\n    const res = await updateBotStatus(bot.name, action)\r\n    alert(res.message)\r\n    await this.loadBotStatusList()\r\n  }\r\n\r\n  loadBotStatusList = async () => {\r\n    const res = await getBotStatusList();\r\n    if (res.success) {\r\n      const botStatusList = res.result.map((bot, index) => ({\r\n        id: index + 1,\r\n        name: bot.name,\r\n        status: bot.status,\r\n        updated: moment(bot.updated).format(\"YYYY-MM-DD h:mm:ss\"),\r\n        action: <>\r\n          <MDBBtn className=\"mr-10\" color=\"blue\" size=\"sm\" onClick={\r\n            () => {\r\n              this.updateBotStatus(bot, bot.status === 'live' ? 'pause' : 'start');\r\n            }}\r\n          >\r\n            {bot.status === 'live' ? 'pause' : 'start'}\r\n          </MDBBtn>\r\n          <MDBBtn color=\"blue\" size=\"sm\" onClick={\r\n            () => {\r\n              this.updateBotStatus(bot, 'kill');\r\n            }}\r\n          >\r\n            kill\r\n          </MDBBtn>\r\n        </>\r\n      }))\r\n      const data = {\r\n        columns: this.state.headerColumnsBotStatus,\r\n        rows: botStatusList\r\n      }\r\n      this.setState({\r\n        botStatusDatatable: data\r\n      })\r\n    } else {\r\n      const data = {\r\n        columns: this.state.headerColumnsBotStatus,\r\n        rows: []\r\n      }\r\n      this.setState({\r\n        botStatusDatatable: data\r\n      })\r\n    }\r\n  }\r\n\r\n  loadBotConfigList = async () => {\r\n    const res = await getBotConfigList();\r\n    if (res.result) {\r\n      const botConfigList = res.result.map((bot, index) => ({\r\n        id: index + 1,\r\n        name: bot.name,\r\n        indicator: bot.indicator,\r\n        watchlist: bot.watchlist,\r\n        position_sizing: bot.position_sizing,\r\n        order_routing: bot.order_routing,\r\n        data_source: bot.data_source,\r\n        live_trading: bot.live_trading,\r\n        starting_cash: bot.starting_cash,\r\n        hours: bot.extended_hours,\r\n        macro_strategy: bot.macro_strategy,\r\n        indicator_signalling: bot.indicator_signalling,\r\n        asset_class: bot.asset_class,\r\n      }))\r\n      const data = {\r\n        columns: this.state.headerColumnsBotConfig.map((col, index) => {\r\n          if (index === 0) {\r\n            col.width = 50;\r\n          } else if (index === 1) {\r\n            col.width = 150;\r\n          } else if (index === 3) {\r\n            col.width = 300;\r\n          } else if ((index === 4) || (index === 5) || (index === 6) || (index === 7) || (index === 8) || (index === 9)) {\r\n            col.width = 150;\r\n          } else if ((index === 10) || (index === 11) || (index === 12) || (index === 13)) {\r\n            col.width = 200;\r\n          }\r\n          return col;\r\n        }),\r\n        rows: botConfigList\r\n      }\r\n      const data1 = {\r\n        columns: this.state.headerColumnsSmallBotConfig.map((col, index) => {\r\n          if (index === 0) {\r\n            col.width = 50;\r\n          } else if (index === 1) {\r\n            col.width = 150;\r\n          } else if (index === 3) {\r\n            col.width = 300;\r\n          } else if ((index === 4) || (index === 5) || (index === 6) || (index === 7) || (index === 8) || (index === 9)) {\r\n            col.width = 150;\r\n          } else if ((index === 10) || (index === 11) || (index === 12) || (index === 13)) {\r\n            col.width = 200;\r\n          }\r\n          return col;\r\n        }),\r\n        rows: botConfigList\r\n      }\r\n      this.setState({\r\n        botConfigDatatable: data,\r\n        botConfigSmallDatatable: data1\r\n      })\r\n    }\r\n  }\r\n\r\n  loadModuleTypes = async () => {\r\n    const res = await getModuleTypeNames();\r\n    if (res.success) {\r\n      const moduleTypes = res.result.map(value => {\r\n        return {\r\n          value: value,\r\n          label: value\r\n        }\r\n      })\r\n\r\n      this.setState({\r\n        moduleTypeOptions: moduleTypes,\r\n        selectedModuleType: moduleTypes[0],\r\n        isUpdate: true,\r\n      })\r\n    }\r\n  }\r\n\r\n  handleScriptFileChange = (e) => {\r\n    this.setState({\r\n      selectedFileType: e,\r\n      filename: e.value,\r\n    });\r\n  }\r\n\r\n  handleScriptFileSave = async () => {\r\n    if (!this.state.filename) {\r\n      alert(\"Please input the file name!\")\r\n      return;\r\n    }\r\n\r\n    if (!this.state.code.length) {\r\n      alert(\"File content is empty!\")\r\n      return;\r\n    }\r\n\r\n\r\n\r\n    if (!this.state.isSelectedStrategyFile) {\r\n      if (this.state.isCheckedStrategy) {\r\n        alert(\"content is empty!\")\r\n        return;\r\n      }\r\n    }\r\n\r\n    let res;\r\n    if (this.state.isSelectedStrategyFile) {\r\n      res = await saveScriptFile(\r\n        this.state.filename,\r\n        this.state.code,\r\n        this.state.isUpdate,\r\n        this.state.isCheckedStrategy\r\n      )\r\n    } else {\r\n      res = await saveConfigFile(\r\n        this.state.isUpdate ? this.state.selectedFileType.value : this.state.filename,\r\n        this.state.processConfigSetting,\r\n        this.state.isUpdate,\r\n      )\r\n    }\r\n\r\n    if (res.success) {\r\n      this.SaveScriptModalClose()\r\n      return;\r\n    }\r\n    alert(res.message);\r\n  }\r\n\r\n  handleScriptFileNameChange = (e) => {\r\n    this.setState({\r\n      filename: e.target.value\r\n    })\r\n  }\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  };\r\n\r\n  handleScriptFileCreate = async () => {\r\n    this.setState({\r\n      isUpdate: false,\r\n      scriptfiles: null,\r\n      filename: '',\r\n      selectedFileType: null,\r\n      editorState: EditorState.createEmpty(),\r\n    })\r\n  }\r\n\r\n  handleOpenScriptFile = async () => {\r\n    this.setState({\r\n      isShowOpenModal: true,\r\n      isUpdate: true,\r\n    })\r\n  }\r\n\r\n  handleOpenProcessConfigModal = async () => {\r\n    this.setState({\r\n      isShowConfigOpenModal: true,\r\n      isUpdate: true\r\n    })\r\n  }\r\n\r\n  handleFileTypeChange = async (e) => {\r\n    this.setState({\r\n      selectedFileType: e,\r\n      isUpdate: true,\r\n    })\r\n  }\r\n\r\n  handleFile1TypeChange = async (e) => {\r\n    this.setState({\r\n      selectedFile1Type: e,\r\n      isUpdate: true,\r\n    })\r\n  }\r\n\r\n  handleConfigFileChange = async (e) => {\r\n    this.setState({\r\n      selectedConfigFile: e,\r\n      isUpdate: true,\r\n    })\r\n  }\r\n\r\n  handleBotConfigFileChange = async (e) => {\r\n    this.setState({\r\n      selectedBotConfigFile: e,\r\n      isUpdate: true,\r\n    })\r\n  }\r\n\r\n  handleModuleTypeChange = async (e) => {\r\n    this.setState({\r\n      selectedModuleType: e,\r\n      isUpdate: true,\r\n    })\r\n\r\n    const res = await getFileTypeNames(e.value);\r\n    if (res.success) {\r\n      const fileTypes = res.result.map(value => {\r\n        return {\r\n          value: value.name,\r\n          label: value.name\r\n        }\r\n      })\r\n\r\n      this.setState({\r\n        selectedModuleContents: res.result,\r\n        fileTypeOptions: fileTypes,\r\n        selectedFileType: fileTypes[0],\r\n        isUpdate: true,\r\n      })\r\n    }\r\n  }\r\n\r\n  handleModule1TypeChange = async (e) => {\r\n    this.setState({\r\n      selectedModule1Type: e,\r\n      isUpdate: true,\r\n    })\r\n\r\n    const res = await getFileTypeNames(e.value);\r\n    if (res.success) {\r\n      const fileTypes = !res.result.length ? null :\r\n      res.result.map(value => {\r\n        return {\r\n          value: value.name,\r\n          label: value.name\r\n        }\r\n      })\r\n\r\n      this.setState({\r\n        selectedModuleContents: res.result,\r\n        file1TypeOptions: fileTypes,\r\n        selectedFile1Type: fileTypes ? fileTypes[0] : null,\r\n        isUpdate: true,\r\n      })\r\n    }\r\n  }\r\n\r\n  handleSaveModalShow = async () => {\r\n    this.setState({isShowSaveModal: true})\r\n  }\r\n\r\n  processConfigModalClose = () => {\r\n    this.setState({isShowConfigOpenModal: false})\r\n  }\r\n\r\n  botConfigModalClose = () => {\r\n    this.setState({isShowBotConfigOpenModal: false})\r\n  }\r\n\r\n  OpenScriptModalClose = () => {\r\n    this.setState({isShowOpenModal: false})\r\n  }\r\n\r\n  AddIndicatorModalClose = () => {\r\n    this.setState({ isShowAddIndicatorModal: false })\r\n  }\r\n\r\n  SaveScriptModalClose = () => {\r\n    this.setState({isShowSaveModal: false})\r\n  }\r\n\r\n  handleScriptFileOpen = async () => {\r\n    const selectedFile = this.state.selectedModuleContents.filter((file) => file.name === this.state.selectedFileType.value)\r\n    const blocksFromHTML = convertFromHTML(selectedFile[0] ? `<pre>${selectedFile[0].contents}</pre>` : '');\r\n    const blockContent= ContentState.createFromBlockArray(\r\n      blocksFromHTML.contentBlocks,\r\n      blocksFromHTML.entityMap,\r\n    );\r\n\r\n    this.setState({\r\n      code: selectedFile[0].contents,\r\n      editorState: EditorState.createWithContent(blockContent),\r\n      scriptfile: selectedFile,\r\n    })\r\n\r\n    this.OpenScriptModalClose();\r\n\r\n  }\r\n\r\n  handleConfigFileOpen = async () => {\r\n    const res = await getConfigFileDetail('bot_configs', this.state.selectedConfigFile.value)\r\n\r\n    this.setState({\r\n      processConfigSetting: res,\r\n      isUpdate: true\r\n    })\r\n    this.processConfigModalClose()\r\n  }\r\n\r\n  handleBotConfigFileOpen = async () => {\r\n    const res = await getConfigFileDetail('bot_configs', this.state.selectedConfigFile.value)\r\n\r\n    this.setState({\r\n      botConfigSetting: {\r\n        bot_name_config: res.name,\r\n        macro_strategy_config: res.macro_strategy,\r\n        start_date_config: res.start_date_config,\r\n        extended_hours_config: res.extended_hours,\r\n      },\r\n      isUpdate: true\r\n    })\r\n\r\n    this.botConfigModalClose()\r\n  }\r\n\r\n  handleSave = (editorState) => {\r\n    let content = convertToRaw(editorState.getCurrentContent())\r\n    this.setState({\r\n      content: content.blocks[0].text,\r\n      isSelectedStrategyFile: true\r\n    })\r\n    this.handleSaveModalShow()\r\n  }\r\n\r\n  handleProcessConfigSettingSave = async () => {\r\n    const form = document.querySelector('#controlled-tab-example-tabpane-process form')\r\n    if (!form.checkValidity()) {\r\n      form.classList.add('was-validated');\r\n    }\r\n\r\n    let isFormValid = true\r\n\r\n    let validations = {}\r\n    for (const config in this.state.processConfigSetting) {\r\n      validations[config] = true\r\n      if (!this.state.processConfigSetting[config] || this.state.processConfigSetting[config]=='' || this.state.processConfigSetting[config].length == 0) {\r\n\r\n        validations[config] = false\r\n        isFormValid = false\r\n      }\r\n    }\r\n    this.setState({selectValidations: validations})\r\n\r\n    if (!isFormValid) {\r\n      return\r\n    }\r\n\r\n\r\n    const res = await saveConfigFile(\r\n      this.state.processConfigSetting,\r\n      this.state.isUpdate,\r\n    )\r\n\r\n    if (res.success) {\r\n      alert(res.message)\r\n    } else {\r\n      alert('The config is not saved')\r\n    }\r\n\r\n    this.loadConfigFiles()\r\n    this.loadBotConfigList()\r\n  }\r\n\r\n  showFile = async (e) => {\r\n    e.preventDefault()\r\n    let currFile=e.target.files[0]\r\n    const reader = new FileReader()\r\n    reader.onload = async (e) => {\r\n      const text = (e.target.result)\r\n      const blocksFromHTML = convertFromHTML(text);\r\n      const state= ContentState.createFromBlockArray(\r\n        blocksFromHTML.contentBlocks,\r\n        blocksFromHTML.entityMap,\r\n      );\r\n      this.setState({editorState: EditorState.createWithContent(state),file:currFile})\r\n    };\r\n    reader.readAsText(e.target.files[0])\r\n  }\r\n\r\n  handleModuleAndTypeSelect = () => {\r\n    const indicators = this.state.strategyIndicators;\r\n    indicators.push(`${this.state.selectedModule1Type.value}-${this.state.selectedFile1Type.value}`)\r\n    this.setState( { strategyIndicators: indicators} )\r\n  }\r\n\r\n  handleIndicatorDelete = (indicator) => {\r\n    let indicators = this.state.strategyIndicators;\r\n    indicators = indicators.filter( (o) => o !== indicator )\r\n    this.setState( { strategyIndicators: indicators} )\r\n  }\r\n\r\n  handleBotNameChange = (e, key) => {\r\n    this.state.processConfigSetting[key] = e.target.value\r\n    this.setState({processConfigSetting: this.state.processConfigSetting})\r\n  }\r\n\r\n\r\n  handleProcessChange = (e, key) => {\r\n    this.state.selectValidations[key] = (e.length > 0)\r\n    this.state.processConfigSetting[key] = e\r\n    this.setState({processConfigSetting: this.state.processConfigSetting})\r\n  }\r\n\r\n  handleBotConfigBotNameChange = (e, key) => {\r\n    this.state.botConfigSetting[key] = e.target.value\r\n    this.setState({botConfigSetting: this.state.botConfigSetting})\r\n  }\r\n\r\n  handleBotConfigInputChange = (e, key) => {\r\n    this.state.botConfigSetting[key] = e.target.value\r\n    this.setState({botConfigSetting: this.state.botConfigSetting})\r\n  }\r\n\r\n  displayProcessEditor = () => {\r\n    let keys = Object.keys(this.state.processConfigOptions);\r\n\r\n    return keys.map((key, index) => {\r\n      return (\r\n        <li key={key} className=\"list-group-item strategy-indicator-edit-list\">\r\n          <div className=\"strategy-indicator-edit-list-no display-flex-j-c\">\r\n            <MDBBtn tag=\"a\" size=\"sm\">\r\n              {index}\r\n            </MDBBtn>\r\n          </div>\r\n          <div className=\"strategy-indicator-edit-list-content ml-30\">\r\n            <MDBBtn tag=\"a\" size=\"sm\"  className=\"hunter-process-mdb-btn\">\r\n              {key}\r\n            </MDBBtn>\r\n          </div>\r\n          <div className=\"strategy-indicator-edit-list-action\">\r\n          { key === 'name' || key === 'starting_cash'\r\n            ?\r\n            (\r\n              <input\r\n                  type=\"name\"\r\n                  className=\"form-control hunter-bot-name-input\"\r\n                  placeholder= {\r\n                    key === 'name' ? \"Enter name\" : \"Enter starting cash\"\r\n                  }\r\n                  value={this.state.processConfigSetting[key]}\r\n                  onChange={(e) => { this.handleBotNameChange(e, key)}}\r\n                  required\r\n              />\r\n            )\r\n            :\r\n            (<Select\r\n              value={this.state.processConfigSetting[key]}\r\n              onChange={(e) => { this.handleProcessChange(e, key) }}\r\n              options={this.state.processConfigOptions[key]}\r\n              placeholder=\"select\"\r\n              isMulti\r\n              required=\"true\"\r\n              isValid={this.state.selectValidations[key]}\r\n            />)\r\n          }\r\n          </div>\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  handleIndicatorReset = () => {\r\n    this.setState(\r\n      {\r\n        processConfigSetting: {\r\n          name: '',\r\n          indicator: null,\r\n          watchlist: null,\r\n          position_sizing: null,\r\n          order_routing: null,\r\n          data_source: null,\r\n          live_trading: null,\r\n          starting_cash: 10000,\r\n          hours: null,\r\n          macro_strategy: null,\r\n          indicator_signalling: null,\r\n          asset_class: null,\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { editorState } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"hunter-textedit-container\" >\r\n          <Tabs\r\n            id=\"controlled-tab-example\"\r\n            activeKey={this.state.key}\r\n            onSelect={(k) => this.setState({ key: k })}\r\n            className=\"mb-3\"\r\n          >\r\n            <Tab eventKey=\"parameter\" title=\"Parameter Editor\">\r\n              <div className=\"hunter-code-editor-area\">\r\n                <Editor\r\n                  value={this.state.code}\r\n                  onValueChange={code => this.setState({ code })}\r\n                  highlight={code => highlight(code, languages.plaintext)}\r\n                  padding={10}\r\n                  style={{\r\n                    fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\r\n                    fontSize: 12,\r\n                    minHeight: \"500px\",\r\n                    backgroundColor: \"#FFFFFF\",\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"hunter-editor-button-area\">\r\n                <div className=\"display-flex-left\">\r\n                  <button className=\"btn btn-md btn-secondary\" onClick={()=>this.handleScriptFileCreate()}>New</button>\r\n                  <button className=\"btn btn-md btn-secondary\" onClick={()=>this.handleOpenScriptFile()}>Open</button>\r\n                  {/* <button className=\"btn btn-md btn-secondary\" onClick={()=>this.handleSave(draftToHtml(convertToRaw(editorState.getCurrentContent())))}>Save</button> */}\r\n                  <button className=\"btn btn-md btn-secondary\" onClick={()=>this.handleSave(editorState)}>Save</button>\r\n                </div>\r\n              </div>\r\n            </Tab>\r\n            <Tab eventKey=\"process\" title=\"Process Config Editor\">\r\n              <div className={\"strategy-indicator-edit-area\"}>\r\n                <form class=\"needs-validation\" noValidate>\r\n                  <ul className=\"list-group\">\r\n                    {this.displayProcessEditor()}\r\n                  </ul>\r\n                </form>\r\n\r\n                <div className=\"strategy-edit-icon-area\">\r\n                  <button className=\"btn btn-md btn-secondary mr-10\" onClick={()=>this.handleIndicatorReset()}>Reset</button>\r\n                  <button className=\"btn btn-md btn-secondary mr-10\" onClick={()=>this.handleOpenProcessConfigModal()}>Open</button>\r\n                  <button className=\"btn btn-md btn-secondary mr-10\" onClick={()=>this.handleProcessConfigSettingSave()}>Save</button>\r\n                </div>\r\n              </div>\r\n            </Tab>\r\n            <Tab eventKey=\"bot-status-manager\" title=\"Bot Status Manager\">\r\n            <MDBDataTableV5\r\n              hover\r\n              maxHeight=\"500px\"\r\n              data={this.state.botStatusDatatable}\r\n              dark={true}\r\n              noBottomColumns={true}\r\n              small={true}\r\n              striped={true}\r\n              scrollY={true}\r\n            />;\r\n            </Tab>\r\n            {/* <Tab eventKey=\"bot-config-manager-small\" title=\"Bot Config Manager1\">\r\n              <MDBDataTableV5\r\n                hover\r\n                maxHeight=\"500px\"\r\n                data={this.state.botConfigSmallDatatable}\r\n                noBottomColumns={true}\r\n                small={true}\r\n                sortable={false}\r\n                striped={true}\r\n                scrollX\r\n              />;\r\n            </Tab> */}\r\n            <Tab eventKey=\"bot-config-manager\" title=\"Bot Config Manager\">\r\n              <MDBDataTableV5\r\n                hover\r\n                maxHeight=\"500px\"\r\n                data={this.state.botConfigDatatable}\r\n                noBottomColumns={true}\r\n                small={true}\r\n                sortable={false}\r\n                striped={true}\r\n                scrollX\r\n              />;\r\n            </Tab>\r\n          </Tabs>\r\n          <Modal show={this.state.isShowOpenModal} className=\"hunter-modal\" onHide={this.OpenScriptModalClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Open Script File</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <div className=\"hunter-select-module-area\">\r\n                <div className=\"select-multi-option\">\r\n                  <label>Select module type</label>\r\n                  <Select\r\n                    className=\"hunter-module-type-select\"\r\n                    name=\"select-module-type\"\r\n                    placeholder=\"Module Type\"\r\n                    value={this.state.selectedModuleType}\r\n                    onChange={this.handleModuleTypeChange}\r\n                    options={this.state.moduleTypeOptions}\r\n                  />\r\n                </div>\r\n                <div className=\"select-multi-option\">\r\n                  <label>Select file type</label>\r\n                  <Select\r\n                    name=\"select-file-type\"\r\n                    placeholder=\"File Type\"\r\n                    value={this.state.selectedFileType}\r\n                    onChange={this.handleFileTypeChange}\r\n                    options={this.state.fileTypeOptions}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Modal.Body>\r\n            <Modal.Footer className=\"hunter-modal-footer\">\r\n              <Button\r\n                variant=\"primary\"\r\n                className=\"btn-md\"\r\n                onClick = {() => {\r\n                  this.handleScriptFileOpen(this.state.selectedFileType)\r\n                }}\r\n              >\r\n                Open\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n          <Modal show={this.state.isShowConfigOpenModal} className=\"hunter-modal\" onHide={this.processConfigModalClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Open Script File</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <div className=\"hunter-select-module-area\">\r\n                <div className=\"select-multi-option\">\r\n                  <label>Select Config File</label>\r\n                  <Select\r\n                    className=\"hunter-module-type-select\"\r\n                    name=\"select-config-file\"\r\n                    placeholder=\"Config File\"\r\n                    value={this.state.selectedConfigFile}\r\n                    onChange={this.handleConfigFileChange}\r\n                    options={this.state.configFileOptions}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Modal.Body>\r\n            <Modal.Footer className=\"hunter-modal-footer\">\r\n              <Button\r\n                variant=\"primary\"\r\n                className=\"btn-md\"\r\n                onClick = {() => {\r\n                  this.handleConfigFileOpen()\r\n                }}\r\n              >\r\n                Open\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n          <Modal show={this.state.isShowBotConfigOpenModal} className=\"hunter-modal\" onHide={this.botConfigModalClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Open Bot Config File</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <div className=\"hunter-select-module-area\">\r\n                <div className=\"select-multi-option\">\r\n                  <label>Select Bot Config File</label>\r\n                  <Select\r\n                    className=\"hunter-module-type-select\"\r\n                    name=\"select-config-file\"\r\n                    placeholder=\"Config File\"\r\n                    value={this.state.selectedBotConfigFile}\r\n                    onChange={this.handleBotConfigFileChange}\r\n                    options={this.state.botConfigFileOptions}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Modal.Body>\r\n            <Modal.Footer className=\"hunter-modal-footer\">\r\n              <Button\r\n                variant=\"primary\"\r\n                className=\"btn-md\"\r\n                onClick = {() => {\r\n                  this.handleBotConfigFileOpen()\r\n                }}\r\n              >\r\n                Open\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n          <Modal show={this.state.isShowSaveModal} className=\"hunter-modal\" onHide={this.SaveScriptModalClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Save Script File</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <div className=\"hunter-form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control hunter-form-control\"\r\n                  placeholder=\"script file name\"\r\n                  value={\r\n                    this.state.filename\r\n                  }\r\n                  onChange={(e) => { this.handleScriptFileNameChange(e)}}\r\n                />\r\n              </div>\r\n            </Modal.Body>\r\n            <Modal.Footer className=\"hunter-modal-footer\">\r\n              <Button variant=\"primary\" onClick={this.handleScriptFileSave} className=\"btn-md\">\r\n                Save\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\r\nimport { routes } from \"routes.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar\";\r\nimport TextEditor from 'components/TextEditor/Editor';\r\nimport {\r\n  Button\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function FileManager(){\r\n  const history = useHistory();\r\n  const [isShowSidebar, setShowSidebar] = React.useState(true);\r\n  const [selectedInstance, setSelectedInstance] = React.useState('admin_tab');\r\n  const [user] = useState(JSON.parse(localStorage.getItem('user-info')));\r\n\r\n  const handleSidebarChange = () => {\r\n    setShowSidebar(!isShowSidebar);\r\n  };\r\n  \r\n  const handleInstanceChange = (instance) => {\r\n    setSelectedInstance(instance)\r\n  }\r\n\r\n  useEffect (() => {\r\n    console.log('user.is_admin???', user.is_admin)\r\n    if (!user.is_admin) {\r\n      history.pushState('/')\r\n    }\r\n  }, [user, history])\r\n\r\n  return(\r\n    <React.Fragment>        \r\n      <AdminNavbar/>\r\n      <div className=\"wrapper hunter-wrapper\">\r\n          {!isShowSidebar && (\r\n            <Button\r\n              className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\r\n              onClick={handleSidebarChange}\r\n            >\r\n              <i className=\"tim-icons icon-align-left-2\"/>\r\n            </Button>\r\n          )}\r\n          {isShowSidebar && (\r\n            <Sidebar\r\n              isAdminPage={false}\r\n              routes={routes}\r\n              subInstance={'systemfilemanager'}\r\n              handleSidebarChange={handleSidebarChange}\r\n              selectedInstance={selectedInstance}\r\n              handleInstanceChange={handleInstanceChange}\r\n            />\r\n          )}\r\n          <TextEditor/>\r\n        </div>\r\n    </React.Fragment>\r\n  );  \r\n}","import { createContext, useContext } from \"react\";\r\n\r\nexport const themes = {\r\n  dark: {\r\n    colors: {\r\n      white: '#ffffff',\r\n      red: '#951a1a',\r\n      darkBlue: '#343a40',\r\n      lightBlue: '#6c757d',\r\n      textColor: 'white',\r\n      borderColor: '#cccccc',\r\n      actionButtonColor: '#000',\r\n      actionButtonBg: 'transparent',\r\n      tableTextColor: '#000',\r\n    },\r\n  },\r\n  light: \"white-content\",\r\n};\r\n\r\nexport const useThemeColors = () => {\r\n  const context = useContext(ThemeContext)\r\n  return context.theme.colors\r\n}\r\n\r\nexport const ThemeContext = createContext({\r\n  theme: themes.dark,\r\n  changeTheme: () => {},\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ThemeContext, themes } from \"contexts/ThemeContext\";\r\n\r\nexport default function ThemeContextWrapper(props) {\r\n  const [theme, setTheme] = useState(themes.dark);\r\n\r\n  function changeTheme(theme) {\r\n    setTheme(theme);\r\n  }\r\n\r\n  useEffect(() => {\r\n    switch (theme) {\r\n      case themes.light:\r\n        document.body.classList.add(\"white-content\");\r\n        break;\r\n      case themes.dark:\r\n      default:\r\n        document.body.classList.remove(\"white-content\");\r\n        break;\r\n    }\r\n  }, [theme]);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme: theme, changeTheme: changeTheme }}>\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  BackgroundColorContext,\r\n  backgroundColors,\r\n} from \"contexts/BackgroundColorContext\";\r\n\r\nexport default function BackgroundColorWrapper(props) {\r\n  const [color, setColor] = useState(backgroundColors.blue);\r\n\r\n  function changeColor(color) {\r\n    setColor(color);\r\n  }\r\n\r\n  return (\r\n    <BackgroundColorContext.Provider\r\n      value={{ color: color, changeColor: changeColor }}\r\n    >\r\n      {props.children}\r\n    </BackgroundColorContext.Provider>\r\n  );\r\n}\r\n","import {\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { useAuth } from 'contexts/authContext';\r\n\r\nexport default function PrivateRoute({ children, ...rest }) {\r\n  let auth = useAuth();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        auth.authUser.isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n  ","import React, { useState, useEffect } from \"react\";\r\nimport { useAuth } from 'contexts/authContext'\r\nimport { validateEmail } from 'utils/helper'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst SignUp = () => {\r\n    let history = useHistory();\r\n\r\n    let auth = useAuth();\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [username, setUserName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [error, setError] = useState(-1)\r\n    const [message, setMessage] = useState()\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [pathname] = useState(history.location.pathname)\r\n\r\n    useEffect(() => {\r\n        const listener = event => {\r\n            if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n                event.preventDefault();\r\n                signup()\r\n            }\r\n        };\r\n        document.addEventListener(\"keydown\", listener);\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", listener);\r\n        };\r\n    }, []);   \r\n    \r\n    const handleEmailChange = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n    \r\n    const handlePasswordChange = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n    \r\n    const handleConfirmPasswordChange = (e) => {\r\n        setConfirmPassword(e.target.value)\r\n    }\r\n    \r\n    const handleUserNameChange = (e) => {\r\n        setUserName(e.target.value)\r\n    }\r\n\r\n    const signup = async () => {\r\n        if (!username.length) {\r\n            setError(1)\r\n            setMessage('user name is wrong')\r\n            return\r\n        }\r\n        if (!email.length) {\r\n            setError(1)\r\n            setMessage('user email is wrong')\r\n            return\r\n        }\r\n        if (!password.length || !confirmPassword.length) {\r\n            setError(1)\r\n            setMessage('password or confirm password is wrong')\r\n            return\r\n        }\r\n        if (password !== confirmPassword) {\r\n            setError(1)\r\n            setMessage('password and confirm password is not matched')\r\n            return\r\n        }\r\n        if (!validateEmail(email)){\r\n            setError(1)\r\n            setMessage('Invalid email')\r\n            return\r\n        }\r\n        \r\n        setIsLoading(true)\r\n        const res = await auth.authUser.signup(username, email, password, confirmPassword, pathname)\r\n        setIsLoading(false)\r\n\r\n        if (res.success) {\r\n            // setError(0)\r\n            // setMessage('Sign Up is successed')\r\n            history.push('/login')\r\n        } else {\r\n            setError(1)\r\n            setMessage(res.error)\r\n            return\r\n        }\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setError(-1);\r\n        setMessage('');\r\n    }\r\n\r\n    return (\r\n        <div className={\"login-form\"}>\r\n            <div>\r\n\r\n                <h3>Sign Up</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input\r\n                        type=\"name\"\r\n                        className=\"form-control hunter-form-control\"\r\n                        placeholder=\"Enter user name\"\r\n                        value={username}\r\n                        onChange={(e) => { handleUserNameChange(e)}}\r\n                    />\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                    <label>Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        className=\"form-control hunter-form-control\"\r\n                        placeholder=\"Enter email\"\r\n                        value={email}\r\n                        onChange={(e) => { handleEmailChange(e)}}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control hunter-form-control\"\r\n                        placeholder=\"Enter password\"\r\n                        value={password}\r\n                        onChange={(e) => { handlePasswordChange(e)}}\r\n                    />\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                    <label>Confirm Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control hunter-form-control\"\r\n                        placeholder=\"Enter confirm password\"\r\n                        value={confirmPassword}\r\n                        onChange={(e) => { handleConfirmPasswordChange(e)}}\r\n                    />\r\n                </div>\r\n\r\n                <button\r\n                    className=\"btn btn-dark btn-lg btn-block hunter-signin-button\"\r\n                    onClick={signup}\r\n                >\r\n                    {isLoading && (\r\n                        <span className=\"spinner-border spinner-border-sm hunter-spinner-button\" role=\"status\" aria-hidden=\"true\"></span>\r\n                    )}\r\n                    Sign up\r\n                    \r\n                </button>\r\n                <div className=\"form-group\">\r\n                    <p className=\"sign-up-area text-right\">\r\n                        <a href=\"/signin\">Sign In?</a>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            {error !== -1 && \r\n                <div className=\"alert alert-primary\" role=\"alert\">\r\n                    <div className=\"alert-container\">\r\n                        <div className=\"alert-content\">\r\n                            {message}\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary modal-close-button hunter-modal-small-button\" onClick={() => { handleModalClose() }}>Close</button>\r\n                    </div>\r\n                </div>   \r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUp","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    useHistory,\r\n} from \"react-router-dom\";\r\nimport { useAuth } from 'contexts/authContext'\r\n\r\nconst Verify = () => {\r\n    let auth = useAuth();\r\n    let history = useHistory();\r\n    const [code, setCode] = useState('')\r\n    const [error, setError] = useState(-1)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n    const userId = history.location.state ? history.location.state.userId : null\r\n\r\n    const handleCodeChange = (e) => {\r\n        setCode(e.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const listener = event => {\r\n            if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n                event.preventDefault();\r\n                verify();\r\n            }\r\n        };\r\n        document.addEventListener(\"keydown\", listener);\r\n\r\n        if (!userId) {\r\n            history.push('/login')\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", listener);\r\n        };\r\n    }, [userId, history])\r\n\r\n    const verify = async () => {\r\n        if (!code.length) {\r\n            setError(1)\r\n            setMessage('confirmation code is empty')\r\n            return\r\n        }\r\n        setIsLoading(true)\r\n        const res = await auth.authUser.verify(userId, code)\r\n        setIsLoading(false)\r\n        if (res.verify) {\r\n            const userInfo = {\r\n                email: res.user_email,\r\n                role: res.is_admin ? 'forward_test,stress_test,optimization,live_trade,market_watch,trade_data' : res.role,\r\n                is_admin: res.is_admin,\r\n            }\r\n            localStorage.setItem('user-info', JSON.stringify(userInfo))\r\n            localStorage.setItem('auth-token', JSON.stringify(res.token))\r\n            history.push('/');\r\n        } else {\r\n            setError(1)\r\n            setMessage(res.error)\r\n            return\r\n        }\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setError(-1);\r\n        setMessage('');\r\n    }\r\n\r\n    return (\r\n        <div className={\"login-form\"}>\r\n            <div>\r\n\r\n                <h3>Verify</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Verify Code</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control hunter-form-control\"\r\n                        placeholder=\"Enter verify code\"\r\n                        value={code}\r\n                        onChange={(e) => { handleCodeChange(e)}}\r\n                    />\r\n                </div>\r\n\r\n                <button\r\n                    className=\"btn btn-dark btn-lg btn-block hunter-signin-button\"\r\n                    onClick={verify}\r\n                >\r\n                    {isLoading && (\r\n                        <span className=\"spinner-border spinner-border-sm hunter-spinner-button\" role=\"status\" aria-hidden=\"true\"></span>\r\n                    )}\r\n                    Verify\r\n                </button>\r\n            </div>\r\n            {error !== -1 &&\r\n                <div class=\"alert alert-primary\" role=\"alert\">\r\n                    <div className=\"alert-container\">\r\n                        <div className=\"alert-content\">\r\n                            {message}\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary modal-close-button hunter-modal-small-button\" onClick={() => { handleModalClose() }}>Close</button>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Verify","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport Select from 'react-select'\r\nimport { Link } from \"react-router-dom\";\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport {\r\n  Collapse,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  NavLink,\r\n  Nav,\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\nimport Pagination from 'react-bootstrap/Pagination'\r\nimport { useAuth } from 'contexts/authContext';\r\nimport { getFloatsDetails, getFloatsFilterOptions } from 'api/Api'\r\nimport \"./FloatsComponent.css\"\r\n\r\nimport { useCsvDownloadUpdate } from \"contexts/CsvDownloadContext\";\r\nimport ButtonCsvDownload from 'components/ButtonCsvDownload'\r\nimport { useDatatable, useDatatableLoading } from \"contexts/DatatableContext\";\r\nimport Spinner from \"components/Spinner\";\r\n\r\nconst FloatsComponent = () => {\r\n  const auth = useAuth();\r\n  const history = useHistory();\r\n  const [collapseOpen,] = React.useState(false)\r\n  const [exchange, setExchange] = React.useState(null)\r\n  const [sector, setSector] = useState(null);\r\n  const [industry, setIndustry] = useState(null);\r\n  const [pageAmount, setPageAmount] = useState(10)\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [wholeRows, setWholeRows] = useState(0);\r\n  const [optionsExchange, setOptionsExchanges] = useState([])\r\n  const [optionsSector, setOptionsSector] = useState([])\r\n  const [optionsIndustry, setOptionsIndustry] = useState([])\r\n  const [isLoadingData, setLoadingData] = useDatatableLoading()\r\n\r\n  const hearder_columns = useMemo(() => {\r\n    return [\r\n    {\r\n      label: 'Industry',\r\n      field: 'Industry',\r\n      attributes: {\r\n        'aria-controls': 'DataTable',\r\n        'aria-label': 'symbol',\r\n      },\r\n    },\r\n    {\r\n      label: 'Symbol',\r\n      field: 'Symbol',\r\n    },\r\n    {\r\n      label: 'AssetType',\r\n      field: 'AssetType',\r\n    },\r\n    {\r\n      label: 'Name',\r\n      field: 'Name',\r\n    },\r\n    {\r\n      label: 'SharesFloat',\r\n      field: 'SharesFloat',\r\n    },\r\n    {\r\n      label: 'ShortPercentFloat',\r\n      field: 'ShortPercentFloat',\r\n    },\r\n    {\r\n      label: 'Description',\r\n      field: 'Description',\r\n    },\r\n    {\r\n      label: 'CIK',\r\n      field: 'CIK',\r\n    },\r\n    {\r\n      label: 'Exchange',\r\n      field: 'Exchange',\r\n    },\r\n    {\r\n      label: 'Currency',\r\n      field: 'Currency',\r\n    },\r\n    {\r\n      label: 'Country',\r\n      field: 'Country',\r\n    },\r\n    {\r\n      label: 'Sector',\r\n      field: 'Sector',\r\n    },\r\n    {\r\n      label: 'Address',\r\n      field: 'Address',\r\n    },\r\n    {\r\n      label: 'FiscalYearEnd',\r\n      field: 'FiscalYearEnd',\r\n    },\r\n    {\r\n      label: 'LatestQuarter',\r\n      field: 'LatestQuarter',\r\n    },\r\n    {\r\n      label: 'MarketCapitalization',\r\n      field: 'MarketCapitalization',\r\n    },\r\n    {\r\n      label: 'EBITDA',\r\n      field: 'EBITDA',\r\n    },\r\n    {\r\n      label: 'PERatio',\r\n      field: 'PERatio',\r\n    },\r\n    {\r\n      label: 'PEGRatio',\r\n      field: 'PEGRatio',\r\n    },\r\n    {\r\n      label: 'BookValue',\r\n      field: 'BookValue',\r\n    },\r\n    {\r\n      label: 'DividendPerShare',\r\n      field: 'DividendPerShare',\r\n    },\r\n    {\r\n      label: 'DividendYield',\r\n      field: 'DividendYield',\r\n    },\r\n    {\r\n      label: 'EPS',\r\n      field: 'EPS',\r\n    },\r\n    {\r\n      label: 'RevenuePerShareTTM',\r\n      field: 'RevenuePerShareTTM',\r\n    },\r\n    {\r\n      label: 'ProfitMargin',\r\n      field: 'ProfitMargin',\r\n    },\r\n    {\r\n      label: 'OperatingMarginTTM',\r\n      field: 'OperatingMarginTTM',\r\n    },\r\n    {\r\n      label: 'ReturnOnAssetsTTM',\r\n      field: 'ReturnOnAssetsTTM',\r\n    },\r\n    {\r\n      label: 'ReturnOnEquityTTM',\r\n      field: 'ReturnOnEquityTTM',\r\n    },\r\n    {\r\n      label: 'RevenueTTM',\r\n      field: 'RevenueTTM',\r\n    },\r\n    {\r\n      label: 'GrossProfitTTM',\r\n      field: 'GrossProfitTTM',\r\n    },\r\n    {\r\n      label: 'DilutedEPSTTM',\r\n      field: 'DilutedEPSTTM',\r\n    },\r\n    {\r\n      label: 'QuarterlyEarningsGrowthYOY',\r\n      field: 'QuarterlyEarningsGrowthYOY',\r\n    },\r\n    {\r\n      label: 'AnalystTargetPrice',\r\n      field: 'AnalystTargetPrice',\r\n    },\r\n    {\r\n      label: 'TrailingPE',\r\n      field: 'TrailingPE',\r\n    },\r\n    {\r\n      label: 'ForwardPE',\r\n      field: 'ForwardPE',\r\n    },\r\n    {\r\n      label: 'PriceToSalesRatioTTM',\r\n      field: 'PriceToSalesRatioTTM',\r\n    },\r\n    {\r\n      label: 'PriceToBookRatio',\r\n      field: 'PriceToBookRatio',\r\n    },\r\n    {\r\n      label: 'EVToRevenue',\r\n      field: 'EVToRevenue',\r\n    },\r\n    {\r\n      label: 'EVToEBITDA',\r\n      field: 'EVToEBITDA',\r\n    },\r\n    {\r\n      label: 'Beta',\r\n      field: 'Beta',\r\n    },\r\n    {\r\n      label: '52WeekHigh',\r\n      field: '52WeekHigh',\r\n    },\r\n    {\r\n      label: '50DayMovingAverage',\r\n      field: '50DayMovingAverage',\r\n    },\r\n    {\r\n      label: '200DayMovingAverage',\r\n      field: '200DayMovingAverage',\r\n    },\r\n    {\r\n      label: 'SharesOutstanding',\r\n      field: 'SharesOutstanding',\r\n    },\r\n    {\r\n      label: 'SharesShort',\r\n      field: 'SharesShort',\r\n    },\r\n    {\r\n      label: 'SharesShortPriorMonth',\r\n      field: 'SharesShortPriorMonth',\r\n    },\r\n    {\r\n      label: 'ShortRatio',\r\n      field: 'ShortRatio',\r\n    },\r\n    {\r\n      label: 'ShortPercentOutstanding',\r\n      field: 'ShortPercentOutstanding',\r\n    },\r\n    {\r\n      label: 'PercentInsiders',\r\n      field: 'PercentInsiders',\r\n    },\r\n    {\r\n      label: 'PercentInstitutions',\r\n      field: 'PercentInstitutions',\r\n    },\r\n    {\r\n      label: 'ForwardAnnualDividendRate',\r\n      field: 'ForwardAnnualDividendRate',\r\n    },\r\n    {\r\n      label: 'ForwardAnnualDividendYield',\r\n      field: 'ForwardAnnualDividendYield',\r\n    },\r\n    {\r\n      label: 'PayoutRatio',\r\n      field: 'PayoutRatio',\r\n    },\r\n    {\r\n      label: 'DividendDate',\r\n      field: 'DividendDate',\r\n    },\r\n    {\r\n      label: 'ExDividendDate',\r\n      field: 'ExDividendDate',\r\n    },\r\n    {\r\n      label: 'LastSplitFactor',\r\n      field: 'LastSplitFactor',\r\n    },\r\n    {\r\n      label: 'LastSplitDate',\r\n      field: 'LastSplitDate',\r\n    },\r\n  ]}, [])\r\n\r\n  const [datatable, setDatatable] = useDatatable({\r\n    columns: hearder_columns,\r\n    rows: [],\r\n  });\r\n\r\n  const updateCsvDownload = useCsvDownloadUpdate();\r\n\r\n  const wrapSetDatatable = (data) => {\r\n    setDatatable(data)\r\n    updateCsvDownload([...data.rows])\r\n  }\r\n\r\n\r\n\r\n  const loadFloatDetails = async (pageNum) => {\r\n    setLoadingData(true)\r\n    const floatDetails = await getFloatsDetails(pageNum, pageAmount)\r\n\r\n    if (floatDetails) {\r\n      setWholeRows(floatDetails.page_total)\r\n      wrapSetDatatable({\r\n        columns: hearder_columns,\r\n        rows: floatDetails.floats,\r\n      })\r\n    }\r\n\r\n    setLoadingData(false)\r\n  }\r\n\r\n  const loadFloatsFilterOption = async () => {\r\n    const scannerOptions = await getFloatsFilterOptions()\r\n    if (scannerOptions.success) {\r\n      const exchanges = [{\r\n        value: '',\r\n        label: 'All'\r\n      }]\r\n      scannerOptions.result.exchanges.map(exchange => {\r\n        if (exchange === '') {\r\n          return null\r\n        }\r\n        exchanges.push({\r\n          value: exchange,\r\n          label: exchange\r\n        })\r\n      })\r\n\r\n      const industries = [{\r\n        value: '',\r\n        label: 'All'\r\n      }]\r\n\r\n      scannerOptions.result.industry.map(industry => {\r\n        if (industry !== '' && industry !== null) {\r\n          industries.push({\r\n            value: industry,\r\n            label: industry\r\n          })\r\n        }\r\n      })\r\n\r\n      const sectors = [{\r\n        value: '',\r\n        label: 'All'\r\n      }]\r\n      scannerOptions.result.sector.forEach(sector => {\r\n        if (sector !== '' && sector !== null) {\r\n          sectors.push({\r\n            value: sector,\r\n            label: sector\r\n          })\r\n        }\r\n      })\r\n\r\n      setOptionsExchanges(exchanges)\r\n      setOptionsIndustry(industries)\r\n      setOptionsSector(sectors)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadFloatDetails(currentPage)\r\n    loadFloatsFilterOption()\r\n  }, [])\r\n\r\n  const handleSignout = () => {\r\n    auth.signout()\r\n    history.push('/login')\r\n  }\r\n\r\n  const handlePrevClick = () => {\r\n    setCurrentPage(currentPage - 1)\r\n    loadFloatDetails(currentPage - 1)\r\n  }\r\n\r\n  const handleNextClick = () => {\r\n    setCurrentPage(currentPage + 1)\r\n    loadFloatDetails(currentPage + 1)\r\n  }\r\n\r\n  const handleSectorChange = async (e) => {\r\n    setLoadingData(true)\r\n    setSector(e)\r\n\r\n    const floatDetails = await getFloatsDetails(currentPage, pageAmount, exchange ? exchange.value : '', industry ? industry.value : '', e.value)\r\n\r\n    if (floatDetails) {\r\n      setWholeRows(floatDetails.page_total)\r\n      wrapSetDatatable({\r\n        columns: hearder_columns,\r\n        rows: floatDetails.floats,\r\n      })\r\n    }\r\n    setLoadingData(false)\r\n  }\r\n\r\n  const handleExchangeChange = async (e) => {\r\n    setLoadingData(true)\r\n    setExchange(e)\r\n\r\n    const floatDetails = await getFloatsDetails(currentPage, pageAmount, e.value, industry ? industry.value : '', sector ? sector.value : '')\r\n\r\n    if (floatDetails) {\r\n      setWholeRows(floatDetails.page_total)\r\n      wrapSetDatatable({\r\n        columns: hearder_columns,\r\n        rows: floatDetails.floats,\r\n      })\r\n    }\r\n    setLoadingData(false)\r\n  }\r\n\r\n  const handleIndustryChange = async (e) => {\r\n    setLoadingData(true)\r\n    setIndustry(e)\r\n\r\n    const floatDetails = await getFloatsDetails(currentPage, pageAmount, exchange ? exchange.value : '', e.value, sector ? sector.value : '')\r\n    setWholeRows(floatDetails.page_total)\r\n    wrapSetDatatable({\r\n      columns: hearder_columns,\r\n      rows: floatDetails.floats,\r\n    })\r\n    setLoadingData(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"hunter-chart-container\">\r\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark hunter-nav-bar\">\r\n        <div className=\"logo-title\">\r\n          <a href=\"/chart\" className=\"hunter-navbar-brand\">\r\n            Violette AM - Client Portal\r\n          </a>\r\n        </div>\r\n        <div className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to={\"/chart\"} className=\"nav-link\"></Link>\r\n          </li>\r\n        </div>\r\n        <Collapse navbar isOpen={collapseOpen}>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <UncontrolledDropdown nav>\r\n              <DropdownToggle\r\n                caret\r\n                color=\"default\"\r\n                nav\r\n                onClick={(e) => e.preventDefault()}\r\n              >\r\n                <div className=\"photo\">\r\n                  <img\r\n                    alt=\"...\"\r\n                    src={require(\"assets/img/anime3.png\").default}\r\n                  />\r\n                </div>\r\n                <p className=\"d-lg-none\">Log out</p>\r\n              </DropdownToggle>\r\n              <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\r\n                <DropdownItem divider tag=\"li\" />\r\n                <NavLink tag=\"li\">\r\n                  <DropdownItem className=\"nav-item\" onClick={() => {handleSignout()}}>Log out</DropdownItem>\r\n                </NavLink>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            <li className=\"separator d-lg-none\" />\r\n          </Nav>\r\n        </Collapse>\r\n      </nav>\r\n      <div className=\"col-sm-12 hunter-data-table-container scanner-page-container\">\r\n        <div className=\"hunter-data-table-title\">\r\n          Floats Table\r\n        </div>\r\n        <div className=\"hunter-search-filter-area\">\r\n          <div className=\"select-option\">\r\n            <Select\r\n              value={exchange}\r\n              onChange={handleExchangeChange}\r\n              options={optionsExchange}\r\n              placeholder=\"Exchange\"\r\n            />\r\n          </div>\r\n          <div className=\"select-option\">\r\n            <Select\r\n              value={sector}\r\n              onChange={handleSectorChange}\r\n              options={optionsSector}\r\n              placeholder=\"Sector\"\r\n            />\r\n          </div>\r\n          <div className=\"select-option\">\r\n            <Select\r\n              value={industry}\r\n              onChange={handleIndustryChange}\r\n              options={optionsIndustry}\r\n              placeholder=\"Industry\"\r\n            />\r\n          </div>\r\n          <ButtonCsvDownload filename={\"floats.csv\"}>Csv Download</ButtonCsvDownload>\r\n        </div>\r\n        {isLoadingData && <div className=\"hunter-spinner-area\"><span className=\"mr-30\">Loading ...</span>    <Spinner>Loading</Spinner></div>}\r\n        {!isLoadingData &&\r\n        <>\r\n          <MDBTable\r\n            hover\r\n            small={true}\r\n            maxHeight=\"500px\"\r\n            entries={10}\r\n            data={datatable}\r\n            dark={true}\r\n            small={true}\r\n            scrollY={true}\r\n          >\r\n            <MDBTableHead  className=\"watch-list-data-table-header\">\r\n              <tr>\r\n                {hearder_columns.map((item) => (\r\n                  <th key={item.label} className={`hunter-custom-table-floats-chart-th`}>{item.label}</th>\r\n                ))}\r\n              </tr>\r\n            </MDBTableHead>\r\n            <MDBTableBody\r\n                className={\"financial-table-body-1\"}\r\n              >\r\n              {datatable.rows.map((item) => (\r\n                <tr key={`row-${item.symbol}`}>\r\n                  {hearder_columns.map((column) =>\r\n                    (\r\n                      <td\r\n                        key={`${item.symbol}-${column.field}`}\r\n                        className={`${column.field === 'Description' ? 'hunter-custom-table-description-td' : ''} hunter-custom-table-td`}\r\n                      >\r\n                        {item[column.field]}\r\n                      </td>\r\n                    )\r\n                  )}\r\n                </tr>\r\n              ))}\r\n            </MDBTableBody>\r\n          </MDBTable>\r\n          <Pagination>\r\n            <Pagination.Item>{(currentPage-1)*10 + 1}</Pagination.Item>\r\n            <Pagination.Item>{(currentPage) * 10}</Pagination.Item>\r\n            <Pagination.Item> of </Pagination.Item>\r\n            <Pagination.Item> { wholeRows } </Pagination.Item>\r\n            <Pagination.Prev disabled={currentPage <= 0} onClick={() => { handlePrevClick() }}/>\r\n            <Pagination.Next disabled={(currentPage + 1) >= wholeRows / 10} onClick={() => { handleNextClick() }}/>\r\n          </Pagination>\r\n        </>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FloatsComponent;\r\n","import React from \"react\";\r\nimport {\r\n  Button\r\n} from \"reactstrap\";\r\n\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\nimport FloatsComponent from 'components/Floats/FloatsComponent.js'\r\nimport { CsvDownloadProvider } from \"contexts/CsvDownloadContext\";\r\n\r\nimport { routes } from \"routes.js\";\r\n\r\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\r\n\r\nfunction Floats() {\r\n  const [isShowSidebar, setShowSidebar] = React.useState(false);\r\n  const [selectedInstance, setSelectedInstance] = React.useState('floats');\r\n\r\n  const handleSidebarChange = () => {\r\n    setShowSidebar(!isShowSidebar);\r\n  };\r\n\r\n  const handleInstanceChange = (instance) => {\r\n    setSelectedInstance(instance)\r\n  }\r\n\r\n  return (\r\n    <BackgroundColorContext.Consumer>\r\n      {({ color }) => (\r\n        <React.Fragment>\r\n          <div className=\"wrapper hunter-wrapper\">\r\n            {!isShowSidebar && (\r\n              <Button\r\n                className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\r\n                onClick={handleSidebarChange}\r\n              >\r\n                <i className=\"tim-icons icon-align-left-2\"/>\r\n              </Button>\r\n            )}\r\n            {isShowSidebar && (\r\n              <Sidebar\r\n                isAdminPage={false}\r\n                routes={routes}\r\n                subInstance={'tradedatatable'}\r\n                selectedInstance={selectedInstance}\r\n                handleSidebarChange={handleSidebarChange}\r\n                handleInstanceChange={handleInstanceChange}\r\n              />\r\n            )}\r\n            <div className=\"col-sm-12\">\r\n              <CsvDownloadProvider>\r\n                <FloatsComponent />\r\n              </CsvDownloadProvider>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </BackgroundColorContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default Floats;","import React, { useState } from \"react\";\r\nimport { validateEmail } from 'utils/helper'\r\nimport { forgotPassword } from 'api/Api'\r\n\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState('')\r\n  const [error, setError] = useState(-1)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n    \r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value)\r\n  }\r\n    \r\n  const handleForgotPassword = async () => {\r\n    if (!validateEmail(email)) {\r\n      setError(1)\r\n      setMessage('Invalid Email!')\r\n      return\r\n    }\r\n    setIsLoading(true)\r\n    let result = await forgotPassword(email)\r\n    setIsLoading(false)\r\n    if ( result.success ) {\r\n      setError(0)\r\n      setMessage('Password is sent to your email')\r\n      return\r\n    }\r\n    setError(1)\r\n    setMessage('Invalid Email!')\r\n    return\r\n  }\r\n\r\n  const handleModalClose = () => {\r\n    setError(-1);\r\n    setMessage('');\r\n  }\r\n\r\n  return (\r\n    <div className={\"login-form\"}>\r\n      <div>\r\n        <h3 className=\"hunter-mb-3\">Forgot Password</h3>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Email</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control hunter-form-control\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => { handleEmailChange(e)}}\r\n          />\r\n        </div>\r\n          <button\r\n            className=\"btn btn-dark btn-lg btn-block hunter-signin-button\"\r\n            onClick={handleForgotPassword}\r\n          >\r\n            {isLoading && (\r\n                <span className=\"spinner-border spinner-border-sm hunter-spinner-button\" role=\"status\" aria-hidden=\"true\"></span>\r\n            )}\r\n            Send\r\n          </button>\r\n          <div className=\"form-group\">\r\n            <p className=\"sign-up-area text-right\">\r\n                <a href=\"/signin\">Sign In?</a>\r\n            </p>\r\n          </div>\r\n      </div>\r\n      {error !== -1 && \r\n        <div class=\"alert alert-primary\" role=\"alert\">\r\n          <div className=\"alert-container\">\r\n            <div className=\"alert-content\">\r\n              {message}\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-primary modal-close-button hunter-modal-small-button\" onClick={() => { handleModalClose() }}>Close</button>\r\n          </div>\r\n        </div>   \r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword","import React, { useState } from \"react\";\r\nimport { passwordConfirmReset } from 'api/Api'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst PasswordResetConfirm = () => {\r\n  let history = useHistory();\r\n  const [password1, setPassword1] = useState('')\r\n  const [password2, setPassword2] = useState('')\r\n  const [error, setError] = useState(-1)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n\r\n  const [pathname] = useState(history.location.pathname)\r\n\r\n  const handlePassword1Change = (e) => {\r\n    setPassword1(e.target.value)\r\n  }\r\n  \r\n  const handlePassword2Change = (e) => {\r\n    setPassword2(e.target.value)\r\n  }\r\n  \r\n  const delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\n  const handlePasswordResetConfirm = async () => {\r\n    if (!password1.length || !password2.length) {\r\n      setError(1)\r\n      setMessage('password is empty')\r\n      return\r\n    }\r\n\r\n    if (!password1.length || !password2.length) { \r\n        setError(1)\r\n        setMessage('password did not match')\r\n        return    \r\n    }\r\n\r\n    setIsLoading(true)\r\n    const res = await passwordConfirmReset(password1, password2, pathname)\r\n    setIsLoading(false)\r\n    setError(0)\r\n    if (res.success) {\r\n      setMessage(`success: ${res.content}`)  \r\n      await delay(3000);\r\n      history.push('/login')\r\n    } else {\r\n      setMessage(`error: ${res.content}`)  \r\n    }\r\n    return\r\n  }\r\n\r\n  const handleModalClose = () => {\r\n    setError(-1);\r\n    setMessage('');\r\n  }\r\n\r\n  return (\r\n    <div className={\"login-form\"}>\r\n      <div>\r\n        <h3 className=\"hunter-mb-3\">Forgot Password</h3>\r\n\r\n        <div className=\"form-group\">\r\n          <label>New Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control hunter-form-control\"\r\n            placeholder=\"Enter new password\"\r\n            value={password1}\r\n            onChange={(e) => { handlePassword1Change(e)}}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control hunter-form-control\"\r\n            placeholder=\"Enter confirm password\"\r\n            value={password2}\r\n            onChange={(e) => { handlePassword2Change(e)}}\r\n          />\r\n        </div>\r\n        <button\r\n          className=\"btn btn-dark btn-lg btn-block hunter-signin-button\"\r\n          onClick={handlePasswordResetConfirm}\r\n        >\r\n          {isLoading && (\r\n              <span className=\"spinner-border spinner-border-sm hunter-spinner-button\" role=\"status\" aria-hidden=\"true\"></span>\r\n          )}\r\n          Reset\r\n        </button>\r\n        <div className=\"form-group\">\r\n          <p className=\"sign-up-area text-right\">\r\n            <a href=\"/signin\">Sign In?</a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      {error !== -1 && \r\n        <div class=\"alert alert-primary\" role=\"alert\">\r\n          <div className=\"alert-container\">\r\n            <div className=\"alert-content\">\r\n              {message}\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-primary modal-close-button hunter-modal-small-button\" onClick={() => { handleModalClose() }}>Close</button>\r\n          </div>\r\n        </div>   \r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PasswordResetConfirm","import { isNotDefined, isDefined } from \"react-stockcharts/lib/utils\";\r\n\r\nexport function saveInteractiveNode(chartId) {\r\n\treturn node => {\r\n\t\tthis[`node_${chartId}`] = node;\r\n\t};\r\n}\r\n\r\nexport function handleSelection(type, chartId) {\r\n\treturn selectionArray => {\r\n\t\tconst key = `${type}_${chartId}`;\r\n\t\tconst interactive = this.state[key].map((each, idx) => {\r\n\t\t\treturn {\r\n\t\t\t\t...each,\r\n\t\t\t\tselected: selectionArray[idx]\r\n\t\t\t};\r\n\t\t});\r\n\t\tthis.setState({\r\n\t\t\t[key]: interactive\r\n\t\t});\r\n\t};\r\n}\r\n\r\nexport function saveInteractiveNodes(type, chartId) {\r\n\treturn node => {\r\n\t\tif (isNotDefined(this.interactiveNodes)) {\r\n\t\t\tthis.interactiveNodes = {};\r\n\t\t}\r\n\t\tconst key = `${type}_${chartId}`;\r\n\t\tif (isDefined(node) || isDefined(this.interactiveNodes[key])) {\r\n\t\t\t// console.error(node, key)\r\n\t\t\t// console.log(this.interactiveNodes)\r\n\t\t\tthis.interactiveNodes = {\r\n\t\t\t\t...this.interactiveNodes,\r\n\t\t\t\t[key]: { type, chartId, node },\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport function getInteractiveNodes() {\r\n\treturn this.interactiveNodes;\r\n}","\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { format } from \"d3-format\";\r\nimport { timeFormat } from \"d3-time-format\";\r\nimport dayjs from \"dayjs\";\r\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\r\nimport {\r\n\tBarSeries,\r\n} from \"react-stockcharts/lib/series\";\r\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\r\nimport {\r\n\tCrossHairCursor,\r\n\tMouseCoordinateX,\r\n\tMouseCoordinateY,\r\n} from \"react-stockcharts/lib/coordinates\";\r\n\r\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\r\nimport { ema, macd } from \"react-stockcharts/lib/indicator\";\r\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\r\nimport { DrawingObjectSelector } from \"react-stockcharts/lib/interactive\";\r\nimport { last, toObject } from \"react-stockcharts/lib/utils\";\r\nimport {\r\n\tsaveInteractiveNodes,\r\n\tgetInteractiveNodes,\r\n} from \"./interactiveutils\";\r\n\r\nclass CandleStickChartWithEquidistantChannel extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.onKeyPress = this.onKeyPress.bind(this);\r\n\t\t// this.onDrawComplete = this.onDrawComplete.bind(this);\r\n\t\tthis.saveInteractiveNode = this.saveInteractiveNode.bind(this);\r\n\t\tthis.saveCanvasNode = this.saveCanvasNode.bind(this);\r\n\t\tthis.handleSelection = this.handleSelection.bind(this);\r\n\r\n\t\tthis.saveInteractiveNodes = saveInteractiveNodes.bind(this);\r\n\t\tthis.getInteractiveNodes = getInteractiveNodes.bind(this);\r\n\r\n\t\tthis.state = {\r\n\t\t\tenableInteractiveObject: true,\r\n\t\t\tchannels_1: [],\r\n\t\t\tchannels_3: [],\r\n\t\t};\r\n\t}\r\n\tsaveInteractiveNode(node) {\r\n\t\tthis.node = node;\r\n\t}\r\n\tsaveCanvasNode(node) {\r\n\t\tthis.canvasNode = node;\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tdocument.addEventListener(\"keyup\", this.onKeyPress);\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tdocument.removeEventListener(\"keyup\", this.onKeyPress);\r\n\t}\r\n\thandleSelection(interactives) {\r\n\t\tconst state = toObject(interactives, each => {\r\n\t\t\treturn [\r\n\t\t\t\t`channels_${each.chartId}`,\r\n\t\t\t\teach.objects,\r\n\t\t\t];\r\n\t\t});\r\n\t\tthis.setState(state);\r\n\t}\r\n\t// onDrawComplete(channels_1) {\r\n\t// \t// this gets called on\r\n\t// \t// 1. draw complete of drawing object\r\n\t// \t// 2. drag complete of drawing object\r\n\t// \tthis.setState({\r\n\t// \t\tenableInteractiveObject: false,\r\n\t// \t\tchannels_1\r\n\t// \t});\r\n\t// }\r\n\tonKeyPress(e) {\r\n\t}\r\n\trender() {\r\n\t\tconst ema26 = ema()\r\n\t\t\t.id(0)\r\n\t\t\t.options({ windowSize: 26 })\r\n\t\t\t.merge((d, c) => { d.ema26 = c; })\r\n\t\t\t.accessor(d => d.ema26);\r\n\r\n\t\tconst ema12 = ema()\r\n\t\t\t.id(1)\r\n\t\t\t.options({ windowSize: 12 })\r\n\t\t\t.merge((d, c) => {d.ema12 = c;})\r\n\t\t\t.accessor(d => d.ema12);\r\n\r\n\t\tconst macdCalculator = macd()\r\n\t\t\t.options({\r\n\t\t\t\tfast: 12,\r\n\t\t\t\tslow: 26,\r\n\t\t\t\tsignal: 9,\r\n\t\t\t})\r\n\t\t\t.merge((d, c) => {d.macd = c;})\r\n\t\t\t.accessor(d => d.macd);\r\n\r\n\t\tconst { type, data: initialData, width, ratio } = this.props;\r\n    initialData.dataPoints.forEach(line => {\r\n\t\t\tline.date = dayjs(line.calendarDate).toDate();\r\n\t\t});\r\n\t\tconst { channels_1, channels_3 } = this.state;\r\n\r\n\t\tconst calculatedData = macdCalculator(ema12(ema26(initialData.dataPoints)));\r\n\t\tconst xScaleProvider = discontinuousTimeScaleProvider\r\n\t\t\t.inputDateAccessor(d => d.date);\r\n\t\tconst {\r\n\t\t\tdata,\r\n\t\t\txScale,\r\n\t\t\txAccessor,\r\n\t\t\tdisplayXAccessor,\r\n\t\t} = xScaleProvider(calculatedData);\r\n\r\n\t\tconst start = xAccessor(last(data));\r\n\t\tconst end = xAccessor(data[Math.max(0, data.length - 150)]);\r\n\t\tconst xExtents = [start, end];\r\n\r\n\t\treturn (\r\n\t\t\t<ChartCanvas ref={this.saveCanvasNode}\r\n\t\t\t\theight={50}\r\n\t\t\t\twidth={width}\r\n\t\t\t\tratio={ratio}\r\n\t\t\t\tmargin={{ left: 0, right: 0, top: 20, bottom: 30 }}\r\n\t\t\t\ttype={type}\r\n\t\t\t\tseriesName=\"MSFT\"\r\n\t\t\t\tdata={data}\r\n\t\t\t\txScale={xScale}\r\n\t\t\t\txAccessor={xAccessor}\r\n\t\t\t\tdisplayXAccessor={displayXAccessor}\r\n\t\t\t\txExtents={xExtents}\r\n\t\t\t>\r\n\t\t\t\t\r\n\t\t\t\t<Chart id={3} height={50}\r\n\t\t\t\t\tyExtents={[d => d.value]}\r\n\t\t\t\t\t// origin={(w, h) => [0, h - 300]}\r\n\t\t\t\t>\r\n\t\t\t\t\t{/* <XAxis axisAt=\"bottom\" orient=\"bottom\"/>\r\n\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" ticks={5} tickFormat={format(\".2s\")}/> */}\r\n\r\n          \t\t\t{/* <MouseCoordinateX\r\n\t\t\t\t\t\tat=\"bottom\"\r\n\t\t\t\t\t\torient=\"bottom\"\r\n\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\r\n\t\t\t\t\t<MouseCoordinateY\r\n\t\t\t\t\t\tat=\"left\"\r\n\t\t\t\t\t\torient=\"left\"\r\n\t\t\t\t\t\tdisplayFormat={format(\".4s\")} /> */}\r\n\r\n\t\t\t\t\t<BarSeries yAccessor={d => d.value} fill={d => initialData.color} baseAt={(xScale, yScale, d) => yScale(0)} />\r\n\t\t\t\t</Chart>\r\n\t\t\t\t\t{/* <CrossHairCursor /> */}\r\n\t\t\t\t\t{/* <DrawingObjectSelector\r\n\t\t\t\t\t\tenabled={!this.state.enableInteractiveObject}\r\n\t\t\t\t\t\tgetInteractiveNodes={this.getInteractiveNodes}\r\n\t\t\t\t\t\tdrawingObjectMap={{\r\n\t\t\t\t\t\t\tEquidistantChannel: \"channels\"\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonSelect={this.handleSelection}\r\n\t\t\t\t\t/> */}\r\n\t\t\t</ChartCanvas>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nCandleStickChartWithEquidistantChannel.propTypes = {\r\n\tdata: PropTypes.array.isRequired,\r\n\twidth: PropTypes.number.isRequired,\r\n\tratio: PropTypes.number.isRequired,\r\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\r\n};\r\n\r\nCandleStickChartWithEquidistantChannel.defaultProps = {\r\n\ttype: \"svg\",\r\n};\r\n\r\nCandleStickChartWithEquidistantChannel = fitWidth(CandleStickChartWithEquidistantChannel);\r\n\r\nexport default CandleStickChartWithEquidistantChannel;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Chart from './Chart';\r\nimport './SmallBarChart.css'\r\n\r\nconst GroupBarChart = (props) => {\r\n  const { data, chartData, globalAggregationType } = props;\r\n\r\n  const [aggregationTypeForOne, setAggregrationTypeForOne] = useState();\r\n  const [currentData, setCurrentData] = useState();\r\n\r\n  const filterByAggregationTyoe = (selectedData) => {\r\n    if (selectedData) {\r\n      let filteredData = {...selectedData};\r\n      const dataPoints = filteredData.dataPoints.filter(\r\n        (item) => aggregationTypeForOne === \"\" || item.period === aggregationTypeForOne\r\n      );\r\n      filteredData['dataPoints'] = dataPoints;\r\n      return filteredData;\r\n    }\r\n    return selectedData;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setAggregrationTypeForOne(globalAggregationType);\r\n    const filteredSelectedData = filterByAggregationTyoe(data);\r\n    setCurrentData(filteredSelectedData);\r\n  }, [globalAggregationType]);\r\n\r\n  useEffect(() => {\r\n    const filteredSelectedData = filterByAggregationTyoe(data);\r\n    setCurrentData(filteredSelectedData);\r\n  }, [aggregationTypeForOne]);\r\n\r\n  return (\r\n    <div className=\"small-bar-chart\">\r\n      {currentData && (\r\n        currentData.dataPoints.length > 0 ? (\r\n          <Chart type={'svg'} data={currentData} />\r\n        ) : (\r\n          <div className=\"no-data\">No data...</div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupBarChart;\r\n","import \"./style.css\";\r\nimport Select from 'react-select';\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst CustomDropDown = (props) => {\r\n  const { nodes, onChange, inputvalue } = props;\r\n  const [options, setOptions] = useState();\r\n  const [selectedNode, setSelectedNode] = useState();\r\n\r\n  useEffect(() => {\r\n    let nodeOptions = [{\r\n      label: \"All\",\r\n      value: \"All\",\r\n    }];\r\n    nodes.map((node) => {\r\n      if (\"children\" in node) {\r\n        node.children.map((child) => {\r\n          nodeOptions.push({\r\n            value: child.value,\r\n            label: child.label,\r\n          });\r\n        })\r\n      }\r\n    });\r\n\r\n    setOptions(nodeOptions);\r\n\r\n  }, [nodes]);\r\n\r\n  return (\r\n    <div className=\"dropdown-container\">\r\n      <Select\r\n        ref={inputvalue}\r\n        value={selectedNode}\r\n        onChange={onChange}\r\n        options={options}\r\n        className=\"modal-filter-select-box\"\r\n        placeholder=\"\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomDropDown;\r\n","import React from \"react\";\r\nimport CheckboxTree from \"react-checkbox-tree\";\r\nimport { cloneDeep } from 'lodash';\r\nimport CustomDropDown from \"./dropDown\";\r\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\r\nimport \"./style.css\";\r\n\r\nclass Widget extends React.Component {\r\n  state = {\r\n    checkedAvailableItem: [],\r\n    expandedAvailableItem: [],\r\n    selectedNode: {\r\n      value: \"\",\r\n      label: \"\",\r\n    },\r\n    nodesFilteredAvailableItem: [],\r\n    nodesAvailableItem: [],\r\n\r\n    restoreAvailableItems: [],\r\n    restoreCurrentItems: this.props.currentNodes,\r\n    \r\n    checkedCurrrentItem: [],\r\n    expandedCurrrentItem: [],\r\n    currentNodes: this.props.currentNodes,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.onCheckAvailableItem = this.onCheckAvailableItem.bind(this);\r\n    this.onExpandAvailableItem = this.onExpandAvailableItem.bind(this);\r\n    this.onFilterChangeAvailableItem = this.onFilterChangeAvailableItem.bind(this);\r\n\r\n    this.onCheckCurrentItem = this.onCheckCurrentItem.bind(this);\r\n    this.onExpandCurrentItem = this.onExpandCurrentItem.bind(this);\r\n\r\n    this.onAddItems = this.onAddItems.bind(this);\r\n    this.onRemoveItems = this.onRemoveItems.bind(this);\r\n    this.onLoadDefaults = this.onLoadDefaults.bind(this);\r\n\r\n    this.onMoveUp = this.onMoveUp.bind(this);\r\n    this.onMoveDown = this.onMoveDown.bind(this);\r\n\r\n    this.onRestoreClicked = this.onRestoreClicked.bind(this);\r\n    this.onOkClicked = this.onOkClicked.bind(this);\r\n    this.onCancelClicked = this.onCancelClicked.bind(this);\r\n\r\n    this.onGetAvailabelNodes = this.onGetAvailabelNodes.bind(this);\r\n    this.onLoadTotalNodes = this.onLoadTotalNodes.bind(this);\r\n    this.isExistItem = this.isExistItem.bind(this);\r\n\r\n  }\r\n\r\n  onGetAvailabelNodes() {\r\n    const currentItems = cloneDeep(this.state.currentNodes);\r\n    const totalNodes = cloneDeep(this.props.totalNodes);\r\n\r\n    let availableNodes = [];\r\n\r\n    totalNodes.map((totalNode) => {\r\n      let parentFlag = false;\r\n      currentItems.map((totalCurrentNode) => {\r\n        if (totalNode.value === totalCurrentNode.value) {\r\n          parentFlag = true;\r\n          if (\"children\" in totalCurrentNode && \"children\" in totalNode) {\r\n            let totalCurrnetChildrens = [];\r\n            totalCurrentNode.children.map((totalCurrentChild) => {\r\n              totalCurrnetChildrens.push(totalCurrentChild.value);\r\n            });\r\n            totalNode.children.map((totalChild) => {\r\n              if (!(totalCurrnetChildrens.includes(totalChild.value))) {\r\n                let childFlag = false;\r\n                availableNodes.map((availableNode, index) => {\r\n                  if (availableNode.value === totalCurrentNode.value) {\r\n                    availableNodes[index].children.push(totalChild);\r\n                    childFlag = true;\r\n                  }\r\n                })\r\n\r\n                if (!childFlag) {\r\n                  availableNodes.push({ ...totalNode, children: [totalChild] });\r\n                }\r\n              }\r\n            })\r\n          }\r\n        }\r\n      });\r\n\r\n      if (!parentFlag) {\r\n        availableNodes.push(totalNode);\r\n      }\r\n    })\r\n\r\n    this.setState({\r\n      nodesAvailableItem: availableNodes,\r\n      nodesFilteredAvailableItem: availableNodes,\r\n      restoreAvailableItems: availableNodes,\r\n    });\r\n  }\r\n\r\n  onCheckAvailableItem(checkedAvailableItem) {\r\n    this.setState({ checkedAvailableItem });\r\n  }\r\n\r\n  onExpandAvailableItem(expandedAvailableItem) {\r\n    this.setState({ expandedAvailableItem }, () => {\r\n      console.log(this.state.expandedAvailableItem);\r\n    });\r\n  }\r\n\r\n  onCheckCurrentItem(checkedCurrentItem) {\r\n    this.setState({ checkedCurrentItem });\r\n  }\r\n\r\n  onExpandCurrentItem(expandedCurrentItem) {\r\n    this.setState({ expandedCurrentItem }, () => {\r\n      console.log(this.state.expandedCurrentItem);\r\n    });\r\n  }\r\n\r\n  onFilterChangeAvailableItem(e) {\r\n    this.setState({ selectedNode: e });\r\n    let filteredNodes = [];\r\n    if (e.value === \"All\") {\r\n      filteredNodes = cloneDeep(this.state.nodesAvailableItem);\r\n    } else {\r\n      const availableNodes = cloneDeep(this.state.nodesAvailableItem);\r\n      if (e.label.includes(\"parent\")) {\r\n        filteredNodes = availableNodes.filter((node) => node.label === e.label);\r\n      } else {\r\n        availableNodes.map((node) => {\r\n          if (\"children\" in node) {\r\n            node.children.map((childNode) => {\r\n              if (childNode.label === e.label) {\r\n                filteredNodes.push(node);\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    }\r\n    \r\n    this.setState({\r\n      nodesFilteredAvailableItem: filteredNodes,\r\n    })\r\n  }\r\n\r\n  sortNodes(nodes) {\r\n    let sortedNodes = nodes;\r\n    // let suffixA, suffixB;\r\n    \r\n    // sortedNodes.map((node) => {\r\n    //   if (\"children\" in node) {\r\n    //     node.children.sort(function (a, b) {\r\n    //       suffixA = parseInt(a.value.split(\"_\")[3]);\r\n    //       suffixB = parseInt(b.value.split(\"_\")[3]);\r\n    //       return suffixA - suffixB;\r\n    //     });\r\n    //   }\r\n    // })\r\n\r\n    // sortedNodes.sort(function (a, b) {\r\n    //   suffixA = parseInt(a.value.split(\"_\")[2]);\r\n    //   suffixB = parseInt(b.value.split(\"_\")[2]);\r\n    //   return suffixA - suffixB;\r\n    // });\r\n\r\n    return sortedNodes;\r\n  }\r\n\r\n  onAddItems() {\r\n    const checkedItems = cloneDeep(this.state.checkedAvailableItem);\r\n    const availableItems = cloneDeep(this.state.nodesAvailableItem);\r\n    const totalNodes = cloneDeep(this.props.totalNodes);\r\n\r\n    let availableNodes = [];\r\n    let newCurrentNodes = [];\r\n\r\n    if (checkedItems) {\r\n      checkedItems.map((value) => {\r\n        availableItems.map((availableItem) => {\r\n          if (value.includes(\"child\")) {\r\n            let currentChildItems = [];\r\n            if (\"children\" in availableItem) {\r\n              availableItem.children.map((childItem) => {\r\n                if (childItem.value === value) {\r\n                  currentChildItems.push(childItem);\r\n                }\r\n              })\r\n    \r\n              if (currentChildItems.length > 0) {\r\n                newCurrentNodes.push({ ...availableItem, children: currentChildItems });\r\n              }\r\n            }\r\n          } else {\r\n            if (availableItem.value === value) {\r\n              newCurrentNodes.push(availableItem);\r\n            }\r\n          }\r\n        })\r\n      });\r\n\r\n      \r\n      // merge the new current nodes into original current nodes\r\n      const originCurrentNodes = cloneDeep(this.state.currentNodes);\r\n      let totalNewCurrentNodes = [];\r\n      newCurrentNodes.map((newCurrentNode) => {\r\n        let exist = false;\r\n        originCurrentNodes.map((currentNode) => {\r\n          if (currentNode.value === newCurrentNode.value) {\r\n            let currentChildItems = currentNode.children;\r\n            newCurrentNode.children.map((newChildItem) => {\r\n              currentChildItems.push(newChildItem);\r\n            });\r\n            // totalNewCurrentNodes.push({...currentNode})\r\n            // totalNewCurrentNodes.push({ ...currentNode, children: currentChildItems });\r\n            exist = true;\r\n          }\r\n        })\r\n        \r\n        if (!exist) {\r\n          let parentExist = false;\r\n          totalNewCurrentNodes.map((node, index) => {\r\n            if (node.value === newCurrentNode.value) {\r\n              totalNewCurrentNodes[index].children.push(newCurrentNode.children[0]);\r\n              parentExist = true;\r\n            }\r\n          })\r\n          if (!parentExist) {\r\n            totalNewCurrentNodes.push(newCurrentNode);\r\n          }\r\n        }\r\n      })\r\n      \r\n      let totalCurrentNodes = totalNewCurrentNodes;\r\n      originCurrentNodes.map((originNode) => {\r\n        let exist = false;\r\n        totalNewCurrentNodes.map((newNode) => {\r\n          if (originNode.value === newNode.value) {\r\n            exist = true;\r\n          }\r\n        })\r\n        if (!exist) {\r\n          totalCurrentNodes.push(originNode);\r\n        }\r\n      });\r\n\r\n  \r\n      totalNodes.map((totalNode) => {\r\n        let parentFlag = false;\r\n        totalCurrentNodes.map((totalCurrentNode) => {\r\n          if (totalNode.value === totalCurrentNode.value) {\r\n            parentFlag = true;\r\n            if (\"children\" in totalCurrentNode && \"children\" in totalNode) {\r\n              let totalCurrnetChildrens = [];\r\n              totalCurrentNode.children.map((totalCurrentChild) => {\r\n                totalCurrnetChildrens.push(totalCurrentChild.value);\r\n              });\r\n              totalNode.children.map((totalChild) => {\r\n                if (!(totalCurrnetChildrens.includes(totalChild.value))) {\r\n                  let childFlag = false;\r\n                  availableNodes.map((availableNode, index) => {\r\n                    if (availableNode.value === totalCurrentNode.value) {\r\n                      availableNodes[index].children.push(totalChild);\r\n                      childFlag = true;\r\n                    }\r\n                  })\r\n  \r\n                  if (!childFlag) {\r\n                    availableNodes.push({ ...totalNode, children: [totalChild] });\r\n                  }\r\n                }\r\n              })\r\n            }\r\n          }\r\n        });\r\n  \r\n        if (!parentFlag) {\r\n          availableNodes.push(totalNode);\r\n        }\r\n      })\r\n\r\n      this.setState({\r\n        currentNodes: totalCurrentNodes,\r\n        nodesAvailableItem: availableNodes,\r\n        nodesFilteredAvailableItem: availableNodes,\r\n      });\r\n      \r\n    }\r\n  }\r\n\r\n  onRemoveItems() {\r\n    const checkedItems = cloneDeep(this.state.checkedCurrentItem);\r\n    const currentItems = cloneDeep(this.state.currentNodes);\r\n    const totalNodes = cloneDeep(this.props.totalNodes);\r\n\r\n    \r\n    let availableNodes = [];\r\n    let newCurrentNodes = [];\r\n    \r\n    if (checkedItems) {\r\n      checkedItems.map((value) => {\r\n        currentItems.map((availableItem) => {\r\n          if (value.includes(\"child\")) {\r\n            let currentChildItems = [];\r\n            if (\"children\" in availableItem) {\r\n              availableItem.children.map((childItem) => {\r\n                if (childItem.value === value) {\r\n                  currentChildItems.push(childItem);\r\n                }\r\n              })\r\n              \r\n              if (currentChildItems.length > 0) {\r\n                let filteredNode = newCurrentNodes.filter(node => node.value === availableItem.value)\r\n                if (filteredNode.length) {\r\n                  filteredNode[0].children.push( ...currentChildItems );\r\n                } else {\r\n                  newCurrentNodes.push({ ...availableItem, children: currentChildItems });\r\n                }\r\n              }\r\n            }\r\n          } else {\r\n            if (availableItem.value === value) {\r\n              newCurrentNodes.push(availableItem);\r\n            }\r\n          }\r\n        })\r\n      });\r\n      \r\n      // merge the new current nodes into original current nodes\r\n\r\n      const originCurrentNodes = cloneDeep(this.state.nodesAvailableItem);\r\n      let totalNewCurrentNodes = [];\r\n      newCurrentNodes.map((newCurrentNode) => {\r\n        let exist = false;\r\n        let currentChildItems\r\n        originCurrentNodes.map((currentNode) => {\r\n          \r\n          if (currentNode.value === newCurrentNode.value) {\r\n            currentChildItems = currentNode.children;\r\n            newCurrentNode.children.map((newChildItem) => {\r\n              currentChildItems.push(newChildItem);\r\n            });\r\n            totalNewCurrentNodes.push({ ...currentNode, children: currentChildItems });\r\n            exist = true;\r\n          }\r\n        })\r\n  \r\n        if (!exist) {\r\n          let parentExist = false;\r\n          totalNewCurrentNodes.map((node, index) => {\r\n            if (node.value === newCurrentNode.value) {\r\n              totalNewCurrentNodes[index].children.push(newCurrentNode.children[0]);\r\n              parentExist = true;\r\n            }\r\n          })\r\n          if (!parentExist) {\r\n            totalNewCurrentNodes.push(newCurrentNode);\r\n          }\r\n        }\r\n      })\r\n\r\n      let totalCurrentNodes = totalNewCurrentNodes;\r\n      originCurrentNodes.map((originNode) => {\r\n        let exist = false;\r\n        totalNewCurrentNodes.map((newNode) => {\r\n          if (originNode.value === newNode.value) {\r\n            exist = true;\r\n          }\r\n        })\r\n        if (!exist) {\r\n          totalCurrentNodes.push(originNode);\r\n        }\r\n      });\r\n  \r\n      totalNodes.map((totalNode) => {\r\n        let parentFlag = false;\r\n        totalCurrentNodes.map((totalCurrentNode) => {\r\n          if (totalNode.value === totalCurrentNode.value) {\r\n            parentFlag = true;\r\n            if (\"children\" in totalCurrentNode && \"children\" in totalNode) {\r\n              let totalCurrnetChildrens = [];\r\n              totalCurrentNode.children.map((totalCurrentChild) => {\r\n                totalCurrnetChildrens.push(totalCurrentChild.value);\r\n              });\r\n              totalNode.children.map((totalChild) => {\r\n                if (!(totalCurrnetChildrens.includes(totalChild.value))) {\r\n                  let childFlag = false;\r\n                  availableNodes.map((availableNode, index) => {\r\n                    if (availableNode.value === totalCurrentNode.value) {\r\n                      availableNodes[index].children.push(totalChild);\r\n                      childFlag = true;\r\n                    }\r\n                  })\r\n  \r\n                  if (!childFlag) {\r\n                    availableNodes.push({ ...totalNode, children: [totalChild] });\r\n                  }\r\n                }\r\n              })\r\n            }\r\n          }\r\n        });\r\n  \r\n        if (!parentFlag) {\r\n          availableNodes.push(totalNode);\r\n        }\r\n      })\r\n  \r\n      this.setState({\r\n        currentNodes: availableNodes,\r\n        nodesAvailableItem: totalCurrentNodes,\r\n        nodesFilteredAvailableItem: totalCurrentNodes,\r\n      });\r\n    }\r\n  }\r\n\r\n  isExistItem(key, item, currentNodes) {\r\n    let isExist = false\r\n    currentNodes.forEach((current) => {\r\n      if (current.value === key) {\r\n        current.children.forEach((child) => {\r\n          if (child.value === item.value) {\r\n            isExist = true\r\n            return\r\n          }\r\n        })\r\n      }\r\n    })\r\n    return isExist  \r\n  }\r\n\r\n  onLoadTotalNodes() {\r\n    const totalNodes = this.props.totalNodes;\r\n    let availableNodes = [];\r\n\r\n    if (!this.props.currentNodes) {\r\n      return\r\n    }\r\n\r\n    totalNodes.map((item) => {\r\n      let pushItem = {...item};\r\n      if (\"children\" in pushItem) {\r\n        if (pushItem.children.length > 0) {\r\n          let availableChildItems = [];\r\n          pushItem.children.map((childItem) => {\r\n            if (!this.isExistItem(pushItem.value, childItem, this.props.currentNodes)) {\r\n              availableChildItems.push(childItem);\r\n            }\r\n          });\r\n\r\n          if (availableChildItems.length > 0) {\r\n            availableNodes.push({...pushItem, children: availableChildItems});\r\n          }\r\n        }\r\n      }\r\n    });\r\n    this.setState({\r\n      nodesAvailableItem: availableNodes,\r\n      nodesFilteredAvailableItem: availableNodes,\r\n    });\r\n  }\r\n\r\n  onLoadDefaults() {\r\n    const totalNodes = this.props.totalNodes;\r\n    let defaultNodes = [];\r\n    let availableNodes = [];\r\n    totalNodes.map((item) => {\r\n      let pushItem = {...item};\r\n      if (pushItem.default) {\r\n        if (\"children\" in pushItem) {\r\n          if (pushItem.children.length > 0) {\r\n            let currentChildItems = [];\r\n            let availableChildItems = [];\r\n            pushItem.children.map((childItem) => {\r\n              if (childItem.default) {\r\n                currentChildItems.push(childItem);\r\n              } else {\r\n                availableChildItems.push(childItem);\r\n              }\r\n            });\r\n\r\n            if (currentChildItems.length > 0) {\r\n              defaultNodes.push({...pushItem, children: currentChildItems});\r\n            }\r\n\r\n            if (availableChildItems.length > 0) {\r\n              availableNodes.push({...pushItem, children: availableChildItems});\r\n            }\r\n          } else {\r\n            defaultNodes.push(pushItem);\r\n          }\r\n        } else {\r\n          defaultNodes.push(pushItem);\r\n        }\r\n      } else {\r\n        availableNodes.push(pushItem);\r\n      }\r\n    });\r\n    this.setState({\r\n      currentNodes: defaultNodes,\r\n      nodesAvailableItem: availableNodes,\r\n      nodesFilteredAvailableItem: availableNodes,\r\n    });\r\n  }\r\n\r\n  moveItem(direction) {\r\n    const checkedItems = cloneDeep(this.state.checkedCurrentItem);\r\n    const currentNodes = cloneDeep(this.state.currentNodes);\r\n\r\n    if (checkedItems && Array.isArray(checkedItems)) {\r\n      let moveEnable = true;\r\n      checkedItems.sort();\r\n      let parentSuffix = [];\r\n      let childFlag = false;\r\n      checkedItems.map((item) => {\r\n        if (item.includes(\"child\")) {\r\n          parentSuffix.push(item.split(\"_\")[2]); // push child\r\n          childFlag = true;\r\n        }\r\n        if (item.includes(\"parent\")) {\r\n          if (parentSuffix.length > 0) {\r\n            alert (\"Please select one node\");\r\n            moveEnable = false;\r\n          } else {\r\n            parentSuffix.push(item.split(\"_\")[2]); // push parent\r\n          }\r\n        }\r\n      });\r\n      const uniqParentSuffix = [...new Set(parentSuffix)];\r\n      if (uniqParentSuffix.length !== 1) {\r\n        alert (\"Please select one node\");\r\n        moveEnable = false;\r\n      } else {\r\n        let parentValue = '';\r\n        parentValue = \"parent_value_\" + uniqParentSuffix[0];\r\n        let nodeIndex;\r\n        currentNodes.map((node, index) => {\r\n          if (node.value === parentValue) {\r\n            if (childFlag) {\r\n              if (node.children.length === checkedItems.length) {\r\n                nodeIndex = {\r\n                  status: 'parent',\r\n                  parentIndex: index,\r\n                  childIndex: null,\r\n                };\r\n              } else {\r\n                if (checkedItems.length !== 1) {\r\n                  alert (\"Please select one node\");\r\n                  moveEnable = false;\r\n                } else {\r\n                  node.children.map((child, childIndex) => {\r\n                    if (child.value === checkedItems[0]) {\r\n                      nodeIndex = {\r\n                        status: 'child',\r\n                        parentIndex: index,\r\n                        childIndex: childIndex,\r\n                      };\r\n                    }\r\n                  })\r\n                }\r\n              }\r\n            } else {\r\n              nodeIndex = {\r\n                status: 'parent',\r\n                parentIndex: index,\r\n                childIndex: null,\r\n              };\r\n            }\r\n          }\r\n        })\r\n        \r\n        if (moveEnable) {\r\n          if (direction === 'up') {\r\n            if (nodeIndex.status === 'parent') {\r\n              if (nodeIndex.parentIndex > 0) {\r\n                const temp = currentNodes[nodeIndex.parentIndex - 1];\r\n                currentNodes[nodeIndex.parentIndex - 1] = currentNodes[nodeIndex.parentIndex];\r\n                currentNodes[nodeIndex.parentIndex] = temp;\r\n              }\r\n            } else {\r\n              if (nodeIndex.childIndex > 0) {\r\n                const temp = currentNodes[nodeIndex.parentIndex].children[nodeIndex.childIndex - 1];\r\n                currentNodes[nodeIndex.parentIndex].children[nodeIndex.childIndex - 1] = currentNodes[nodeIndex.parentIndex].children[nodeIndex.childIndex];\r\n                currentNodes[nodeIndex.parentIndex].children[nodeIndex.childIndex] = temp;\r\n              }\r\n            }\r\n          } else {\r\n            if (nodeIndex.status === 'parent') {\r\n              if (nodeIndex.parentIndex < currentNodes.length - 1) {\r\n                const temp = currentNodes[nodeIndex.parentIndex + 1];\r\n                currentNodes[nodeIndex.parentIndex + 1] = currentNodes[nodeIndex.parentIndex];\r\n                currentNodes[nodeIndex.parentIndex] = temp;\r\n              }\r\n            } else {\r\n              if (nodeIndex.childIndex < currentNodes[nodeIndex.parentIndex].children.length - 1) {\r\n                const temp = currentNodes[nodeIndex.parentIndex].children[nodeIndex.childIndex + 1];\r\n                currentNodes[nodeIndex.parentIndex].children[nodeIndex.childIndex + 1] = currentNodes[nodeIndex.parentIndex].children[nodeIndex.childIndex];\r\n                currentNodes[nodeIndex.parentIndex].children[nodeIndex.childIndex] = temp;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        this.setState({\r\n          currentNodes: currentNodes,\r\n        });\r\n      }\r\n    } else {\r\n      alert (\"You didn't select the node\");\r\n    }\r\n  }\r\n\r\n  onMoveUp() {\r\n    this.moveItem('up');\r\n  }\r\n\r\n  onMoveDown() {\r\n    this.moveItem('down');\r\n  }\r\n\r\n  onRestoreClicked() {\r\n    this.setState({\r\n      nodesAvailableItem: this.state.restoreAvailableItems,\r\n      currentNodes: this.state.restoreCurrentItems,\r\n    });\r\n  }\r\n\r\n  onOkClicked() {\r\n    this.props.handleCurrentNodesChanged(this.state.currentNodes);\r\n    this.props.handleVisible(false);\r\n  }\r\n\r\n  onCancelClicked() {\r\n    this.setState({\r\n      nodesAvailableItem: this.state.restoreAvailableItems,\r\n      currentNodes: this.state.restoreCurrentItems,\r\n    });\r\n    this.props.handleVisible(false);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.onGetAvailabelNodes();\r\n    this.onLoadTotalNodes();\r\n  }\r\n\r\n  render() {\r\n    const { checkedAvailableItem, expandedAvailableItem, nodesFilteredAvailableItem } = this.state;\r\n\r\n    return (\r\n      <div className=\"widget-container\">\r\n        <div className=\"modal-main\">\r\n          <div className=\"filter-container left-group\">\r\n            <div className=\"left-box-header\">\r\n              <span>Available Items</span>\r\n            </div>\r\n            <div className=\"items-area\">\r\n              <CustomDropDown\r\n                nodes={this.state.nodesAvailableItem}\r\n                onChange={this.onFilterChangeAvailableItem}\r\n              />\r\n              <CheckboxTree\r\n                checked={checkedAvailableItem}\r\n                expanded={expandedAvailableItem}\r\n                nodes={nodesFilteredAvailableItem}\r\n                onCheck={this.onCheckAvailableItem}\r\n                onExpand={this.onExpandAvailableItem}\r\n              />\r\n            </div>\r\n            <div className=\"left-box-footer\">\r\n              <div className=\"modal-btn btn-exchange\" onClick={this.onAddItems}>\r\n                <span>{\"Add Item(s) >>\"}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"filter-container right-group\">\r\n            <div className=\"right-box-header\">\r\n              <span>Available Items</span>\r\n            </div>\r\n            <div className=\"items-container\">\r\n              <div>\r\n                <div className=\"items-area\">\r\n                  <CheckboxTree\r\n                    checked={this.state.checkedCurrentItem}\r\n                    expanded={this.state.expandedCurrentItem}\r\n                    nodes={this.state.currentNodes}\r\n                    onCheck={this.onCheckCurrentItem}\r\n                    onExpand={this.onExpandCurrentItem}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"right-box-btn-group\">\r\n                <div className=\"right-top-btn\">\r\n                  <div className=\"modal-btn\" onClick={this.onLoadDefaults}>\r\n                    <span>Load Defaults</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"right-bottom-btn\">\r\n                  <div className=\"modal-btn\" onClick={this.onMoveUp}>\r\n                    <span>Move Up</span>\r\n                  </div>\r\n                  <div className=\"modal-btn\" onClick={this.onMoveDown}>\r\n                    <span>Move Down</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"right-box-footer\">\r\n              <div className=\"modal-btn btn-exchange\" onClick={this.onRemoveItems}>\r\n                <span>{\"<< Remove Item(s)\"}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <div className=\"modal-footer-left-button-group\">\r\n            <div className=\"modal-btn restore-btn\" onClick={this.onRestoreClicked}>\r\n              <span>Restore</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer-right-button-group\">\r\n            <div className=\"modal-btn ok-btn\" onClick={this.onOkClicked}>\r\n              <span>Ok</span>\r\n            </div>\r\n            <div className=\"modal-btn cancel-btn\" onClick={this.onCancelClicked}>\r\n              <span>Cancel</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Widget;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport Widget from './components/modal/Widget';\r\n\r\nimport { getStockModalData } from 'api/Api';\r\n\r\nconst WatchListEditColumnWidget = (props) => {\r\n  const [totalNodes, setTotalNodes] = useState([]);\r\n  const [currentNodes, setCurrentNodes] = useState(props.selectedColumns);\r\n  \r\n  const handleCurrentNodesChanged = (nodes) => {\r\n    setCurrentNodes(nodes);\r\n    props.setColumns(nodes)\r\n  };\r\n\r\n  const handleVisible = (visibleStatus) => {\r\n    props.handleModalClose()\r\n  };\r\n\r\n  useEffect(() => {\r\n    let nodes = [];\r\n    let childNodes = [];\r\n\r\n    const getModalData = async () => {\r\n      let res = await getStockModalData();\r\n      if (res.result) {\r\n        const stockFinancialsData = res.result.stock_financials;\r\n        const indicators = res.result.indicators;\r\n        const tickerNews = res.result.ticker_news;\r\n        const tickerDetails = res.result.ticker_details;\r\n\r\n        // Stock Financials Fields\r\n        childNodes = [];\r\n        stockFinancialsData.total.map((node, index) => {\r\n          childNodes.push({\r\n            label: node,\r\n            value: 'child_value_1_' + (index + 1),\r\n            default: stockFinancialsData.defaults.includes(node) ? true : false,\r\n          });\r\n        });\r\n\r\n        if (childNodes.length > 0) {\r\n          nodes.push({\r\n            label: 'Stock Financials',\r\n            value: 'parent_value_1',\r\n            children: childNodes,\r\n            default: true,\r\n          });\r\n        } else {\r\n          nodes.push({\r\n            label: 'Stock Financials',\r\n            value: 'parent_value_1',\r\n            default: false,\r\n          });\r\n        }\r\n\r\n        // Indicators\r\n        childNodes = [];\r\n        indicators.total.map((node, index) => {\r\n          childNodes.push({\r\n            label: node,\r\n            value: 'child_value_2_' + (index + 1),\r\n            default: indicators.defaults.includes(node) ? true : false,\r\n          });\r\n        });\r\n\r\n        if (childNodes.length > 0) {\r\n          nodes.push({\r\n            label: 'Indicators',\r\n            value: 'parent_value_2',\r\n            children: childNodes,\r\n            default: true,\r\n          });\r\n        } else {\r\n          nodes.push({\r\n            label: 'Indicators',\r\n            value: 'parent_value_2',\r\n            default: false,\r\n          });\r\n        }\r\n\r\n        // Ticker News\r\n        // childNodes = [];\r\n        // tickerNews.total.map((node, index) => {\r\n        //   childNodes.push({\r\n        //     label: node,\r\n        //     value: 'child_value_3_' + (index + 1),\r\n        //     default: tickerNews.defaults.includes(node) ? true : false,\r\n        //   });\r\n        // });\r\n\r\n        // if (childNodes.length > 0) {\r\n        //   nodes.push({\r\n        //     label: 'Ticker News',\r\n        //     value: 'parent_value_3',\r\n        //     children: childNodes,\r\n        //     default: true,\r\n        //   });\r\n        // } else {\r\n        //   nodes.push({\r\n        //     label: 'Ticker News',\r\n        //     value: 'parent_value_3',\r\n        //     default: false,\r\n        //   });\r\n        // }\r\n\r\n        // Ticker Details\r\n        childNodes = [];\r\n        tickerDetails.total.map((node, index) => {\r\n          childNodes.push({\r\n            label: node,\r\n            value: 'child_value_4_' + (index + 1),\r\n            default: tickerDetails.defaults.includes(node) ? true : false,\r\n          });\r\n        });\r\n\r\n        if (childNodes.length > 0) {\r\n          nodes.push({\r\n            label: 'Ticker Details',\r\n            value: 'parent_value_4',\r\n            children: childNodes,\r\n            default: true,\r\n          });\r\n        } else {\r\n          nodes.push({\r\n            label: 'Ticker Details',\r\n            value: 'parent_value_4',\r\n            default: false,\r\n          });\r\n        }\r\n\r\n        nodes.push({\r\n          label: \"Ticker Prices\",\r\n          value: \"parent_value_5\",\r\n          children: [\r\n              {\r\n                  label: \"o\",\r\n                  value: \"child_value_5_1\",\r\n                  default: true\r\n              },\r\n              {\r\n                  label: \"h\",\r\n                  value: \"child_value_5_2\",\r\n                  default: true\r\n              },    \r\n              {\r\n                  label: \"l\",\r\n                  value: \"child_value_5_3\",\r\n                  default: true\r\n              },    \r\n              {\r\n                  label: \"c\",\r\n                  value: \"child_value_5_4\",\r\n                  default: true\r\n              },    \r\n              {\r\n                  label: \"v\",\r\n                  value: \"child_value_5_5\",\r\n                  default: true\r\n              },    \r\n              {\r\n                  label: \"mark\",\r\n                  value: \"child_value_5_6\",\r\n                  default: true\r\n              }    \r\n          ]\r\n        })\r\n      }\r\n      setTotalNodes(nodes);\r\n    };\r\n    getModalData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"watch-list-edit-column-widget\">\r\n      {totalNodes.length > 0 && (\r\n        <Widget\r\n          totalNodes={totalNodes}\r\n          currentNodes={currentNodes}\r\n          handleCurrentNodesChanged={handleCurrentNodesChanged}\r\n          handleVisible={handleVisible}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WatchListEditColumnWidget;\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { Button } from 'reactstrap'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport BarChart from 'components/FinancialDashboard/SmallBarChart';\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\nimport WatchListEditColumnWidget from 'components/WatchListEditColumnWidget/WatchListEditColumnWidget'\r\nimport './WatchListItem.css'\r\nimport Select from 'react-select'\r\nimport {\r\n  getMultiFinancials, getScannerViewData, saveScannerView, getWatchListAll\r\n} from 'api/Api';\r\n\r\nconst WatchListItem = (props) => {\r\n  const { allViewData, setAllViewData } = props;\r\n  const [isLoadedWatchListOptions, setIsLoadedWatchListOptions] = useState(true)\r\n  const [isConnected, setIsConnected] = useState(false)\r\n  const [selectedColumns, setSelectedColumns] = useState(\r\n    [\r\n      {\r\n        label: \"Indicators\",\r\n        value: \"parent_value_2\",\r\n        children: [\r\n            // {\r\n            //     label: \"rsi\",\r\n            //     value: \"child_value_2_1\",\r\n            //     default: true\r\n            // },\r\n            // {\r\n            //     label: \"rsi2\",\r\n            //     value: \"child_value_2_2\",\r\n            //     default: true\r\n            // },\r\n            // {\r\n            //     label: \"rsi3\",\r\n            //     value: \"child_value_2_3\",\r\n            //     default: false\r\n            // },\r\n            // {\r\n            //     label: \"heik\",\r\n            //     value: \"child_value_2_4\",\r\n            //     default: false\r\n            // },\r\n            // {\r\n            //     label: \"heik2\",\r\n            //     value: \"child_value_2_5\",\r\n            //     default: false\r\n            // }\r\n        ],\r\n        \"default\": true\r\n      }\r\n    ]\r\n  );\r\n  \r\n  const [chartMultiData, setChartMultiData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [ws, setWs] = useState(null);\r\n  const [isOpenedEditColumnWidget, setIsOpenedEditColumnWidget] = useState(false)\r\n  const [selectedWatchList, setSelectedWatchList] = useState(null)\r\n  const [selectedWatchListOptions, setSelectedWatchListOptions] = useState([])\r\n  const [selectedAggregationType, setSelectedAggregationType] = useState('QA');\r\n  const [isUpdatedCols, setIsUpdatedCols] = useState(false)\r\n  const [columnItems, setColumnItems] = useState([])\r\n  const [initColumnItems] = useState([\r\n    {\r\n      value: 'symbol',\r\n      label: 'symbol',\r\n      width: 100,\r\n    },\r\n  ])\r\n  const [isUpdatedWatchList, setIsUpdatedWatchList] = useState(false);\r\n  const [selectedSymbols, setSelectedSymbols] = useState([])\r\n  \r\n  const [columns, setColumns] = useState([\r\n    {\r\n      value: 'symbol',\r\n      label: 'symbol',\r\n      width: 100,\r\n    },\r\n    // {\r\n    //   value: 'rsi',\r\n    //   label: 'rsi',\r\n    //   width: 100,\r\n    // },\r\n    // {\r\n    //   value: 'rsi2',\r\n    //   label: 'rsi2',\r\n    //   width: 100,\r\n    // },\r\n    // {\r\n    //   value: 'rsi3',\r\n    //   label: 'rsi3',\r\n    //   width: 100,\r\n    // },\r\n    // {\r\n    //   value: 'heik',\r\n    //   label: 'heik',\r\n    //   width: 100,\r\n    // },\r\n    // {\r\n    //   value: 'heik2',\r\n    //   label: 'heik2',\r\n    //   width: 100,\r\n    // },\r\n    {\r\n      value: 'chart',\r\n      label: 'chart',\r\n      width: 100,\r\n    }\r\n  ]);\r\n\r\n  const [timeFrames, setTimeFrames] = useState([])\r\n  const [timeFrameOptions, setTimeFrameOptions] = useState([\r\n    {\r\n      value: '1d',\r\n      label: '1d'\r\n    },\r\n    {\r\n      value: '3d',\r\n      label: '3d'\r\n    },\r\n  ])\r\n  \r\n  const [watchListData, setWatchListData] = useState([])\r\n  const [watchListInitData, setWatchListInitData] = useState([])\r\n\r\n  const handleColumnsChange = () => {\r\n    setIsOpenedEditColumnWidget(true)\r\n  }\r\n\r\n  const handleModalClose = () => {\r\n    setIsOpenedEditColumnWidget(false)\r\n  }\r\n\r\n  const loadWatchListOptions = ( useCallback( async() => {\r\n    try {\r\n      const data = await getWatchListAll()\r\n      const result = data.result.map((o) => ({\r\n        value: o.name,\r\n        label: o.name\r\n      }))\r\n      setSelectedWatchListOptions(result)\r\n      setSelectedWatchList(result[0])\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }, []))\r\n  useEffect(() => {\r\n    loadWatchListOptions()\r\n    setIsLoadedWatchListOptions(true)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const getScannerAvailableFields = async () => {\r\n      const result = await getScannerViewData(props.chart_number)\r\n      if (result) {\r\n        let columns = result.fields;\r\n        if (columns) {\r\n          let cols = []\r\n          let temps = []\r\n          let colObjects = []\r\n          Object.keys(columns).forEach((key) => {\r\n            columns[key].children.forEach((col) => {\r\n              cols.push(col.label)\r\n              temps.push(col.label)\r\n            })\r\n\r\n            colObjects.push({\r\n              [columns[key].label]: temps\r\n            })\r\n            temps = []\r\n          })\r\n          setColumnItems(cols)\r\n          setSelectedColumns(columns)\r\n          setIsUpdatedCols(!isUpdatedCols)\r\n        }\r\n      }\r\n    }\r\n\r\n    if (isLoadedWatchListOptions) {\r\n      getScannerAvailableFields()\r\n    }\r\n  \r\n  }, [isLoadedWatchListOptions])\r\n\r\n  useEffect(() => {\r\n    const loadRows = async () => {\r\n      const requestOptions = {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n          'name': selectedWatchList.value\r\n        })\r\n      };\r\n      let rows = []\r\n\r\n      try {\r\n        await fetch(process.env.REACT_APP_BACKEND_URL + \"/scanner/watchlists/\", requestOptions)\r\n        .then(response => response.json())\r\n        .then(async data => {\r\n          \r\n          rows = data.result\r\n\r\n          const financials = await getMultiFinancials(rows, 'income_statement')\r\n          loadMultiFinancials(financials)\r\n\r\n          // setRowItems(data.tables)\r\n          // setIsUpdatedRows(true)\r\n          \r\n          let realData = [];\r\n          let symbols = [];\r\n          rows.forEach((row) => {\r\n            const object = {}\r\n            columns.forEach((col) => {\r\n              if (col.value === 'chart') {\r\n                object[col.value] = 'fetching ...'\r\n              } else {\r\n                object[col.value] = '0.00'\r\n              }\r\n            })\r\n            object.symbol = row\r\n            symbols.push({\r\n              value: row,\r\n              label: row,\r\n            })\r\n            realData.push(object);\r\n          })\r\n\r\n          updateChangeSymbol(symbols)\r\n          setSelectedSymbols(symbols)\r\n          setWatchListInitData(realData)\r\n        })  \r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n    if (selectedWatchList) {\r\n      setIsLoading(1);\r\n      loadRows();\r\n    }\r\n  }, [selectedWatchList])\r\n\r\n  useEffect(() => {\r\n    const keys = Object.keys(columnItems)\r\n    if(keys.length) {\r\n      const columns = [...initColumnItems]\r\n      columnItems.forEach((value) => {\r\n        if (value !== 'symbol') {\r\n          columns.push({\r\n            value: value,\r\n            label: value,\r\n            width: 100,\r\n          })\r\n        }\r\n      })\r\n      columns.push({\r\n        value: 'chart',\r\n        label: 'chart',\r\n        width: 100,\r\n      })\r\n      setColumns(columns)\r\n    } else {\r\n      setColumns([\r\n        {\r\n          value: 'symbol',\r\n          label: 'symbol',\r\n          width: 100,\r\n        },\r\n        {\r\n          value: 'chart',\r\n          label: 'chart',\r\n          width: 100,\r\n        }\r\n      ])\r\n    }\r\n\r\n  }, [isUpdatedCols])\r\n\r\n  const isValidChartData = (symbol) => {\r\n    if (!chartMultiData.length) {\r\n      return false\r\n    }\r\n    const filtered = chartMultiData.filter((chartData) => { return chartData.symbol === symbol; })\r\n    if (!filtered.length) {\r\n      return false\r\n    }\r\n    return filtered[0].chartData.length ? true : false\r\n  }\r\n\r\n  const loadMultiFinancials = (financials) => {\r\n    if (!financials.length) {\r\n      return\r\n    }\r\n\r\n    financials.forEach((financial) => {\r\n      getIncomeFromFinancial(financial[1], financial[0])\r\n    })\r\n  }\r\n\r\n  const getChartDataBySymbol = (symbol, isChild) => {\r\n    if (!chartMultiData.length) {\r\n      return []\r\n    }\r\n    \r\n    const filtered = chartMultiData.filter((chartData) => { return chartData.symbol === symbol })\r\n    if (!filtered.length) {\r\n      return []\r\n    }\r\n    \r\n    let slicedChartData = filtered[0].chartData.map((chart) => {\r\n      chart.dataPoints.splice(0, chart.dataPoints.length - 50)//should update whenever\r\n      return chart\r\n    })\r\n\r\n    if (isChild) {\r\n      return slicedChartData[0]\r\n    }\r\n\r\n\r\n    return slicedChartData\r\n  }\r\n\r\n  useEffect(() => {\r\n    let initData = watchListInitData\r\n    let newData = []\r\n    let isValid = true\r\n\r\n    initData.forEach((init) => {\r\n      watchListData.forEach(o => {\r\n        if (o.symbol === init.symbol) {\r\n          const newObject = {\r\n            symbol: o.symbol,\r\n            ...o.data,\r\n            chart: \r\n              <div className=\"container custom-container chart-area hunter-scanner-page-chart-area\">\r\n                <div className=\"row justify-content-center hunter-scanner-page-chart-area-wrap\">\r\n                  {isValidChartData(o.symbol) ? (\r\n                    <BarChart\r\n                      data={getChartDataBySymbol(o.symbol, true)}\r\n                      chartData={getChartDataBySymbol(o.symbol, false)}\r\n                      globalAggregationType={selectedAggregationType}\r\n                    />\r\n                  ) : isLoading === 2 ? (\r\n                    <div className=\"no-data\">No data</div>\r\n                  ) : (\r\n                    <div className=\"no-data\">Fetching...</div>\r\n                  )}\r\n                </div>\r\n              </div>,\r\n          }\r\n          newData.push(newObject)\r\n          isValid = false\r\n        }\r\n      })\r\n      if (isValid) {\r\n        newData.push(init)\r\n      }\r\n      isValid = true\r\n    })\r\n\r\n    setWatchListInitData(newData)\r\n    setIsUpdatedWatchList(false)\r\n  }, [isUpdatedWatchList])\r\n\r\n  useEffect(() => {\r\n    \r\n    let cols = []\r\n    let temps = []\r\n    let colObjects = []\r\n\r\n    Object.keys(selectedColumns).forEach((key) => {\r\n      selectedColumns[key].children.forEach((col) => {\r\n        cols.push(col.label)\r\n        temps.push(col.label)\r\n      })\r\n\r\n      colObjects.push({\r\n        [selectedColumns[key].label]: temps\r\n      })\r\n      temps = []\r\n    })\r\n    \r\n    if (isConnected) {\r\n      const symbols = selectedSymbols.map( (o) => o.value )\r\n      \r\n      const content = {\r\n        action: 'create_fields',\r\n        chart_number: props.chart_number,\r\n        symbols,\r\n        symbol_type: (selectedWatchList.value === 'crypto' || selectedWatchList.value === 'bigCryptos') ? 'crypto' : 'stock',\r\n        fields: colObjects,\r\n      }\r\n\r\n      ws.send(JSON.stringify(content));\r\n      console.log('First Connection options sent to BE', content)\r\n    }  \r\n  }, [isConnected])\r\n\r\n  const updateChangeSymbol = (symbolList) => {\r\n    let cols = []\r\n    let temps = []\r\n    let colObjects = []\r\n    const columns = selectedColumns\r\n    Object.keys(columns).forEach((key) => {\r\n      columns[key].children.forEach((col) => {\r\n        cols.push(col.label)\r\n        temps.push(col.label)\r\n      })\r\n\r\n      colObjects.push({\r\n        [columns[key].label]: temps\r\n      })\r\n      temps = []\r\n    })\r\n    // setIsUpdatedCols(!isUpdatedCols)\r\n    // setColumnItems(cols)\r\n    // setSelectedColumns(columns)\r\n    \r\n    if (isConnected) {\r\n      const symbols = symbolList.map( (o) => o.value )\r\n      \r\n      const content = {\r\n        action: selectedWatchList.value === 'crypto' ? 'create_fields' : 'change_fields',\r\n        chart_number: props.chart_number,\r\n        symbols,\r\n        symbol_type: (selectedWatchList.value === 'crypto' || selectedWatchList.value === 'bigCryptos') ? 'crypto' : 'stock',\r\n        fields: colObjects,\r\n      }\r\n      \r\n      ws.send(JSON.stringify(content));\r\n    }  \r\n  }\r\n\r\n  const loadview = async () => {\r\n    const result = await getScannerViewData(props.chart_number)\r\n    if (result) {\r\n      let columns = result.fields;\r\n      if (columns) {\r\n        let cols = []\r\n        let temps = []\r\n        let colObjects = []\r\n        Object.keys(columns).forEach((key) => {\r\n          columns[key].children.forEach((col) => {\r\n            cols.push(col.label)\r\n            temps.push(col.label)\r\n          })\r\n\r\n          colObjects.push({\r\n            [columns[key].label]: temps\r\n          })\r\n          temps = []\r\n        })\r\n        setColumnItems(cols)\r\n        setSelectedColumns(columns)\r\n        setIsUpdatedCols(!isUpdatedCols)\r\n\r\n        allViewData.forEach(view => {\r\n          if (view.chart_number === props.chart_number) {\r\n            view.fields = [...columns]\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleColumnSet = (columns) => {\r\n    let cols = []\r\n    let temps = []\r\n    let colObjects = []\r\n    Object.keys(columns).forEach((key) => {\r\n      columns[key].children.forEach((col) => {\r\n        cols.push(col.label)\r\n        temps.push(col.label)\r\n      })\r\n\r\n      colObjects.push({\r\n        [columns[key].label]: temps\r\n      })\r\n      temps = []\r\n    })\r\n    setIsUpdatedCols(!isUpdatedCols)\r\n    setColumnItems(cols)\r\n    setSelectedColumns(columns)\r\n    if (isConnected) {\r\n      const symbols = selectedSymbols.map( (o) => o.value )\r\n      \r\n      const content = {\r\n        action: 'change_fields',\r\n        chart_number: props.chart_number,\r\n        symbols,\r\n        symbol_type: (selectedWatchList.value === 'crypto' || selectedWatchList.value === 'bigCryptos') ? 'crypto' : 'stock',\r\n        fields: colObjects,\r\n      }\r\n\r\n      allViewData.forEach(view => {\r\n        if (view.chart_number === props.chart_number) {\r\n          view.symbols = content.symbols\r\n          view.fields = [...columns]\r\n        }\r\n      })\r\n\r\n      ws.send(JSON.stringify(content));\r\n    }\r\n  }\r\n\r\n  const indicatorStyle = (key, item) => {\r\n    let bgColor;\r\n    const indicators = ['rsi', 'rsi2', 'rsi3', 'heik', 'heik2']\r\n    if (indicators.includes(key)) {\r\n      switch (key) {\r\n        case 'rsi':\r\n          bgColor = item.rsi_side === 'buy'\r\n          ? 'background-pink-color' : item.rsi_side === 'sell'\r\n          ? 'background-orange-color' : item.rsi_side === 'hold'\r\n          ? 'background-light-green-color' : 'background-red-color'\r\n          return bgColor\r\n        case 'rsi2':\r\n          bgColor = item.rsi2_color === 'l_g'\r\n            ? 'background-light-green' : item.rsi2_color === 'd_g'\r\n            ? 'background-dark-green' : item.rsi2_color === 'l_r'\r\n            ? 'background-light-red' : 'background-dark-red'\r\n          return bgColor\r\n        case 'rsi3':\r\n          bgColor = item.rsi3_color === 'l_g'\r\n            ? 'background-light-green' : item.rsi3_color === 'd_g'\r\n            ? 'background-dark-green' : item.rsi3_color === 'l_r'\r\n            ? 'background-light-red' : 'background-dark-red'\r\n          return bgColor\r\n        case 'heik':\r\n          bgColor = item.heik1_color === 'l_g'\r\n            ? 'background-light-green' : item.heik_color === 'd_g'\r\n            ? 'background-dark-green' : item.heik_color === 'l_r'\r\n            ? 'background-light-red' : 'background-dark-red'\r\n          return bgColor\r\n        case 'heik2':\r\n          bgColor = item.heik2_color === 'l_g'\r\n            ? 'background-light-green' : item.heik2_color === 'd_g'\r\n            ? 'background-dark-green' : item.heik2_color === 'l_r'\r\n            ? 'background-light-red' : 'background-dark-red'\r\n          return bgColor\r\n        default:\r\n          return ''\r\n      }\r\n    }\r\n    return ''\r\n  }\r\n\r\n  const handleTimeFrameChange = (e) => {\r\n    setTimeFrames(e)\r\n  }\r\n  \r\n  const handleWatchListChange = async (e) => {\r\n    await createWebSocket(true)\r\n    setIsUpdatedWatchList(true)\r\n    setSelectedWatchList(e)\r\n  }\r\n\r\n  const getIncomeFromFinancial = async (financial, symbol) => {\r\n    let revenus = {\r\n      label: 'Revenue',\r\n      group: 0,\r\n      color: 'rgb(25, 185, 154)',\r\n      dataPoints: [],\r\n    };\r\n    let costOfRevenue = {\r\n      label: 'Cost of Revenue',\r\n      group: 0,\r\n      color: 'rgb(8, 64, 129)',\r\n      dataPoints: [],\r\n    };\r\n    let grossProfit = {\r\n      label: 'Gross Profit',\r\n      group: 0,\r\n      color: 'rgb(127, 0, 0)',\r\n      dataPoints: [],\r\n    };\r\n    let EBITDAMargin = {\r\n      label: 'Ebit',\r\n      group: 0,\r\n      color: 'rgb(89, 201, 108)',\r\n      dataPoints: [],\r\n    };\r\n    let NetIncome = {\r\n      label: 'Net Income',\r\n      group: 0,\r\n      color: 'rgb(75, 87, 74)',\r\n      dataPoints: [],\r\n    };\r\n    let earningsPerBasicShare = {\r\n      label: 'Earnings per Basic Share',\r\n      group: 0,\r\n      color: 'rgb(226, 71, 130)',\r\n      dataPoints: [],\r\n    };\r\n    \r\n    if (financial && financial.length) {\r\n      financial.forEach((item) => {\r\n        revenus.dataPoints.push({\r\n          calendarDate: item.calendarDate,\r\n          period: item.period,\r\n          value: item.revenues,\r\n        });\r\n        costOfRevenue.dataPoints.push({\r\n          calendarDate: item.calendarDate,\r\n          period: item.period,\r\n          value: item.costOfRevenue,\r\n        });\r\n        grossProfit.dataPoints.push({\r\n          calendarDate: item.calendarDate,\r\n          period: item.period,\r\n          value: item.grossProfit,\r\n        });\r\n        EBITDAMargin.dataPoints.push({\r\n          calendarDate: item.calendarDate,\r\n          period: item.period,\r\n          value: item.EBITDAMargin,\r\n        });\r\n        NetIncome.dataPoints.push({\r\n          calendarDate: item.calendarDate,\r\n          period: item.period,\r\n          value: item.netIncome,\r\n        });\r\n        earningsPerBasicShare.dataPoints.push({\r\n          calendarDate: item.calendarDate,\r\n          period: item.period,\r\n          value: item.earningsPerBasicShare,\r\n        });\r\n      });\r\n    }\r\n\r\n    const multiCharts = chartMultiData;\r\n    multiCharts.push({\r\n      symbol: symbol,\r\n      chartData: [\r\n        sortDataPointsByDate(revenus),\r\n        sortDataPointsByDate(costOfRevenue),\r\n        sortDataPointsByDate(grossProfit),\r\n        sortDataPointsByDate(EBITDAMargin),\r\n        sortDataPointsByDate(NetIncome),\r\n        sortDataPointsByDate(earningsPerBasicShare),\r\n      ]\r\n    })\r\n\r\n    setChartMultiData(multiCharts)\r\n    setIsLoading(2);\r\n  };\r\n\r\n  const createWebSocket = ( async (isUpdate) => {\r\n    if (ws) {\r\n      if (isUpdate) {\r\n        ws.close()\r\n      } else {\r\n        return\r\n      }\r\n    }\r\n\r\n    const socket = new WebSocket(process.env.REACT_APP_SOCKET_URL);\r\n    setWs(socket)\r\n    \r\n    socket.onopen = () => {\r\n      setIsConnected(true);\r\n      console.log('Opened Connection!')\r\n    };\r\n  \r\n    socket.onmessage = (event) => {\r\n      try {\r\n        const msg = JSON.parse(event.data)\r\n        setWatchListData(msg)\r\n        setIsUpdatedWatchList(true)\r\n      } catch (error) {\r\n        console.log(error)  \r\n      }\r\n    };\r\n    \r\n    socket.onclose = () => {\r\n      console.log('Closed Connection!')\r\n    };\r\n  })\r\n\r\n  useEffect (() => {\r\n    if (isLoading === 2) {\r\n      createWebSocket(false)\r\n    }\r\n  }, [isLoading])\r\n\r\n  const sortDataPointsByDate = (data) => {\r\n    let sortedData = { ...data };\r\n    if (sortedData.dataPoints.length > 0) {\r\n      sortedData.dataPoints.sort(function (a, b) {\r\n        let valueA = a['calendarDate'];\r\n        let valueB = b['calendarDate'];\r\n        if (typeof a['calendarDate'] != 'string') {\r\n          valueA = valueA.toString();\r\n        }\r\n        if (typeof b['calendarDate'] != 'string') {\r\n          valueB = valueB.toString();\r\n        }\r\n        return valueA.localeCompare(valueB);\r\n      });\r\n    }\r\n    return sortedData;\r\n  };\r\n\r\n  const isSelectedSymbol = (symbol) => {\r\n    const filtered = selectedSymbols.filter(o => o.value === symbol)\r\n    return filtered.length ? true : false\r\n  }\r\n\r\n  const isValidNUmber = (number) => {\r\n    if (isNaN(parseFloat(number))) {\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  return (\r\n    <div className=\"watch-list-item-container\">\r\n      <Modal show={isOpenedEditColumnWidget} className=\"hunter-widget-modal\" onHide={() => handleModalClose()}>\r\n        <WatchListEditColumnWidget\r\n          handleModalClose={handleModalClose}\r\n          setColumns={handleColumnSet}\r\n          selectedColumns={selectedColumns}\r\n        />\r\n      </Modal>\r\n      <div className=\"watch-list-item-wrap hunter-watch-list-item-wrap\">\r\n        <div className=\"watch-list-item-header\">\r\n          {/* <div className=\"select-multi-option mr-1 ml-1 market-select-options\">\r\n            <Select\r\n              name=\"filters\"\r\n              placeholder=\"Time Frame\"\r\n              value={timeFrames}\r\n              onChange={handleTimeFrameChange}\r\n              options={timeFrameOptions}\r\n            />\r\n          </div> */}\r\n          <div className=\"select-multi-option mr-1 market-select-options\">\r\n            <Select\r\n              name=\"filters\"\r\n              placeholder=\"Watch List\"\r\n              value={selectedWatchList}\r\n              onChange={handleWatchListChange}\r\n              options={selectedWatchListOptions}\r\n            />\r\n          </div>\r\n          <Button\r\n            size=\"sm\"\r\n            className=\"\"\r\n            onClick={() => {handleColumnsChange()}}\r\n          >\r\n            change columns\r\n          </Button>\r\n          <Button\r\n            size=\"sm\"\r\n            className=\"\"\r\n            onClick={async () => {\r\n              const symbols = selectedSymbols.map(symbol => symbol.value)\r\n              const result = await saveScannerView(props.chart_number, symbols, selectedColumns)\r\n              alert('Fields saved successfully!!!')\r\n            }}\r\n          >\r\n            save view\r\n          </Button>\r\n          <Button\r\n            size=\"sm\"\r\n            className=\"\"\r\n            onClick={async () => {\r\n              loadview()\r\n            }}\r\n          >\r\n            load view\r\n          </Button>\r\n        </div>\r\n        <div className=\"watch-list-item-content\">\r\n          <MDBTable\r\n            hover\r\n            dark={true}\r\n            maxHeight='100%'\r\n            height={`${(props.chartColumn === 1 || props.chartColumn === 2) ? '800px' : '100%'}`}\r\n            noBottomColumns={true}\r\n            striped={true}\r\n            scrollX={true}\r\n            scrollY={true}\r\n          >\r\n            <MDBTableHead  className=\"watch-list-data-table-header\">\r\n              <tr>\r\n                {columns.map((item) => (\r\n                  <th key={item.label} className={`${item.value === 'chart' ? 'hunter-custom-table-chart-th' : ''}`}>{item.label}</th>\r\n                ))}\r\n              </tr>\r\n            </MDBTableHead>\r\n            <MDBTableBody\r\n              className={\"financial-table-body-1\"}\r\n            >\r\n              {watchListInitData && watchListInitData.map((item) => (\r\n                isSelectedSymbol(item.symbol) && \r\n                <tr key={`row-${item.symbol}`}>\r\n                  {columns.map((column) => \r\n                    (\r\n                      <td \r\n                        key={`${item.symbol}-${column.value}`}\r\n                        className={`hunter-financial-table-column ${column.value === 'chart' ? 'table-chart-column' : ''} ${indicatorStyle(column.value, item)}`}\r\n                      >\r\n                        {isValidNUmber(item[column.value]) ? (item[column.value] || item[column.value] === '' ? parseFloat(item[column.value]).toFixed(2): '') : item[column.value]}\r\n                      </td>\r\n                    )\r\n                  )}\r\n                </tr>\r\n              ))}\r\n            </MDBTableBody>\r\n          </MDBTable>\r\n        </div>  \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WatchListItem;","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Select from 'react-select'\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Collapse,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  NavLink,\r\n  Nav,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { useAuth } from 'contexts/authContext';\r\nimport disableScroll from 'disable-scroll';\r\nimport WatchListItem from 'components/WatchListItem/WatchListItem'\r\nimport {\r\n  saveScannerAllViewData, getScannerAllViewData\r\n} from 'api/Api';\r\n\r\nconst WatchList = (props) => {\r\n\r\n  const auth = useAuth();\r\n  const { selectedInstance } = props\r\n  const history = useHistory();\r\n  const [collapseOpen,] = React.useState(false)\r\n  const [chartColumn, setChartColumn] = useState({ value: 6, label: '6' })\r\n  const [user] = useState(JSON.parse(localStorage.getItem('user-info')));\r\n  const optionsColumn = [\r\n    {\r\n      value: 1, label: '1',\r\n    },\r\n    {\r\n      value: 2, label: '2',\r\n    },\r\n    {\r\n      value: 4, label: '4',\r\n    },\r\n    {\r\n      value: 6, label: '6',\r\n    }\r\n  ]\r\n\r\n  const defaultViewFields = [\r\n    {\r\n      label: \"Indicators\",\r\n      value: \"parent_value_2\",\r\n      children: [\r\n          {\r\n              label: \"rsi\",\r\n              value: \"child_value_2_1\",\r\n              default: true\r\n          },\r\n          {\r\n              label: \"rsi2\",\r\n              value: \"child_value_2_2\",\r\n              default: true\r\n          },\r\n          {\r\n              label: \"rsi3\",\r\n              value: \"child_value_2_3\",\r\n              default: false\r\n          },\r\n          {\r\n              label: \"heik\",\r\n              value: \"child_value_2_4\",\r\n              default: false\r\n          },\r\n          {\r\n              label: \"heik2\",\r\n              value: \"child_value_2_5\",\r\n              default: false\r\n          }\r\n      ],\r\n      \"default\": true\r\n    }\r\n  ];\r\n\r\n  const allViewDataDefault = [\r\n    {\r\n      \"chart_number\": 1,\r\n      \"symbols\": [],\r\n      \"fields\": defaultViewFields,\r\n    },\r\n    {\r\n      \"chart_number\": 2,\r\n      \"symbols\": [],\r\n      \"fields\": defaultViewFields,\r\n    },\r\n    {\r\n      \"chart_number\": 3,\r\n      \"symbols\": [],\r\n      \"fields\": defaultViewFields,\r\n    },\r\n    {\r\n      \"chart_number\": 4,\r\n      \"symbols\": [],\r\n      \"fields\": defaultViewFields,\r\n    },\r\n    {\r\n      \"chart_number\": 5,\r\n      \"symbols\": [],\r\n      \"fields\": defaultViewFields,\r\n    },\r\n    {\r\n      \"chart_number\": 6,\r\n      \"symbols\": [],\r\n      \"fields\": defaultViewFields,\r\n    }\r\n  ];\r\n\r\n  const [allViewData, setAllViewData] = useState(allViewDataDefault);\r\n\r\n  const loadLayout = async () => {\r\n    const result = await getScannerAllViewData();\r\n    if (!result.success || result.data == undefined) return;\r\n\r\n    const validViewDatas = result.data.filter(d => d.fields);\r\n    const chartNumbers = validViewDatas.map(d => d.chart_number);\r\n    const allViewDataFiltered = allViewData.filter(d => !chartNumbers.includes(d.chart_number));\r\n    const newAllViewData = [...allViewDataFiltered, ...validViewDatas];\r\n\r\n    setAllViewData(newAllViewData);\r\n  }\r\n\r\n  useEffect(() => {\r\n    disableScroll.on();\r\n    loadLayout()\r\n    return () => {\r\n      disableScroll.off();\r\n    }\r\n  }, [])\r\n  \r\n  const handleChartsColumnChange = (option) => {\r\n    setChartColumn(option)\r\n  }\r\n\r\n  const calculateHeightStyle = () => {\r\n    if (chartColumn.value === 1 || chartColumn.value === 2) {\r\n      return 'full-height'\r\n    }\r\n    return 'half-height'\r\n  }\r\n\r\n  const calculateGridColumn = () => {\r\n    if (chartColumn.value === 1) {\r\n      return 12\r\n    } else if ((chartColumn.value === 2) || (chartColumn.value === 4)) {\r\n      return 6\r\n    }\r\n    return 4\r\n  }\r\n\r\n  const handleSignout = () => {\r\n    auth.signout()\r\n    history.push('/login')\r\n  }\r\n\r\n  const displayChart = () => {\r\n    return (\r\n      <div className={`row ${calculateHeightStyle()}`}>\r\n        <div className={`watch-list col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\r\n          <WatchListItem \r\n            chart_number={1}\r\n            chartColumn={chartColumn.value}\r\n            allViewData={allViewData}\r\n            setAllViewData={setAllViewData}\r\n          />\r\n        </div>\r\n        <div className={`watch-list col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\r\n          <WatchListItem \r\n            chart_number={2}\r\n            chartColumn={chartColumn.value}\r\n            allViewData={allViewData}\r\n            setAllViewData={setAllViewData}\r\n          />\r\n        </div>\r\n        <div className={`watch-list col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\r\n          <WatchListItem\r\n            chart_number={3}\r\n            chartColumn={chartColumn.value}\r\n            allViewData={allViewData}\r\n            setAllViewData={setAllViewData}\r\n          />\r\n        </div>\r\n        <div className={`watch-list col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\r\n          <WatchListItem \r\n            chart_number={4}\r\n            chartColumn={chartColumn.value}\r\n            allViewData={allViewData}\r\n            setAllViewData={setAllViewData}\r\n          />\r\n        </div>\r\n        <div className={`watch-list col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\r\n          <WatchListItem\r\n            chart_number={5}\r\n            chartColumn={chartColumn.value}\r\n            allViewData={allViewData}\r\n            setAllViewData={setAllViewData}\r\n          />\r\n        </div>\r\n        <div className={`watch-list col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\r\n          <WatchListItem\r\n            chart_number={6}\r\n            chartColumn={chartColumn.value}\r\n            allViewData={allViewData}\r\n            setAllViewData={setAllViewData}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"hunter-chart-container\">\r\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark hunter-nav-bar\">\r\n        <div className=\"logo-title\">\r\n          <a href=\"/chart\" className=\"hunter-navbar-brand\">\r\n            Violette AM - Client Portal\r\n          </a>\r\n        </div>\r\n        {(user.is_admin || (user.role?.length)) && (\r\n          <div className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/chart\"} className=\"nav-link\"></Link>\r\n            </li>\r\n            <div className=\"select-option\">\r\n              <Select\r\n                value={chartColumn}\r\n                onChange={handleChartsColumnChange}\r\n                options={optionsColumn}\r\n                placeholder=\"Columns\"\r\n              />\r\n            </div>\r\n            <div className=\"watch-list-nav-item\">\r\n              <Button\r\n                size=\"sm\"\r\n                color=\"danger\"\r\n                onClick={async () => {\r\n                  const result = await saveScannerAllViewData(allViewData);\r\n                  if (result.success) alert('All fields saved successfully!!!');\r\n                }}\r\n              >\r\n                save layout\r\n              </Button>\r\n\r\n              <Button\r\n                size=\"sm\"\r\n                color=\"danger\"\r\n                onClick={() => {\r\n                  window.location.reload();\r\n                }}\r\n              >\r\n                load layout\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <Collapse navbar isOpen={collapseOpen}>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <UncontrolledDropdown>\r\n                <DropdownToggle\r\n                  caret\r\n                  color=\"default\"\r\n                  nav\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  <div className=\"photo\">\r\n                    <img\r\n                      alt=\"...\"\r\n                      src={require(\"assets/img/anime3.png\").default}\r\n                    />\r\n                  </div>\r\n                  <p className=\"d-lg-none\">Log out</p>\r\n                </DropdownToggle>\r\n                <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\r\n                  <DropdownItem divider tag=\"li\" />\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\" onClick={() => {\r\n                      handleSignout()\r\n                    }}>Log out</DropdownItem>\r\n                  </NavLink>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n              <li className=\"separator d-lg-none\" />\r\n            </Nav>\r\n          </Collapse>    \r\n      </nav>\r\n      {!user.is_admin && !user?.role.length\r\n        ? (<div className=\"development-in-content dark\">\r\n            No Permission\r\n          </div>)\r\n        : selectedInstance === 'stress_test' || selectedInstance === 'optimization' \r\n        ? (<div className=\"development-in-content dark\">\r\n          In development\r\n        </div>)\r\n        : (<div className=\"graphs-container dark\">\r\n          {displayChart()}\r\n        </div>)\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WatchList;","import React from \"react\";\r\nimport {\r\n  Button\r\n} from \"reactstrap\";\r\n\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\nimport WatchList from \"components/WatchList\"\r\n\r\nimport { routes } from \"routes.js\";\r\n\r\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\r\n\r\nfunction MarketWatch() {\r\n  const [isShowSidebar, setShowSidebar] = React.useState(false);\r\n  const [selectedInstance, setSelectedInstance] = React.useState('market_watch');\r\n\r\n  const handleSidebarChange = () => {\r\n    setShowSidebar(!isShowSidebar);\r\n  };\r\n\r\n  const handleInstanceChange = (instance) => {\r\n    setSelectedInstance(instance)\r\n  }\r\n\r\n  return (\r\n    <BackgroundColorContext.Consumer>\r\n      {({ color }) => (\r\n        <React.Fragment>\r\n          <div className=\"wrapper hunter-wrapper\">\r\n          {!isShowSidebar && (\r\n            <Button\r\n              className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\r\n              onClick={handleSidebarChange}\r\n            >\r\n              <i className=\"tim-icons icon-align-left-2\"/>\r\n            </Button>\r\n          )}\r\n          {isShowSidebar && (\r\n              <Sidebar\r\n                isAdminPage={false}\r\n                routes={routes}\r\n                selectedInstance={selectedInstance}\r\n                handleSidebarChange={handleSidebarChange}\r\n                handleInstanceChange={handleInstanceChange}\r\n              />\r\n            )}\r\n            <div className=\"col-sm-12 hunter-watch-list-area\">\r\n                <WatchList />\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </BackgroundColorContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default MarketWatch;","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport Select from 'react-select'\r\nimport { Link } from \"react-router-dom\";\r\nimport \"react-datetime/css/react-datetime.css\";\r\n\r\nimport {\r\n  Collapse,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  NavLink,\r\n  Nav,\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MDBDataTableV5 } from 'mdbreact';\r\nimport Pagination from 'react-bootstrap/Pagination'\r\nimport { useAuth } from 'contexts/authContext';\r\nimport { getScannerDetails, getTickerScannerOptions } from 'api/Api'\r\nimport { useCsvDownloadUpdate } from \"contexts/CsvDownloadContext\";\r\nimport ButtonCsvDownload from 'components/ButtonCsvDownload'\r\nimport { useDatatable, useDatatableLoading } from \"contexts/DatatableContext\";\r\nimport Spinner from 'components/Spinner'\r\n\r\nconst ScannerComponent = () => {\r\n  const auth = useAuth();\r\n  const history = useHistory();\r\n  const [collapseOpen,] = React.useState(false)\r\n  const [exchange, setExchange] = React.useState(null)\r\n  const [sector, setSector] = useState(null);\r\n  const [industry, setIndustry] = useState(null);\r\n  const [optionsExchange, setOptionsExchanges] = useState([])\r\n  const [optionsSector, setOptionsSector] = useState([])\r\n  const [optionsIndustry, setOptionsIndustry] = useState([])\r\n\r\n  const [pageAmount, setPageAmount] = useState(10)\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [wholeRows, setWholeRows] = useState(0);\r\n  const [isLoadingData, setLoadingData] = useDatatableLoading()\r\n\r\n  const hearder_columns = useMemo(() => {\r\n    return [\r\n    {\r\n      label: 'Industry',\r\n      field: 'industry',\r\n      width: 200,\r\n      attributes: {\r\n        'aria-controls': 'DataTable',\r\n        'aria-label': 'symbol',\r\n      },\r\n    },\r\n    {\r\n      label: 'Sector',\r\n      field: 'sector',\r\n      width: 200,\r\n    },\r\n    {\r\n      label: 'Exchange',\r\n      field: 'exchange',\r\n      width: 200,\r\n    },\r\n    {\r\n      label: 'Country',\r\n      field: 'country',\r\n      width: 200,\r\n    },\r\n    {\r\n      label: 'Market Cap',\r\n      field: 'marketcap',\r\n      width: 200,\r\n    },\r\n    {\r\n      label: 'Symbol',\r\n      field: 'symbol',\r\n      width: 200,\r\n    },\r\n    {\r\n      label: 'Cik Id',\r\n      field: 'cik',\r\n    },\r\n  ]}, [])\r\n\r\n  const [datatable, setDatatable] = useDatatable({\r\n    columns: hearder_columns,\r\n    rows: [],\r\n  });\r\n\r\n  const updateCsvDownload = useCsvDownloadUpdate();\r\n\r\n  const wrapSetDatatable = (data) => {\r\n    setDatatable(data)\r\n    updateCsvDownload([...data.rows])\r\n  }\r\n\r\n  useEffect(() => {\r\n    const loadWholeOptions = async () => {\r\n      setLoadingData(true)\r\n      const scannerDetails = await getScannerDetails('', '', '', currentPage, pageAmount)\r\n\r\n      if (scannerDetails.success) {\r\n        wrapSetDatatable({\r\n          columns: hearder_columns,\r\n          rows: scannerDetails.result,\r\n        })\r\n        setWholeRows(scannerDetails.page_total)\r\n      }\r\n\r\n      const scannerOptions = await getTickerScannerOptions()\r\n      if (scannerOptions.success) {\r\n        const exchanges = [{\r\n          value: '',\r\n          label: 'All'\r\n        }]\r\n\r\n        scannerOptions.result.exchanges.map(exchange => {\r\n          if (exchange === '') {\r\n            return null\r\n          }\r\n          exchanges.push({\r\n            value: exchange,\r\n            label: exchange\r\n          })\r\n        })\r\n\r\n        const industries = [{\r\n          value: '',\r\n          label: 'All'\r\n        }]\r\n\r\n        scannerOptions.result.industry.map(industry => {\r\n          if (industry !== '' && industry !== null) {\r\n            industries.push({\r\n              value: industry,\r\n              label: industry\r\n            })\r\n          }\r\n        })\r\n\r\n        const sectors = [{\r\n          value: '',\r\n          label: 'All'\r\n        }]\r\n\r\n        scannerOptions.result.sector.forEach(sector => {\r\n          if (sector !== '' && sector !== null) {\r\n            sectors.push({\r\n              value: sector,\r\n              label: sector\r\n            })\r\n          }\r\n        })\r\n\r\n        setOptionsExchanges(exchanges)\r\n        setOptionsIndustry(industries)\r\n        setOptionsSector(sectors)\r\n      }\r\n      setLoadingData(false)\r\n    }\r\n\r\n    loadWholeOptions()\r\n  }, [])\r\n\r\n  const handleSignout = () => {\r\n    auth.signout()\r\n    history.push('/login')\r\n  }\r\n\r\n  const handleSectorChange = async (e) => {\r\n    setSector(e)\r\n\r\n    setLoadingData(true)\r\n    const scannerDetails = await getScannerDetails(exchange ? exchange.value : '', industry ? industry.value : '', e.value, currentPage, pageAmount)\r\n\r\n    if (scannerDetails.success) {\r\n      wrapSetDatatable({\r\n        columns: hearder_columns,\r\n        rows: scannerDetails.result,\r\n      })\r\n      setWholeRows(scannerDetails.page_total)\r\n    }\r\n    setLoadingData(false)\r\n  }\r\n\r\n  const handleExchangeChange = async (e) => {\r\n    setExchange(e)\r\n\r\n    setLoadingData(true)\r\n    const scannerDetails = await getScannerDetails(exchange ? exchange.value : '', industry ? industry.value : '', e.value, currentPage, pageAmount)\r\n\r\n    if (scannerDetails.success) {\r\n      wrapSetDatatable({\r\n        columns: hearder_columns,\r\n        rows: scannerDetails.result,\r\n      })\r\n      setWholeRows(scannerDetails.page_total)\r\n    }\r\n    setLoadingData(false)\r\n  }\r\n\r\n  const handleIndustryChange = async (e) => {\r\n    setIndustry(e)\r\n\r\n    setLoadingData(true)\r\n    const scannerDetails = await getScannerDetails(exchange ? exchange.value : '', e.value, sector ? sector.value : '')\r\n\r\n    wrapSetDatatable({\r\n      columns: hearder_columns,\r\n      rows: scannerDetails.result,\r\n    })\r\n    setLoadingData(false)\r\n  }\r\n\r\n  const loadScannerDetails = async () => {\r\n    setLoadingData(true)\r\n    const scannerDetails = await getScannerDetails(exchange ? exchange.value : '', industry ? industry.value : '', sector ? sector.value : '', currentPage, pageAmount)\r\n\r\n    wrapSetDatatable({\r\n      columns: hearder_columns,\r\n      rows: scannerDetails.result,\r\n    })\r\n    setWholeRows(scannerDetails.page_total)\r\n    setLoadingData(false)\r\n  }\r\n\r\n  const handlePrevClick = () => {\r\n    setCurrentPage(currentPage - 1)\r\n    loadScannerDetails(currentPage - 1)\r\n  }\r\n\r\n  const handleNextClick = () => {\r\n    setCurrentPage(currentPage + 1)\r\n    loadScannerDetails(currentPage + 1)\r\n  }\r\n\r\n  return (\r\n    <div className=\"hunter-chart-container\">\r\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark hunter-nav-bar\">\r\n        <div className=\"logo-title\">\r\n          <a href=\"/chart\" className=\"hunter-navbar-brand\">\r\n            Violette AM - Client Portal\r\n          </a>\r\n        </div>\r\n        <div className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to={\"/chart\"} className=\"nav-link\"></Link>\r\n          </li>\r\n        </div>\r\n        <Collapse navbar isOpen={collapseOpen}>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <UncontrolledDropdown nav>\r\n              <DropdownToggle\r\n                caret\r\n                color=\"default\"\r\n                nav\r\n                onClick={(e) => e.preventDefault()}\r\n              >\r\n                <div className=\"photo\">\r\n                  <img\r\n                    alt=\"...\"\r\n                    src={require(\"assets/img/anime3.png\").default}\r\n                  />\r\n                </div>\r\n                <p className=\"d-lg-none\">Log out</p>\r\n              </DropdownToggle>\r\n              <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\r\n                <DropdownItem divider tag=\"li\" />\r\n                <NavLink tag=\"li\">\r\n                  <DropdownItem className=\"nav-item\" onClick={() => {handleSignout()}}>Log out</DropdownItem>\r\n                </NavLink>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            <li className=\"separator d-lg-none\" />\r\n          </Nav>\r\n        </Collapse>\r\n      </nav>\r\n      <div className=\"col-sm-12 hunter-data-table-container scanner-page-container\">\r\n        <div className=\"hunter-data-table-title\">\r\n          Scanner Table\r\n        </div>\r\n        <div className=\"hunter-search-filter-area\">\r\n          <div className=\"select-option\">\r\n            <Select\r\n              value={exchange}\r\n              onChange={handleExchangeChange}\r\n              options={optionsExchange}\r\n              placeholder=\"Exchange\"\r\n            />\r\n          </div>\r\n          <div className=\"select-option\">\r\n            <Select\r\n              value={sector}\r\n              onChange={handleSectorChange}\r\n              options={optionsSector}\r\n              placeholder=\"Sector\"\r\n            />\r\n          </div>\r\n          <div className=\"select-option\">\r\n            <Select\r\n              value={industry}\r\n              onChange={handleIndustryChange}\r\n              options={optionsIndustry}\r\n              placeholder=\"Industry\"\r\n            />\r\n          </div>\r\n          <div className='input-group date hunter-date-time-picker' id='datetimepicker1'>\r\n            <ButtonCsvDownload filename={\"scanner.csv\"}>Csv Download</ButtonCsvDownload>\r\n          </div>\r\n        </div>\r\n        {isLoadingData && <div className=\"hunter-spinner-area\"><span className=\"mr-30\">Loading ...</span>    <Spinner>Loading</Spinner></div>}\r\n        {!isLoadingData && <>\r\n          <MDBDataTableV5\r\n            hover\r\n            maxHeight=\"500px\"\r\n            entriesOptions={[10, 25, 50, 100]}\r\n            entries={10}\r\n            pagesAmount={4}\r\n            data={datatable}\r\n            dark={true}\r\n            noBottomColumns={true}\r\n            small={true}\r\n            striped={true}\r\n            scrollY={true}\r\n          />;\r\n          <Pagination>\r\n            <Pagination.Item>{(currentPage-1)*10 + 1}</Pagination.Item>\r\n            <Pagination.Item>{(currentPage) * 10}</Pagination.Item>\r\n            <Pagination.Item> of </Pagination.Item>\r\n            <Pagination.Item> { wholeRows } </Pagination.Item>\r\n            <Pagination.Prev disabled={currentPage <= 0} onClick={() => { handlePrevClick() }}/>\r\n            <Pagination.Next disabled={(currentPage + 1) >= wholeRows / 10} onClick={() => { handleNextClick() }}/>\r\n          </Pagination>\r\n        </>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScannerComponent;\r\n","import React from \"react\";\r\nimport {\r\n  Button\r\n} from \"reactstrap\";\r\n\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\nimport ScannerComponent from 'components/Scanner/ScannerComponent.js'\r\n\r\nimport { routes } from \"routes.js\";\r\n\r\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\r\nimport { CsvDownloadProvider } from \"contexts/CsvDownloadContext\";\r\n\r\nfunction Scanner() {\r\n  const [isShowSidebar, setShowSidebar] = React.useState(false);\r\n  const [selectedInstance, setSelectedInstance] = React.useState('scanner');\r\n\r\n  const handleSidebarChange = () => {\r\n    setShowSidebar(!isShowSidebar);\r\n  };\r\n\r\n  const handleInstanceChange = (instance) => {\r\n    setSelectedInstance(instance)\r\n  }\r\n\r\n  return (\r\n    <BackgroundColorContext.Consumer>\r\n      {({ color }) => (\r\n        <React.Fragment>\r\n          <div className=\"wrapper hunter-wrapper\">\r\n            {!isShowSidebar && (\r\n              <Button\r\n                className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\r\n                onClick={handleSidebarChange}\r\n              >\r\n                <i className=\"tim-icons icon-align-left-2\"/>\r\n              </Button>\r\n            )}\r\n            {isShowSidebar && (\r\n              <Sidebar\r\n                isAdminPage={false}\r\n                routes={routes}\r\n                subInstance={'tradedatatable'}\r\n                selectedInstance={selectedInstance}\r\n                handleSidebarChange={handleSidebarChange}\r\n                handleInstanceChange={handleInstanceChange}\r\n              />\r\n            )}\r\n            <div className=\"col-sm-12\">\r\n              <CsvDownloadProvider>\r\n                <ScannerComponent />\r\n              </CsvDownloadProvider>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </BackgroundColorContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default Scanner;","import React from 'react'\r\nimport Chart from 'react-apexcharts'\r\nimport moment from \"moment\";\r\n\r\nexport class MultiLineChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      series: this.getSeries(),\r\n      options: {\r\n        chart: {\r\n          height: 350,\r\n          type: 'line',\r\n          zoom: {\r\n            enabled: false\r\n          }\r\n        },\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n        stroke: {\r\n          show: true,\r\n          curve: 'smooth',\r\n          lineCap: 'butt',\r\n          colors: undefined,\r\n          width: 2,\r\n          dashArray: 0,\r\n        },\r\n        title: {\r\n          text: props.isPercent ? 'Percent Gain/Lost' : 'Efficiency',\r\n          align: 'left',\r\n          style: {\r\n            fontSize:  '18px',\r\n            fontWeight:  'bold',\r\n            color: '#FFFFFF'\r\n          },\r\n        },\r\n        grid: {\r\n          show: false\r\n        },\r\n        xaxis: {\r\n          categories: this.getCategories(),\r\n          labels: {\r\n            show: true,\r\n            style: {\r\n              colors: '#FFFFFF',\r\n            },\r\n            formatter: (val, opt) =>\r\n              moment.utc(val).format(\"MM/DD hh:mm\")\r\n          },\r\n          datetimeUTC: true,\r\n        },\r\n        yaxis: {\r\n          labels: {\r\n            show: true,\r\n            style: {\r\n              colors: '#FFFFFF',\r\n            },\r\n            formatter: (value) => { return (value)?value.toFixed(5):0 },\r\n          },\r\n          axisBorder: {\r\n            show: true,\r\n          },\r\n          min: this.getMinValue(),\r\n          max: this.getMaxValue(),\r\n        },\r\n        legend: {\r\n          show: true,\r\n          labels: {\r\n            colors: ['#FFFFFF']\r\n          },\r\n          position: 'top'\r\n        }\r\n      },\r\n    };\r\n  }\r\n\r\n  getSeries() {\r\n    const series = []\r\n    this.props.chartData.map((data) => {\r\n      for (const property in data) {\r\n        series.push({\r\n          name: property,\r\n          data: data[property].map((o) => this.props.isPercent ? o.percent : o.efficiency)\r\n        })\r\n      }\r\n      return null\r\n    })\r\n    return series\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.chartData !== this.props.chartData) {\r\n      this.setState({\r\n        series: this.getSeries(),\r\n        options: {\r\n          xaxis: {\r\n            categories: this.getCategories(),\r\n            labels: {\r\n              show: true,\r\n              style: {\r\n                  colors: '#FFFFFF',\r\n              },\r\n              formatter: (val) =>\r\n                moment.utc(val).format(\"MM/DD\")\r\n            },\r\n            datetimeUTC: true,\r\n          },\r\n          yaxis: {\r\n            labels: {\r\n              show: true,\r\n              style: {\r\n                colors: '#FFFFFF',\r\n              },\r\n              formatter: (value) => value,\r\n              min: this.getMinValue(),\r\n              max: this.getMaxValue(),\r\n            },\r\n            axisBorder: {\r\n              show: true,\r\n            },\r\n          }\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  getMinValue() {\r\n    let series = [];\r\n    this.props.chartData.map((data) => {\r\n      for (const property in data) {\r\n        const rows = data[property].map(o => this.props.isPercent ? o.percent : o.efficiency)\r\n        series.push(Math.min(...rows))\r\n      }\r\n\r\n      return null\r\n    })\r\n    const min = Math.min(...series)\r\n    return min;\r\n  }\r\n\r\n  getMaxValue() {\r\n    let series = [];\r\n    this.props.chartData.map((data) => {\r\n      for (const property in data) {\r\n        const rows = data[property].map(o => this.props.isPercent ? o.percent : o.efficiency)\r\n        series.push(Math.max(...rows))\r\n      }\r\n      return null\r\n    })\r\n    const max = Math.max(...series)\r\n    return max;\r\n  }\r\n\r\n  getCategories() {\r\n    const categories = this.props.chartData.map((data) => {\r\n      for (const property in data) {\r\n        return data[property].map((o) => o.date)\r\n      }\r\n      return []\r\n    })\r\n\r\n    return categories[0]\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"chart\">\r\n        <Chart options={this.state.options} series={this.state.series} type=\"line\" height={350} />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport ReactApexChart from 'react-apexcharts'\r\n\r\nconst HeatMapChart = (props) => {\r\n  const generateData = (count, period) => {\r\n    const randomArray = []\r\n    for (let i = 0;i < count; i ++) {\r\n      const min = Math.ceil(period.min)\r\n      const max = Math.floor(period.max)\r\n      randomArray.push(Math.floor(Math.random() * (max - min) + min))\r\n    }\r\n    return randomArray\r\n  }\r\n\r\n  const [series, setSeries] = useState([])\r\n\r\n  const [chartOptions, setChartOptions] = useState(\r\n    {\r\n      chart: {\r\n        height: 350,\r\n        type: 'heatmap',\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      stroke: {\r\n        width: 1\r\n      },\r\n      colors: [\"#008FFB\"],\r\n      title: {\r\n        align: 'center',\r\n        text: 'HeatMap Chart Per Symbols',\r\n        style: {\r\n          color: '#FFFFFF'\r\n        }\r\n      },\r\n    },\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (props.multiSymbol && props.multiSymbol.length) {\r\n      const seriesBuffer = props.multiSymbol.map((symbol) => {\r\n        return {\r\n          name: symbol.value,\r\n          data: generateData(20, {\r\n            min: -30,\r\n            max: 55\r\n          })\r\n        }\r\n      }) \r\n      console.log('props.symbols', seriesBuffer)\r\n      setSeries(seriesBuffer)\r\n    }\r\n  }, [props.multiSymbol])\r\n\r\n  return (\r\n    <div id='chart'>\r\n      <ReactApexChart\r\n        options={chartOptions}\r\n        series={series}\r\n        type='heatmap'\r\n        height={350}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HeatMapChart","import React, { useState, useEffect } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nconst getWiningData = (chartData, isAverage) => {\r\n  return chartData.map((d) => isAverage ? d.avgWinning / 100 : d.winning )\r\n}\r\n\r\nconst getLosingData = (chartData, isAverage) => {\r\n  return chartData.map((d) => isAverage ? d.avgLosing / 100 : d.losing)\r\n}\r\n\r\nconst getSymbols = (chartData) => {\r\n  return chartData.map((d) => d.symbol)\r\n}\r\n\r\nconst optionCreator = (chartData, isAverage) => {\r\n  return {\r\n    chart: {\r\n      type: \"bar\",\r\n      width: \"100%\",\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      events: {\r\n        click: function (event, chartContext, config) {\r\n          console.log(\"clicked\");\r\n        }\r\n      }\r\n    },\r\n    states: {\r\n      normal: {\r\n        filter: {\r\n          type: \"none\"\r\n        }\r\n      },\r\n      active: {\r\n        filter: {\r\n          type: \"darken\",\r\n          value: 0.35\r\n        }\r\n      }\r\n    },\r\n    colors: [\"#00ff00\", `rgba(255,0,0, ${1 ? 0.5 : 1})`],\r\n    title: {\r\n      text: isAverage ? \"Winning & Losing Avg Percent\" : \"Wining & Losing Trades\",\r\n      align: \"left\",\r\n      offsetX: 8,\r\n      offsetY: -2,\r\n      style: {\r\n        fontSize: \"16px\",\r\n        color: '#FFFFFF'\r\n      }\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        endingShape: \"rounded\",\r\n        columnWidth: \"75%\",\r\n        barHeight: \"100%\",\r\n        dataLabels: {\r\n          position: \"top\"\r\n        }\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: true,\r\n      offsetY: -20,\r\n      style: {\r\n        fontSize: \"16px\",\r\n        colors: [\"#FFFFFF\", \"#FFFFFF\"]\r\n      },\r\n      formatter: (value, opts) => {\r\n        return isAverage ? value.toFixed(3) : value\r\n      },\r\n    },\r\n    stroke: {\r\n      show: true,\r\n      width: 1,\r\n      colors: [\"#fff\"]\r\n    },\r\n    xaxis: {\r\n      categories: getSymbols(chartData),\r\n      labels: {\r\n        show: true,\r\n        style: {\r\n            colors: '#FFFFFF',\r\n        },\r\n      },\r\n    },\r\n    grid: {\r\n      show: false\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        show: true,\r\n        style: {\r\n            colors: '#FFFFFF',\r\n        },\r\n        formatter: (value) => { return isAverage ? value.toFixed(5) : value },\r\n      },\r\n      axisBorder: {\r\n        show: true,\r\n      },\r\n    },\r\n    tooltip: {\r\n      enabled: true\r\n    },\r\n    legend: {\r\n      position: \"top\",\r\n      horizontalAlign: \"right\",\r\n      offsetY: -50,\r\n      fontSize: \"14px\",\r\n      labels: {\r\n        colors: \"#FFFFFF\"\r\n      },\r\n      markers: {\r\n        width: 16,\r\n        height: 16,\r\n        radius: 4\r\n      },\r\n      itemMargin: {\r\n        horizontal: 5,\r\n        vertical: 5\r\n      },\r\n      onItemHover: {\r\n        highlightDataSeries: true\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport default function GroupApexBar(props) {\r\n  const { data: chartData, isAverage } = props;\r\n  const [options, setOptions] = useState(optionCreator(chartData, isAverage));\r\n  const [series, setSeries] = useState([\r\n    {\r\n      data: getWiningData(chartData, isAverage)\r\n    },\r\n    {\r\n      data: getLosingData(chartData, isAverage)\r\n    }\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    setOptions(optionCreator(chartData, isAverage))\r\n    setSeries([\r\n      {\r\n        name: isAverage ? 'Winning Average' : 'Winning',\r\n        data: getWiningData(chartData, isAverage)\r\n      },\r\n      {\r\n        name: isAverage ? 'Losing Average' : 'Losing',\r\n        data: getLosingData(chartData, isAverage)\r\n      }\r\n    ])\r\n  }, [chartData, isAverage])\r\n\r\n  return (\r\n    <div id=\"chart\">\r\n      <ReactApexChart\r\n        options={options}\r\n        series={series}\r\n        type=\"bar\"\r\n        width={'100%'}\r\n        height={400}\r\n      />\r\n    </div>\r\n  );\r\n}","import { MultiLineChart } from './MultiLineChart'\r\nimport HeatMapChart from './HeatMapChart'\r\nimport GroupApexBar from './GroupBarChart'\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\r\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\r\nclass OptimizationChartItem extends React.Component {\r\n\trender() {\r\n    const { data: mainData, multiSymbol } = this.props;\r\n\r\n\t\tif (mainData == null) {\r\n\t\t\treturn <div>Loading...</div>\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<HeatMapChart multiSymbol={multiSymbol}/>\r\n\t\t\t\t<MultiLineChart chartData={mainData.percentEfficiency} isPercent={true}/>\r\n\t\t\t\t<TypeChooser>\r\n\t\t\t\t\t{type => <GroupApexBar type={type} data={mainData.winningLosing} isAverage={false}/>}\r\n\t\t\t\t</TypeChooser>\r\n\t\t\t\t<TypeChooser>\r\n\t\t\t\t\t{type => <GroupApexBar type={type} data={mainData.winningLosingAvg} isAverage={true}/>}\r\n\t\t\t\t</TypeChooser>\r\n\t\t\t\t<MultiLineChart chartData={mainData.percentEfficiency} isPercent={false}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nOptimizationChartItem.propTypes = {\r\n\tdata: PropTypes.array.isRequired,\r\n\twidth: PropTypes.number.isRequired,\r\n\tratio: PropTypes.number.isRequired,\r\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\r\n};\r\n\r\nOptimizationChartItem.defaultProps = {\r\n\ttype: \"svg\",\r\n};\r\nOptimizationChartItem = fitWidth(OptimizationChartItem);\r\n\r\nexport default OptimizationChartItem;","import React, { useState, useEffect } from \"react\";\r\nimport OptimizationChartItem from './OptimizationChartItem'\r\n\r\nconst OptimizationChart = (props) => {\r\n  const { \r\n    strategy,\r\n    chartPeriod,\r\n    multiSymbol,\r\n    microStrategy,\r\n    startDate,\r\n    endDate,\r\n  } = props;\r\n\r\n  const [exchange, setExchange] = useState('')\r\n  const [chartData, setChartData] = useState(null)\r\n\t\r\n  useEffect(() => {\r\n    const get_data = () => {\r\n      const symbols = multiSymbol.map((symbol) => symbol.value);\r\n      if (!symbols.length | !microStrategy) {\r\n        return;\r\n      }\r\n      \r\n      const requestOptions = {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n          'symbols': symbols,\r\n          \"macro\": strategy.value,\r\n          \"micro\": microStrategy.value,\r\n          'start_date': startDate,\r\n          'end_date': endDate,\r\n        })\r\n      };\r\n      try {\r\n        fetch(process.env.REACT_APP_BACKEND_URL+'/api/get_backtesting_result', requestOptions)\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            setChartData(data['chart_data'])\r\n            setExchange(data['exchange'])\r\n          })    \r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n    \r\n    if (multiSymbol.length) {\r\n      get_data()\r\n    }\r\n  }, [multiSymbol, microStrategy, startDate, endDate, strategy])\r\n    \r\n  const displayPerformanceChart = (type) => {\r\n    return (\r\n      <OptimizationChartItem type={type} data={chartData} multiSymbol={multiSymbol}/>\r\n    )\r\n  }\r\n\r\n  return (\r\n\t\t<>\r\n      {\r\n\t\t\t\tchartData == null ? <div>Loading...</div> :\r\n          <>\r\n            <div className=\"select-wrape\">\r\n              <div>\r\n                <strong>{chartPeriod}{exchange}</strong>\r\n                {/* [NASDAQ] */}\r\n              </div>\r\n            </div>\r\n            {displayPerformanceChart()}\r\n          </>\r\n        }\r\n\t\t</>\r\n  )\r\n}\r\n\r\nexport default OptimizationChart","import React, { useCallback, useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Select from 'react-select'\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport OptimizationChart from \"components/optimization-chart/OptimizationChart\"\r\nimport disableScroll from 'disable-scroll';\r\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\r\nimport MultiRangeSlider from 'components/MultiRangeSlider/MultiRangeSlider'\r\n\r\nimport {\r\n  Collapse,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  NavLink,\r\n  Nav,\r\n} from \"reactstrap\";\r\n\r\nimport { useAuth } from 'contexts/authContext';\r\n\r\nconst OptimizationChartPage = () => {\r\n  \r\n  const auth = useAuth();\r\n  const history = useHistory();\r\n  const [collapseOpen,] = React.useState(false)\r\n  const [timeFrame, setTimeFrame] = useState({\r\n    value: '2min',\r\n    label: '2min',\r\n  })\r\n  \r\n  const [optionsTimeFrame] = useState([\r\n    {\r\n      value: '2min',\r\n      label: '2min',\r\n    },\r\n    {\r\n      value: '12min',\r\n      label: '12min',\r\n    }\r\n  ])\r\n\r\n  const [selectedInstance] = useState({\r\n      value: 'Optimization',\r\n      label: 'Optimization'\r\n  })\r\n  \r\n  const [multiSymbol, setMultiSymbol] = useState([])\r\n  const [strategy, setStrategy] = useState(null)\r\n  const [symbolList, setSymbolList] = useState([])\r\n  const [microStrategy, setMicroStrategy] = useState(null)\r\n  const [apiFlag, setApiFlag] = useState(false)\r\n  const [tradeStartDate, setTradeStartDate] = useState('')\r\n  const [tradeEndDate, setTradeEndDate] = useState('')\r\n  const [strategyList, setStrategyList] = useState([]);\r\n  \r\n  const [optionsMicroStrategy, setOptionsMicroStrategy] = useState([])\r\n  \r\n  const [optionsStratgy, setOptionsStrategy] = useState([])\r\n\r\n  const  handleTimeFrameChange = (e) => {\r\n    setTimeFrame(e)\r\n  }\r\n\r\n  const getStrategyList = useCallback(\r\n    () => {\r\n      fetch(process.env.REACT_APP_BACKEND_URL + \"/api/get_strategy_list\")\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          setStrategyList(data.result);\r\n          const strategyOptions = data.result.map((o => {\r\n            return {\r\n              value: o.macro,\r\n              label: o.macro,\r\n            }\r\n          }))\r\n          setOptionsStrategy(strategyOptions);\r\n          setStrategy( strategyOptions[0] )\r\n          \r\n          if (data.result.length) {\r\n            data.result.forEach((item) => {\r\n              if (item.macro) {\r\n                const microStrategyOptions = item.micro.map(o => {\r\n                  return {\r\n                    value: o,\r\n                    label: o,\r\n                  }\r\n                })\r\n                \r\n                setOptionsMicroStrategy( microStrategyOptions )\r\n                setMicroStrategy( microStrategyOptions[0] )\r\n                \r\n                const symbolOptions = item.symbols.map(o => {\r\n                  return {\r\n                    value: o,\r\n                    label: o,\r\n                  }\r\n                })\r\n                setSymbolList(symbolOptions)\r\n              }\r\n            })\r\n          }\r\n        })   \r\n    },\r\n    [],\r\n  )\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem('user-info'))\r\n    if (user.is_admin || user.role.length) {\r\n      getStrategyList();\r\n    }\r\n    disableScroll.on();\r\n    return () => {\r\n      disableScroll.off();\r\n    }\r\n  }, [getStrategyList])\r\n  \r\n  useEffect(() => {\r\n    const get_tables = () => {\r\n      const requestOptions = {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n          'strategy': strategy.value\r\n        })\r\n      };\r\n      fetch(process.env.REACT_APP_BACKEND_URL + \"/api/tables\", requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          let temp_data = []\r\n          data.tables.map((x) => {\r\n            temp_data.push({\r\n              value: x,\r\n              label: x\r\n            });\r\n            return null\r\n          })\r\n          setSymbolList(temp_data)\r\n          setMultiSymbol([temp_data[0]])\r\n        })\r\n    }\r\n    \r\n    if (!apiFlag && strategy) {\r\n      get_tables();\r\n      setApiFlag(true)\r\n    }\r\n  }, [apiFlag, setApiFlag, strategy])\r\n\r\n  const handlMultiSymbolChange = (e) => {\r\n    setMultiSymbol(e)\r\n  }\r\n\r\n  const handleStrategyChange = async (e) => {\r\n    if (e) {\r\n      setStrategy(e)\r\n      if (strategyList.length) {\r\n        strategyList.forEach((item) => {\r\n          if (item.macro === e.value) {\r\n            const microStrategyOptions = item.micro.map(o => {\r\n              return {\r\n                value: o,\r\n                label: o,\r\n              }\r\n            })\r\n            setOptionsMicroStrategy( microStrategyOptions )\r\n            const is_2m = microStrategyOptions.filter((o => o.value === '2m'))\r\n            if (is_2m.length) {\r\n              setMicroStrategy({\r\n                value: '2m',\r\n                label: '2m'\r\n              })\r\n            } else {\r\n              setMicroStrategy(microStrategyOptions[2])\r\n            }\r\n\r\n            const symbolOptions = item.symbols.map(o => {\r\n              return {\r\n                value: o,\r\n                label: o,\r\n              }\r\n            })\r\n            setSymbolList(symbolOptions)\r\n            setMultiSymbol([symbolOptions[0]])\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleMicroStrategyChange = (e) => {\r\n    setMicroStrategy(e);\r\n  }\r\n\r\n  const selectDateRange = (startDate, endDate) => {\r\n    setTradeStartDate(startDate)\r\n    setTradeEndDate(endDate)\r\n  }\r\n\r\n  const handleSignout = () => {\r\n    auth.signout()\r\n    history.push('/login')\r\n  }\r\n\r\n  return (\r\n    <div className=\"hunter-chart-container\">\r\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark hunter-nav-bar\">\r\n        <div className=\"logo-title\">\r\n          <a href=\"/chart\" className=\"hunter-navbar-brand\">\r\n            Violette AM - Client Portal \r\n          </a>\r\n        </div>\r\n        <div className=\"navbar-nav ma-auto hunter-nav-bar-nav\">\r\n          <li className=\"nav-item\">\r\n            <Link to={\"/chart\"} className=\"nav-link\"></Link>\r\n          </li>\r\n          <div className=\"select-option\">\r\n            <Select\r\n              value={timeFrame}\r\n              onChange={handleTimeFrameChange}\r\n              options={optionsTimeFrame}\r\n              placeholder=\"Time Frame\"\r\n            />\r\n          </div>\r\n          <div className=\"select-multi-option hunter-multi-select-checkboxes\">\r\n            <ReactMultiSelectCheckboxes\r\n              options={symbolList}\r\n              value={multiSymbol}\r\n              onChange={handlMultiSymbolChange}\r\n            />\r\n          </div>\r\n          <div className=\"select-option\">\r\n            <Select\r\n              value={strategy}\r\n              onChange={handleStrategyChange}\r\n              options={optionsStratgy}\r\n              placeholder=\"Macro Strategy\"\r\n            />\r\n          </div>\r\n          <div className=\"select-option\">\r\n            <Select\r\n              name=\"filters\"\r\n              placeholder=\"Micro Strategy\"\r\n              value={microStrategy}\r\n              onChange={handleMicroStrategyChange}\r\n              options={optionsMicroStrategy}\r\n            />\r\n          </div>\r\n          <div className='date hunter-item-chart hunter-date-time-picker' id='datetimepicker1'>\r\n            <MultiRangeSlider\r\n              selectDateRange={selectDateRange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Collapse navbar isOpen={collapseOpen}>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <UncontrolledDropdown>\r\n              <DropdownToggle\r\n                caret\r\n                color=\"default\"\r\n                nav\r\n                onClick={(e) => e.preventDefault()}\r\n              >\r\n                <div className=\"photo\">\r\n                  <img\r\n                    alt=\"...\"\r\n                    src={require(\"assets/img/anime3.png\").default}\r\n                  />\r\n                </div>\r\n                <p className=\"d-lg-none\">Log out</p>\r\n              </DropdownToggle>\r\n              <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\r\n                <DropdownItem divider tag=\"li\" />\r\n                <NavLink tag=\"li\">\r\n                  <DropdownItem className=\"nav-item\" onClick={() => {\r\n                    handleSignout()\r\n                  }}>Log out</DropdownItem>\r\n                </NavLink>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            <li className=\"separator d-lg-none\" />\r\n          </Nav>\r\n        </Collapse>\r\n      </nav>\r\n      <div className=\"graphs-container dark\">\r\n        {microStrategy && (\r\n          < OptimizationChart\r\n            selectedInstance ={selectedInstance.value}\r\n            microStrategy={microStrategy}\r\n            multiSymbol={multiSymbol}\r\n            strategy={strategy}\r\n            isHomePage={false}\r\n            startDate={tradeStartDate}\r\n            endDate={tradeEndDate}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptimizationChartPage;\r\n","import React from \"react\";\r\nimport {\r\n  Button\r\n} from \"reactstrap\";\r\n\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\nimport OptimizationChartPage from \"components/optimization-chart/OptimizationChartPage\"\r\nimport { routes } from \"routes.js\";\r\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\r\n\r\nfunction Optimization() {\r\n  const [isShowSidebar, setShowSidebar] = React.useState(false);\r\n  const [selectedInstance, setSelectedInstance] = React.useState('market_watch');\r\n\r\n  const handleSidebarChange = () => {\r\n    setShowSidebar(!isShowSidebar);\r\n  };\r\n\r\n  const handleInstanceChange = (instance) => {\r\n    setSelectedInstance(instance)\r\n  }\r\n\r\n  return (\r\n    <BackgroundColorContext.Consumer>\r\n      {({ color }) => (\r\n        <React.Fragment>\r\n          <div className=\"wrapper hunter-wrapper\">\r\n          {!isShowSidebar && (\r\n            <Button\r\n              className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\r\n              onClick={handleSidebarChange}\r\n            >\r\n              <i className=\"tim-icons icon-align-left-2\"/>\r\n            </Button>\r\n          )}\r\n          {isShowSidebar && (\r\n            <Sidebar\r\n              isAdminPage={false}\r\n              routes={routes}\r\n              selectedInstance={selectedInstance}\r\n              handleSidebarChange={handleSidebarChange}\r\n              handleInstanceChange={handleInstanceChange}\r\n            />\r\n            )}\r\n            <div className=\"col-sm-12 hunter-watch-list-area\">\r\n              <OptimizationChartPage />\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </BackgroundColorContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default Optimization;","import React, {useState, useEffect, useContext} from 'react'\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { apiGetDatabases, apiDeleteDatabase, apiCreateBackup, apiExecuteBackup, apiStopBackup } from \"api/Api\"\r\n\r\nexport const DBDashboardContext = React.createContext()\r\nexport const DBDashboardUpdateContext = React.createContext()\r\nexport const DBDashboardLoadingContext = React.createContext()\r\nexport const DBDatabaseExportContext = React.createContext()\r\nexport const DBDatabaseDeleteContext = React.createContext()\r\nexport const DBBackupContext = React.createContext()\r\n\r\n\r\nexport function useBackupStatus() {\r\n  return useContext(DBBackupContext)\r\n}\r\n\r\nexport function useDBDashboard() {\r\n  return useContext(DBDashboardContext)\r\n}\r\n\r\nexport function useDBDashboardUpdate() {\r\n  return useContext(DBDashboardUpdateContext)\r\n}\r\n\r\nexport function useDBDashboardLoading() {\r\n  return useContext(DBDashboardLoadingContext)\r\n}\r\n\r\nexport const useActiveDatabase = () => {\r\n  const {hash} = useLocation()\r\n  const activeDatabase = hash.substring(1)\r\n\r\n  return activeDatabase\r\n}\r\n\r\nexport const useExportDatabase = () => {\r\n  return useContext(DBDatabaseExportContext)\r\n}\r\n\r\nexport const useDeleteDatabase = () => {\r\n  return useContext(DBDatabaseDeleteContext)\r\n}\r\n\r\nexport function DBDashboardProvider({children}) {\r\n  const [isLoading, setLoading] = useState(false)\r\n  const [databases, setDatabases] = useState([])\r\n  const [isBackupRunning, setBackupRunning] = useState(false)\r\n  const [currentBackupId, setCurrentBackupId] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    apiGetDatabases().then((response) => {\r\n      setDatabases(response.data)\r\n      setLoading(false)\r\n    })\r\n  }, [setDatabases])\r\n\r\n  const history = useHistory()\r\n\r\n  const updateDatabases = function(data) {\r\n    setDatabases(data)\r\n  }\r\n\r\n  const deleteDatabase = (databaseName) => {\r\n    const confirmed = window.confirm(`Are you sure to delete the database \"${databaseName}\"?`);\r\n\r\n    if (confirmed) {\r\n      apiDeleteDatabase(databaseName).then((response) => {\r\n        const updatedDatabases = databases.filter((filteredDatabase) => {\r\n          return filteredDatabase != databaseName\r\n        });\r\n        setDatabases(updatedDatabases)\r\n        history.push('/db_management')\r\n      })\r\n    }\r\n  }\r\n\r\n  const exportDatabase = (databaseName, collectionName='') => {\r\n    setBackupRunning(true)\r\n    apiCreateBackup(databaseName, collectionName)\r\n      .then(data => {\r\n        setCurrentBackupId(data.id)\r\n\r\n        // execute backup\r\n        apiExecuteBackup(data).then(data => {\r\n          setBackupRunning(false)\r\n        })\r\n\r\n      })\r\n  }\r\n\r\n  const stopExportDatabase = () => {\r\n    setBackupRunning(false)\r\n    if (currentBackupId) {\r\n      apiStopBackup({'id':currentBackupId}).then(data => {\r\n        setBackupRunning(false)\r\n        setCurrentBackupId(false)\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <DBDashboardLoadingContext.Provider value={isLoading}>\r\n      <DBBackupContext.Provider value={isBackupRunning}>\r\n        <DBDashboardContext.Provider value={databases}>\r\n          <DBDashboardUpdateContext.Provider value={updateDatabases}>\r\n            <DBDatabaseExportContext.Provider value={[exportDatabase, stopExportDatabase]}>\r\n              <DBDatabaseDeleteContext.Provider value={deleteDatabase}>\r\n                {children}\r\n              </DBDatabaseDeleteContext.Provider>\r\n            </DBDatabaseExportContext.Provider>\r\n          </DBDashboardUpdateContext.Provider>\r\n        </DBDashboardContext.Provider>\r\n      </DBBackupContext.Provider>\r\n    </DBDashboardLoadingContext.Provider>\r\n  )\r\n}","import React from 'react';\r\nimport { MDBLink, MDBIcon } from 'mdbreact';\r\nimport { useThemeColors } from 'contexts/ThemeContext'\r\nimport { useBackupStatus, useExportDatabase } from 'contexts/DBDashboardContext'\r\n\r\nfunction DBCollection(props) {\r\n  const colors = useThemeColors()\r\n  const dbName = props.dbname\r\n  const collectionName = props.name\r\n\r\n  const buttonStyle = {\r\n    color: colors.actionButtonColor,\r\n    backgroundColor: colors.actionButtonBg,\r\n  }\r\n\r\n  const textStyle = {\r\n    color: colors.tableTextColor,\r\n  }\r\n\r\n  const rowStyle = {\r\n    backgroundColor: colors.white,\r\n  }\r\n\r\n  const isBackupRunning = useBackupStatus()\r\n  const [handleBackup, ] = useExportDatabase()\r\n\r\n\r\n  return (\r\n    <>\r\n      <tr style={rowStyle}>\r\n        <td><span style={textStyle}>{props.index}.</span></td>\r\n        <td><span style={textStyle}>{props.name}</span></td>\r\n        <td>\r\n          <div class=\"d-flex align-items-center\">\r\n            <MDBLink disabled={isBackupRunning} onClick={(e) => {e.preventDefault(); props.onDeleteClick(); }} style={{...buttonStyle, color: colors.red}}><MDBIcon icon=\"trash\" /></MDBLink>\r\n            <MDBLink disabled={isBackupRunning} onClick={(e) => {e.preventDefault(); handleBackup(dbName, collectionName); }} style={buttonStyle}><MDBIcon icon=\"file-export\" /></MDBLink>\r\n            {isBackupRunning && <span class=\"ml-1 spinner-border spinner-border-sm text-primary\" role=\"status\" aria-hidden=\"true\"></span>}\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DBCollection;","import React, { useEffect, useState } from 'react';\r\nimport { apiGetCollections, apiDeleteCollection } from \"api/Api\"\r\nimport { useActiveDatabase } from 'contexts/DBDashboardContext'\r\nimport DBCollection from './Collection';\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\nimport Spinner from 'components/Spinner'\r\n\r\nfunction DBCollectionList() {\r\n  const [collections, setCollections] = useState([])\r\n  const dbName = useActiveDatabase()\r\n\r\n  const [isLoading, setLoading] = useState(true)\r\n\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    setCollections([])\r\n    apiGetCollections(dbName).then((response) => {\r\n      setCollections(response.data)\r\n      setLoading(false)\r\n    })\r\n  }, [useActiveDatabase()])\r\n\r\n  const deleteCollection = (collectionName) => {\r\n    const confirmed = window.confirm(`Are you sure to delete the collection \"${collectionName}\"?`);\r\n\r\n    if (confirmed) {\r\n      apiDeleteCollection(dbName, collectionName).then((response) => {\r\n        const updatedCollections = collections.filter((filteredCollection) => {\r\n          return filteredCollection != collectionName\r\n        });\r\n        setCollections(updatedCollections)\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  let index = 1\r\n\r\n\r\n  return (\r\n    <>\r\n      <MDBTable className=\"table table-hover\">\r\n        <MDBTableHead>\r\n          <tr>\r\n            <th width=\"2%\">#</th>\r\n            <th>Collection Name</th>\r\n            <td width=\"5%\"></td>\r\n          </tr>\r\n        </MDBTableHead>\r\n        <MDBTableBody>\r\n          {isLoading && <Spinner color=\"info\" />}\r\n          {collections && collections.map((collectionName) => {\r\n            return (\r\n              <DBCollection index={index++} key={collectionName} dbname={dbName} name={collectionName}\r\n                onDeleteClick={() => deleteCollection(collectionName)}\r\n              />\r\n            )\r\n          })}\r\n        </MDBTableBody>\r\n      </MDBTable>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DBCollectionList","import { MDBBtn, MDBIcon } from 'mdbreact'\r\nimport React from 'react'\r\nimport {useThemeColors} from 'contexts/ThemeContext'\r\nimport { useActiveDatabase, useBackupStatus, useDeleteDatabase, useExportDatabase } from 'contexts/DBDashboardContext'\r\n\r\nexport default function DBDatabaseActions() {\r\n  const dbName = useActiveDatabase()\r\n  const colors = useThemeColors()\r\n\r\n  const handleDelete = useDeleteDatabase()\r\n  const [handleBackup, ] = useExportDatabase()\r\n  const isBackupRunning = useBackupStatus()\r\n\r\n  return (\r\n    <>\r\n      {dbName &&\r\n      <div class=\"d-flex\">\r\n        <MDBBtn color=\"white\" onClick={(e) => {e.preventDefault(); handleDelete(dbName); }}><MDBIcon icon=\"trash\" style={{color: colors.white}} /></MDBBtn>\r\n        <MDBBtn disabled={isBackupRunning} className=\"d-flex flex-nowrap align-items-center\" color=\"primary\" onClick={(e) => {e.preventDefault(); handleBackup(dbName); }}>\r\n          <MDBIcon icon=\"file-export\" style={{color: colors.white}} /> <span class=\"ml-1\">Backup</span>\r\n          {isBackupRunning && <span class=\"ml-1 spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>}\r\n        </MDBBtn>\r\n      </div>}\r\n    </>\r\n  )\r\n}\r\n","import { MDBBox, MDBBreadcrumb, MDBBreadcrumbItem, MDBLink } from 'mdbreact';\r\nimport React from 'react';\r\nimport { useActiveDatabase } from 'contexts/DBDashboardContext'\r\n\r\nfunction DBPathway(props) {\r\n  const dbName = useActiveDatabase()\r\n  return (\r\n    <>\r\n      <MDBBreadcrumb style={{backgroundColor: 'transparent'}} className=\"mb-0\">\r\n        <MDBBreadcrumbItem>\r\n            Databases\r\n        </MDBBreadcrumbItem>\r\n        <MDBBreadcrumbItem active>\r\n            {dbName}\r\n        </MDBBreadcrumbItem>\r\n      </MDBBreadcrumb>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DBPathway;","import { MDBBox, MDBContainer } from 'mdbreact';\r\nimport DBDatabaseActions from './DatabaseActions';\r\nimport DBPathway from './Pathway';\r\nimport {useThemeColors} from 'contexts/ThemeContext'\r\n\r\nfunction DBControlBar(props) {\r\n  const colors = useThemeColors()\r\n  return (\r\n    <MDBBox class=\"d-flex justify-content-between align-items-center\" style={{backgroundColor: colors.darkBlue}}>\r\n      <DBPathway />\r\n      <DBDatabaseActions />\r\n    </MDBBox>\r\n  );\r\n}\r\n\r\nexport default DBControlBar;","import React from 'react';\r\nimport { MDBLink, MDBIcon } from 'mdbreact';\r\nimport { useThemeColors } from 'contexts/ThemeContext'\r\n\r\nfunction DBDatabase(props) {\r\n  const colors = useThemeColors()\r\n  const buttonStyle = {\r\n    color: colors.actionButtonColor,\r\n    backgroundColor: colors.actionButtonBg,\r\n  }\r\n\r\n  const textStyle = {\r\n    color: colors.tableTextColor,\r\n  }\r\n\r\n  const rowStyle = {\r\n    backgroundColor: colors.white,\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <tr style={rowStyle}>\r\n        <td><span style={textStyle}>{props.index}.</span></td>\r\n        <td><span style={textStyle}>{props.name}</span></td>\r\n        <td>\r\n          <div class=\"d-flex\">\r\n            <MDBLink onClick={(e) => {e.preventDefault(); props.onDeleteClick(); }} style={{...buttonStyle, color: colors.red}}><MDBIcon icon=\"trash\" /></MDBLink>\r\n            <MDBLink onClick={(e) => {e.preventDefault(); props.onSaveClick(); }} style={buttonStyle}><MDBIcon icon=\"file-export\" /></MDBLink>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DBDatabase","import React, { useEffect, useState } from 'react';\r\nimport { useDBDashboardLoading, useDBDashboard, useDeleteDatabase, useExportDatabase } from 'contexts/DBDashboardContext'\r\nimport DBDatabase from './Database';\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\nimport Spinner from 'components/Spinner'\r\n\r\nfunction DBDatabaseList() {\r\n  const databases = useDBDashboard()\r\n\r\n  const handleDelete = useDeleteDatabase()\r\n  const handleBackup = useExportDatabase()\r\n  const isLoading = useDBDashboardLoading()\r\n\r\n  let index = 1\r\n\r\n  return (\r\n    <>\r\n      <MDBTable className=\"table table-hover\">\r\n        <MDBTableHead>\r\n          <tr>\r\n            <th width=\"2%\">#</th>\r\n            <th>Database Name</th>\r\n            <td width=\"5%\"></td>\r\n          </tr>\r\n        </MDBTableHead>\r\n        <MDBTableBody>\r\n          {isLoading && <Spinner color=\"info\" />}\r\n          {databases && databases.map((databaseName) => {\r\n            return (\r\n              <DBDatabase index={index++} key={databaseName} name={databaseName}\r\n                onDeleteClick={() => handleDelete(databaseName)}\r\n                onSaveClick={() => handleBackup(databaseName)}\r\n              />\r\n            )\r\n          })}\r\n        </MDBTableBody>\r\n      </MDBTable>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DBDatabaseList","import { MDBCard, MDBCardBody, MDBCardHeader, MDBNav, MDBNavItem } from 'mdbreact';\r\nimport React from 'react';\r\nimport DBCollectionList from 'components/DBManagement/CollectionList'\r\nimport {useThemeColors } from 'contexts/ThemeContext'\r\nimport DBControlBar from './ControlBar';\r\nimport { useActiveDatabase } from 'contexts/DBDashboardContext';\r\nimport DBDatabaseList from './DatabaseList';\r\n\r\nfunction DBContent(props) {\r\n  const colors = useThemeColors()\r\n  const currentDb = useActiveDatabase()\r\n  console.log('currentDb')\r\n  console.log(currentDb)\r\n  console.log(colors)\r\n  return (\r\n    <>\r\n      <DBControlBar />\r\n      <MDBCard style={{backgroundColor: colors.lightBlue}}>\r\n        <MDBCardBody style={{ overflowY: 'auto' }}>\r\n          {currentDb && <DBCollectionList />}\r\n          {!currentDb && <DBDatabaseList />}\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DBContent;","import { MDBSpinner, MDBCard, MDBCardBody, MDBCardHeader, MDBIcon, MDBNav, MDBNavItem, MDBNavLink } from \"mdbreact\"\r\nimport { useActiveDatabase, useDBDashboard, useDBDashboardLoading } from \"contexts/DBDashboardContext\"\r\nimport Spinner from 'components/Spinner'\r\n\r\nconst DBSidebar = () => {\r\n  const activeDatabase = useActiveDatabase()\r\n  const databases = useDBDashboard()\r\n  const isLoading = useDBDashboardLoading()\r\n\r\n  return (\r\n    <>\r\n      <MDBCard style={{backgroundColor: '#343a40'}}>\r\n        <MDBCardHeader>DATABASES</MDBCardHeader>\r\n        <MDBCardBody style={{ overflowY: 'auto'}}>\r\n          <MDBNav>\r\n            <MDBNavItem>\r\n              {isLoading && <Spinner color=\"info\" />}\r\n              {databases && databases.map(name => {\r\n                return (\r\n                  <MDBNavLink key={name} disabled={name === activeDatabase} to={'#'+name} style={(name===activeDatabase)?{color: 'lightgray'}:{color: 'white'}}>\r\n                    <MDBIcon icon=\"database\" />{\" \"}{name}\r\n                  </MDBNavLink>\r\n                )\r\n              })}\r\n            </MDBNavItem>\r\n          </MDBNav>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DBSidebar","import DBContent from \"./Content\"\r\nimport DBSidebar from \"./Sidebar\"\r\nimport { useBackupStatus, useExportDatabase } from 'contexts/DBDashboardContext'\r\nimport { useThemeColors } from 'contexts/ThemeContext'\r\nimport Spinner from 'components/Spinner'\r\nimport { MDBBtn } from 'mdbreact'\r\n\r\nconst { MDBContainer, MDBRow, MDBCol } = require(\"mdbreact\")\r\n\r\n\r\nconst DBDashboard = () => {\r\n  const isBackupRunning = useBackupStatus()\r\n  const [, stopBackup] = useExportDatabase()\r\n  console.log('isBackupRunning')\r\n  console.log(isBackupRunning)\r\n\r\n  const colors = useThemeColors()\r\n\r\n  return (\r\n    <>\r\n      <MDBContainer fluid={true}>\r\n        <MDBRow>\r\n          <MDBCol><div className=\"hunter-data-table-title\">DB Management</div></MDBCol>\r\n        </MDBRow>\r\n        <MDBRow>\r\n          <MDBCol size=\"3\"><DBSidebar /></MDBCol>\r\n          <MDBCol><DBContent /></MDBCol>\r\n        </MDBRow>\r\n      </MDBContainer>\r\n\r\n      {isBackupRunning &&\r\n        (<div className=\"d-flex position-fixed align-items-center justify-content-center\" style={{\r\n            left: 0,\r\n            right: 0,\r\n            top: 0,\r\n            bottom: 0,\r\n            background: 'rgba(0,0,0,0.9)',\r\n            zIndex: 9999,\r\n          }}>\r\n            <div class=\"d-flex flex-column align-items-center justify-content-center px-5 py-3 pt-5 rounded rounded-5\" style={{background: colors.white}}>\r\n              <div className=\"mb-5\"><Spinner>Loading</Spinner><span class=\"ml-2\" style={{color: colors.darkBlue}}>Processing...</span></div>\r\n              <MDBBtn color=\"red\" onClick={(e) => {e.preventDefault(); stopBackup(); }}>Stop</MDBBtn>\r\n            </div>\r\n        </div>)\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DBDashboard","import React, { useState, useEffect } from 'react'\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\r\nimport { routes } from \"routes.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar\";\r\nimport DBDashboard from \"components/DBManagement/Dashboard\";\r\nimport {\r\n  Button\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DBDashboardProvider } from 'contexts/DBDashboardContext'\r\n\r\nconst DashboardWrapper = () => {\r\n  const history = useHistory();\r\n  const [isShowSidebar, setShowSidebar] = React.useState(false);\r\n  const [selectedInstance, setSelectedInstance] = React.useState('admin_tab');\r\n  const [user] = useState(JSON.parse(localStorage.getItem('user-info')));\r\n\r\n\r\n  const handleSidebarChange = () => {\r\n    setShowSidebar(!isShowSidebar);\r\n  };\r\n\r\n  const handleInstanceChange = (instance) => {\r\n    setSelectedInstance(instance)\r\n  }\r\n\r\n  useEffect (() => {\r\n    console.log('user.is_admin???', user.is_admin)\r\n    if (!user.is_admin) {\r\n      history.pushState('/')\r\n    }\r\n  }, [user, history])\r\n\r\n  return (\r\n    <DBDashboardProvider>\r\n      <React.Fragment>\r\n        <AdminNavbar nav=\"true\"/>\r\n        <div className=\"dashboard-wrapper\">\r\n            {!isShowSidebar && (\r\n              <Button\r\n                className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\r\n                onClick={handleSidebarChange}\r\n              >\r\n                <i className=\"tim-icons icon-align-left-2\"/>\r\n              </Button>\r\n            )}\r\n            {isShowSidebar && (\r\n              <Sidebar\r\n                isAdminPage={false}\r\n                routes={routes}\r\n                subInstance={'systemfilemanager'}\r\n                handleSidebarChange={handleSidebarChange}\r\n                selectedInstance={selectedInstance}\r\n                handleInstanceChange={handleInstanceChange}\r\n              />\r\n            )}\r\n            <div className=\"col-sm-12 hunter-data-table-container\">\r\n              <DBDashboard></DBDashboard>\r\n            </div>\r\n        </div>\r\n      </React.Fragment>\r\n    </DBDashboardProvider>\r\n  )\r\n}\r\n\r\nexport default DashboardWrapper","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport HomePage from \"layouts/User/HomePage\"\r\nimport Login from \"layouts/User/Login\"\r\nimport AdminLayout from \"layouts/Admin/Admin.js\";\r\nimport UserManage from \"layouts/Admin/UserManage.js\";\r\nimport LinkManage from \"layouts/Admin/LinkManage\";\r\nimport PriceData from \"layouts/User/PriceData\";\r\nimport TradeData from \"layouts/User/TradeData\";\r\nimport HybridView from \"layouts/User/HybridView\";\r\nimport FinancialDashboard from \"layouts/User/FinancialDashboard\";\r\nimport NewsDashboard from \"layouts/User/NewsDashboard\";\r\n\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"assets/scss/black-dashboard-react.scss\";\r\nimport \"assets/demo/demo.css\";\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport \"./App.css\";\r\nimport \"assets/css/nucleo-icons.css\";\r\n\r\nimport FileManager from \"components/SystemFileManager/FileManager\";\r\nimport ThemeContextWrapper from \"./components/ThemeWrapper/ThemeWrapper\";\r\nimport BackgroundColorWrapper from \"./components/BackgroundColorWrapper/BackgroundColorWrapper\";\r\nimport ProvideAuth from 'contexts/authContext'\r\nimport PrivateRoute from 'layouts/Auth/PrivateRoute'\r\nimport SignUp from 'layouts/User/SignUp'\r\nimport Verify from 'layouts/User/Verify'\r\nimport Floats from \"layouts/User/Floats\";\r\nimport ForgotPassword from 'layouts/User/ForgotPassword'\r\nimport PasswordResetConfirm from 'layouts/User/PasswordResetConfirm'\r\nimport MarketWatch from 'layouts/User/MarketWatch'\r\nimport Scanner from 'layouts/User/Scanner'\r\nimport Optimization from 'layouts/User/Optimization'\r\nimport DBManagementDashboardWrapper from './components/DBManagement/DashboardWrapper'\r\nimport { DatatableProvider } from \"contexts/DatatableContext\";\r\n\r\nReactDOM.render(\r\n  <ThemeContextWrapper>\r\n    <BackgroundColorWrapper>\r\n      <ProvideAuth>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <PrivateRoute path=\"/admin/usermanage\">\r\n              <UserManage />\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/admin/linkmanage\">\r\n              <LinkManage />\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/admin\">\r\n              <UserManage />\r\n            </PrivateRoute>\r\n            <Route path=\"/login\" render={(props) => <Login {...props} />} />\r\n            <Route path=\"/signup\" render={(props) => <SignUp {...props} />} />\r\n            <Route path=\"/verify\" render={(props) => <Verify {...props} />} />\r\n            <Route path=\"/forgot_password\" render={(props) => <ForgotPassword {...props} />} />\r\n            <Route path=\"/password-reset-confirm/:uuid/:token\" render={(props) => <PasswordResetConfirm {...props} />} />\r\n            <PrivateRoute path=\"/botmanagement\">\r\n              <FileManager/>\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/floats\">\r\n              <DatatableProvider>\r\n                <Floats />\r\n              </DatatableProvider>\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/market_watch\">\r\n              <MarketWatch />\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/optimization\">\r\n              <Optimization />\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/pricedatatable\">\r\n              <PriceData />\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/tradedatatable\">\r\n              <DatatableProvider>\r\n                <TradeData />\r\n              </DatatableProvider>\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/hybrid_view\">\r\n              <HybridView />\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/financial_data\">\r\n              <DatatableProvider>\r\n                <FinancialDashboard />\r\n              </DatatableProvider>\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/news_data\">\r\n              <DatatableProvider>\r\n                <NewsDashboard />\r\n              </DatatableProvider>\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/scanner\">\r\n              <DatatableProvider>\r\n                <Scanner />\r\n              </DatatableProvider>\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/db_management\">\r\n              <DBManagementDashboardWrapper />\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/\">\r\n              <HomePage />\r\n            </PrivateRoute>\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </ProvideAuth>\r\n    </BackgroundColorWrapper>\r\n  </ThemeContextWrapper>,\r\n  document.getElementById(\"root\")\r\n);\r\n","export default __webpack_public_path__ + \"static/media/anime3.4438e506.png\";"],"sourceRoot":""}