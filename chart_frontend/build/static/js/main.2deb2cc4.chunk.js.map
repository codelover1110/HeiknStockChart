{"version":3,"sources":["components/Sidebar/Sidebar.js","contexts/BackgroundColorContext.js","components/Dropdown/Dropdown.js","routes.js","components/Interactiveutils.js","components/trades-chart/TradesChart.js","components/performance-chart/MultiLineChart.js","components/performance-chart/GroupBarChart.js","components/performance-chart/PerformanceChart.js","api/Api.js","components/stock-chart/StockChart.js","contexts/authContext.js","layouts/User/HomePage.js","components/HeiknStockChart.js","components/MultiRangeSlider/MultiRangeSlider.js","components/ItemChart.js","components/HeiknStockSlicedChart.js","utils/helper.js","layouts/User/Login.js","components/Navbars/AdminNavbar.js","layouts/Admin/Admin.js","layouts/Admin/UserManage.js","layouts/Admin/LinkManage.js","contexts/CsvDownloadContext.js","components/ButtonCsvDownload.js","contexts/DatatableContext.js","components/Spinner.js","components/HeiknDatatable.js","components/Datatable/PriceDataTable.js","layouts/User/PriceData.js","components/Datatable/TradeDataTable.js","layouts/User/TradeData.js","components/HybridViewChartTable/HybridViewTable.js","components/HybridViewChartTable/HybridViewChartTable.js","layouts/User/HybridView.js","components/FinancialDashboard/Header.js","components/FinancialDashboard/BarChart/interactiveutils.js","components/FinancialDashboard/BarChart/Chart.js","components/FinancialDashboard/ChartTools.js","components/FinancialDashboard/BarChart/index.js","components/FinancialDashboard/GraphTypes.js","components/FinancialDashboard/StockTypes.js","components/FinancialDashboard/FinancialDataTable.js","components/FinancialDashboard/FinancialStatementsDataTable.js","layouts/User/FinancialDashboard.js","components/CustomSelect.js","components/TextEditor/Editor.js","components/SystemFileManager/FileManager.js","contexts/ThemeContext.js","components/ThemeWrapper/ThemeWrapper.js","components/BackgroundColorWrapper/BackgroundColorWrapper.js","layouts/Auth/PrivateRoute.js","layouts/User/SignUp.js","layouts/User/Verify.js","components/Floats/FloatsComponent.js","layouts/User/Floats.js","layouts/User/ForgotPassword.js","layouts/User/PasswordResetConfirm.js","components/FinancialDashboard/SmallBarChart/interactiveutils.js","components/FinancialDashboard/SmallBarChart/Chart.js","components/FinancialDashboard/SmallBarChart/index.js","components/WatchListEditColumnWidget/components/modal/dropDown/index.js","components/WatchListEditColumnWidget/components/modal/Widget.js","components/WatchListEditColumnWidget/WatchListEditColumnWidget.js","components/WatchListItem/WatchListItem.js","components/WatchList.js","layouts/User/MarketWatch.js","components/Scanner/ScannerComponent.js","layouts/User/Scanner.js","components/optimization-chart/MultiLineChart.js","components/optimization-chart/HeatMapChart.js","components/optimization-chart/GroupBarChart.js","components/optimization-chart/OptimizationChartItem.js","components/optimization-chart/OptimizationChart.js","components/optimization-chart/OptimizationChartPage.js","layouts/User/Optimization.js","contexts/DBDashboardContext.js","components/DBManagement/Collection.js","components/DBManagement/CollectionList.js","components/DBManagement/DatabaseActions.js","components/DBManagement/Pathway.js","components/DBManagement/ControlBar.js","components/DBManagement/Database.js","components/DBManagement/DatabaseList.js","components/DBManagement/Content.js","components/DBManagement/Sidebar.js","components/DBManagement/Dashboard.js","components/DBManagement/DashboardWrapper.js","index.js","assets/img/anime3.png"],"names":["ps","backgroundColors","BackgroundColorContext","createContext","color","changeColor","Dropdown","props","items","title","icon","instance","handleClick","isActive","subInstance","useState","isOpen","setOpen","className","onClick","map","item","e","pathname","id","label","Sidebar","history","useHistory","sidebarRef","React","useRef","JSON","parse","localStorage","getItem","user","userRole","setUserRole","useEffect","role","navigator","platform","indexOf","PerfectScrollbar","current","suppressScrollX","suppressScrollY","destroy","handleInstanceChange","locationState","initInstance","push","state","isAdminPage","routes","selectedInstance","handleSidebarChange","Consumer","data","ref","prop","key","name","is_admin","includes","defaultProps","rtlActive","adminRoutes","saveInteractiveNodes","type","chartId","node","isNotDefined","interactiveNodes","getInteractiveNodes","this","rsiAppearance","stroke","macd","signal","fille","bearPower","CandleStickChartWithEquidistantChannel","handleEvents","handleZoom","hideTextLabel","addTextLable","bind","onKeyPress","onDrawComplete","saveInteractiveNode","saveCanvasNode","handleSelection","enableInteractiveObject","x","y","channels_1","channels_3","valueText","dateText","status","isFullChart","canvasNode","document","addEventListener","subscribe","listener","unsubscribe","removeEventListener","setState","formatter","Intl","DateTimeFormat","month","formatterW","weekday","month2","format","datum","date","week2","dateElem","getDate","getFullYear","high","action","interactives","toObject","each","objects","indicator","indicators","filter","value","length","keyCode","which","console","log","selected","cancelDrag","terminate","isHomePage","index","isIncludeIndicators","ema20","ema","options","windowSize","merge","d","c","accessor","ema50","ha","heikinAshi","macdCalculator","fast","slow","atr14","atr","initialData","width","ratio","chartColumn","extendMarketTime","forEach","line","dayjs","toDate","calculatedData","discontinuousTimeScaleProvider","inputDateAccessor","xScaleProvider","xScale","xAccessor","displayXAccessor","defaultAnnotationProps","longAnnotationProps","yScale","low","calculateTooltipOffset0","fill","path","buyPath","tooltip","trades","trade","longShort","price","trade_date","replace","shortAnnotationProps","calculateTooltipOffset1","sellPath","xExtents","last","Math","max","xDisplayFormatProps","xDisplayFormat","timeFormat","ohlcFormat","volumeFormat","percentFormat","displayTexts","xDisplayFormatProps1","o","h","l","v","na","xDisplayFormatProps2","symbol","SMATooltipProps","valueFill","height","calculateHeight","margin","left","right","top","bottom","seriesName","redraw","yExtents","padding","axisAt","orient","tickStroke","ticks","at","displayFormat","close","open","wickStroke","origin","with","SvgPathAnnotation","when","strategy","microStrategy","usingProps","volume","w","calculateMainHeightOffset","tickFormat","yAccessor","rsi","calculateOffset","baseAt","side","yValue","yLabel","yDisplayFormat","appearance","rsi2","rsi3","heik","heik2","enabled","drawingObjectMap","EquidistantChannel","onSelect","classes","CandleChart","rx","ry","CandleChart_type_date","textAnchor","dy","CandleChart_type_value","Component","fitWidth","withStyles","fontSize","borderRadius","fontWeight","deal_green_shadowed","textShadow","deal_red_shadowed","MultiLineChart","series","getSeries","chart","zoom","dataLabels","show","curve","lineCap","colors","undefined","dashArray","text","isPercent","align","style","grid","xaxis","categories","getCategories","labels","val","opt","moment","utc","datetimeUTC","yaxis","toFixed","axisBorder","min","getMinValue","getMaxValue","legend","position","chartData","property","percent","efficiency","prevProps","rows","getWiningData","isAverage","isTotal","avgWinning","totWinning","winning","getLosingData","avgLosing","totLosing","losing","getSymbols","optionCreator","formatAvg","parseFloat","toolbar","events","click","event","chartContext","config","states","normal","active","offsetX","offsetY","plotOptions","bar","endingShape","columnWidth","barHeight","opts","horizontalAlign","markers","radius","itemMargin","horizontal","vertical","onItemHover","highlightDataSeries","GroupApexBar","setOptions","setSeries","PerformanceChart","mainData","totalPercentGainLost","percentEfficiency","winningLosing","winningLosingAvg","totWinLose","http","Axios","create","baseURL","process","headers","request","req","a","method","url","params","body","response","success","error","getStrategyListReq","getTablesReq","getDataReq","getDataSliceReq","getDataExtendedSliceReq","getDataExtendedReq","getBacktestingResultReq","filterPriceData","timeFrame","tradeStartDate","tradeEndDate","currentPage","pageAmount","requestOptions","stringify","fetch","then","json","candles","page_total","filterTradesData","macroStrategy","trades_data","macro_strategy","micro_strategy","quantity","getAllSymbols","temp_data","tables","createSignUpLink","roles","link","res","getActiveLinks","sendSignUpLink","email","forgotPassword","passwordConfirmReset","password1","password2","getModuleTypeNames","getFileTypeNames","moduleType","param_type","convertArraytoString","src","dest","comma","convertStringtoArray","split","transformingProcessConfigToQuery","settings","watchlist","position_sizing","order_routing","data_source","live_trading","starting_cash","extended_hours","indicator_signalling","asset_class","transformingProcessConfigFromParam","saveConfigFile","config_collection","saveScriptFile","filename","contents","isUpdate","getUserList","updateUserRole","deleteUser","getConfigFileList","collection","getBotConfigFileList","getConfigFileDetail","result","getBotStatusList","updateBotStatus","botName","botAction","apiUrl","message","getBotConfigList","getNewsFinancialData","getIncomeStatement","getBalanceSheet","getCashStatement","getFinancialTotalData","getStockModalData","getMultiFinancials","symbols","statement_type","results","saveScannerView","chart_number","fields","getScannerViewData","getScannerDetails","exchange","industry","sector","apiURL","getTickerScannerOptions","getFloatsFilterOptions","getFloatsDetails","pageNumber","saveScannerAllViewData","allViewData","getScannerAllViewData","getSymbolsByMicroStrategy","macroStrat","microStrat","getIndicators","getIndicatorSignallingList","apiGetDatabases","header","apiGetCollections","dbName","URL","search","URLSearchParams","db_name","toString","apiDeleteCollection","collectionName","collection_name","apiDeleteDatabase","getWatchListAll","apiCreateBackup","apiExecuteBackup","backup_id","contentType","get","blob","window","createObjectURL","createElement","href","download","apiStopBackup","StockChart","viewType","multiSymbol","selectedTradeDB","chartPeriod","selectedSymbolType","startDate","endDate","isSliced","dbname","setDbname","setChartData","get_data","requestBody","dataRes","converDate","Date","filteredSymbols","backtestingResultRes","displayChart","authContext","authUser","isAuthenticated","signin","password","formData","username","user_id","Error","catch","err","signup","first_name","last_name","signup_path","verify","userId","code","num","signout","removeItem","useAuth","useContext","ProvideAuth","children","auth","useProvideAuth","Provider","HeiknStockChart","handleChartRedirect","setSymbol","setIndicators","isShowMicro","setIsShowMicro","symbolList","setSymbolList","collapseOpen","setChartColumn","selectedViewType","setSelectedViewType","setMicroStrategy","setStrategy","strategyList","setStrategyList","setExtendMarketTime","optionsViewTypes","setOptionsViewTypes","optionsMicroStrategy","setOptionsMicroStrategy","optionsStratgy","setOptionsStrategy","optionsIndicator","setOptionsIndicator","optionsIndicatorExtend","setOptionsIndicatorExtend","optionsMarketTime","getStrategyList","useCallback","strategyListRes","strategyOptions","macro","flag","microStrategyOptions","micro","symbolOptions","get_tables","tablesRes","indicatorList","disableScroll","on","off","handleStrategy","handleMicroStrategyChange","calculateGridColumn","to","onChange","initStrategy","initMicroStrategy","initIndicators","initSymbol","placeholder","isMulti","option","navbar","caret","nav","preventDefault","alt","require","default","tag","divider","selectDateRange","startedDate","subtract","endedDate","setTradeStartDate","setTradeEndDate","handleDateRangeChange","rangeValue","isFlag","add","Form","Group","as","Row","disabled","defaultValue","step","onAfterChange","HeiknStockChartItem","location","setMultiSymbol","apiFlag","setApiFlag","handleStrategyChange","MultiRangeSlider","HeiknStockSlicedChart","HomePage","setViewType","isShowSidebar","setShowSidebar","setSelectedInstance","useLocation","mainPanelRef","documentElement","classList","remove","querySelectorAll","i","scrollTop","scrollingElement","alert","Fragment","validateEmail","test","String","toLowerCase","currentDateString","getMonth","day","Login","setError","isLoading","setIsLoading","setMessage","setEmail","setPassword","login","historyState","target","handleEmailChange","required","handlePasswordChange","htmlFor","AdminNavbar","modalSearch","setmodalSearch","setcolor","updateColor","innerWidth","toggleModalSearch","classNames","expand","fluid","modalClassName","toggle","Admin","UserManage","isRequest","setIsRequest","isShowUpdateRoleModal","setIsShowUpdateRoleModal","setRoles","userlist","setUserList","selectedUserId","setSelectedUserId","sidebarOpened","setsidebarOpened","optionsRole","fetchUserList","list","users","is_superuser","size","showUpdateUserRoleModal","confirm","toggleSidebar","getBrandText","layout","columns","field","handleRolesChange","handleUpdateRoleModalClose","transformUserRole","roleValues","coma","handleUserRoleUpdate","Modal","onHide","Header","closeButton","Title","Body","Footer","variant","brandText","btn","LinkManage","isShowSendModal","setIsShowSendModal","isShowCreateLinkModal","setShowCreateLinkModal","selectedLink","setSelectedLink","fetchActiveLinks","links","filteredLinks","expired","linklist","showSendEmailModal","setLinkList","handleCreateLinkModalClose","handleCreateLinkClick","handleLinkCreate","handleSendEmailModalClose","handleLinkToEmailSend","CsvDownloadContext","CsvDownloadUpdateContext","useCsvDownload","useCsvDownloadUpdate","CsvDownloadProvider","dataset","setDataset","ButtonCsvDownload","DatatableContext","DatatableLoadingContext","PaginationContext","PaginationUpdatingContext","useDatatableLoading","useDatatable","usePagination","usePaginationUpdate","DatatableProvider","setLoading","itemsPerPage","setItemsPerPage","setCurrentPage","totalItems","setTotalItems","datatable","setDatatable","parseInt","Spinner","HeiknDatatable","isLoadingData","hover","maxHeight","entriesOptions","entries","pagesAmount","dark","noBottomColumns","small","striped","scrollY","displayEntries","info","paging","class","marginLeft","Pagination","Item","Prev","Next","PriceDataTable","setTimeFrame","optionsSymbol","setOptionsSymbol","optionsTimeFrame","hearder_columns","useMemo","attributes","sort","setLoadingData","updateCsvDownload","getPriceTrades","PriceData","TradeDataTable","setMacroStrategy","optionsStrategy","getTrades","TradeData","HybridViewTable","isLoaded","wholeRows","setWholeRows","get_trades","loadPriceDetails","HybridViewChartTable","setIsLoaded","HybridView","selectedHeaderNav","setSelectedHeaderNav","handleNavClicked","isDefined","ema26","ema12","dataPoints","calendarDate","ChartTools","aggregationTypeForOne","setAggregrationTypeForOne","handleAggregationForOneClicked","aggregationType","backgroundColor","GroupBarChart","globalAggregationType","currentData","setCurrentData","filterByAggregationTyoe","selectedData","filteredData","period","filteredSelectedData","borderColor","boxShadow","group","Chart","GraphTypes","selectedAggregationType","setSelectedAggregationType","handleAggregationTypeClicked","StockTypes","selectedStockType","setSelectedStockType","handleStockTypeClicked","stockType","FinancialDataTable","sorted","setSorted","wrapSetDatatable","calendarDateKey","Object","keys","scrollX","b","valueA","valueB","localeCompare","handleSortClicked","newRows","row","newObject","NaN","number","formatNumber","formatData","FinancialStatementsDataTable","selectedRow","setSelectedRow","isOpened","setIsOpened","realData","slice","author","amp_url","article_url","published_utc","dataId","description","time","publisher","pagination","handlePrevClick","handleNextClick","FinancialDashboard","setDataTable","financialStatements","setFinancialStatements","sortDataPointsByDate","sortedData","getNewsFinancials","getTotalData","getIncomeForDataTable","getBalanceForDataTable","getCashForDataTable","getIncome","revenus","costOfRevenue","grossProfit","EBITDAMargin","NetIncome","earningsPerBasicShare","revenues","netIncome","getBalance","assets","liabilitiesNonCurrent","debt","tradeAndNonTradeReceivables","tradeAndNonTradePayables","cashAndEquivalents","getCash","netCashFlowFromOperations","netCashFlowFromInvesting","netCashFlowFromFinancing","issuanceDebtSecurities","issuanceEquityShares","paymentDividendsOtherCashDistributions","BarChart","CustomSelect","isValid","customStyles","control","base","isFocused","styles","TextEditor","openAddIndicatorModal","isShowAddIndicatorModal","handleChange","checked","isCheckedStrategy","loadConfigFiles","configFiles","configFileOptions","selectedConfigFile","loadBotConfigFiles","botConfigFileOptions","selectedBotConfigFile","bot","loadBotStatusList","botStatusList","updated","headerColumnsBotStatus","botStatusDatatable","loadBotConfigList","botConfigList","hours","headerColumnsBotConfig","col","data1","headerColumnsSmallBotConfig","botConfigDatatable","botConfigSmallDatatable","loadModuleTypes","moduleTypes","moduleTypeOptions","selectedModuleType","handleScriptFileChange","selectedFileType","handleScriptFileSave","isSelectedStrategyFile","processConfigSetting","SaveScriptModalClose","handleScriptFileNameChange","onEditorStateChange","editorState","handleScriptFileCreate","scriptfiles","EditorState","createEmpty","handleOpenScriptFile","isShowOpenModal","handleOpenProcessConfigModal","isShowConfigOpenModal","handleFileTypeChange","handleFile1TypeChange","selectedFile1Type","handleConfigFileChange","handleBotConfigFileChange","handleModuleTypeChange","fileTypes","selectedModuleContents","fileTypeOptions","handleModule1TypeChange","selectedModule1Type","file1TypeOptions","handleSaveModalShow","isShowSaveModal","processConfigModalClose","botConfigModalClose","isShowBotConfigOpenModal","OpenScriptModalClose","AddIndicatorModalClose","handleScriptFileOpen","selectedFile","file","blocksFromHTML","convertFromHTML","blockContent","ContentState","createFromBlockArray","contentBlocks","entityMap","createWithContent","scriptfile","handleConfigFileOpen","handleBotConfigFileOpen","botConfigSetting","bot_name_config","macro_strategy_config","start_date_config","extended_hours_config","handleSave","content","convertToRaw","getCurrentContent","blocks","handleProcessConfigSettingSave","form","querySelector","checkValidity","isFormValid","validations","selectValidations","showFile","currFile","files","reader","FileReader","onload","readAsText","handleModuleAndTypeSelect","strategyIndicators","handleIndicatorDelete","handleBotNameChange","handleProcessChange","handleBotConfigBotNameChange","handleBotConfigInputChange","displayProcessEditor","processConfigOptions","handleIndicatorReset","textdata","module1TypeOptions","botConfigOptions","wdith","loadIndicatorSignallingOptions","updatedState","Tabs","activeKey","k","Tab","eventKey","onValueChange","highlight","languages","plaintext","fontFamily","minHeight","noValidate","sortable","FileManager","pushState","themes","white","red","darkBlue","lightBlue","textColor","actionButtonColor","actionButtonBg","tableTextColor","light","useThemeColors","ThemeContext","theme","changeTheme","ThemeContextWrapper","setTheme","BackgroundColorWrapper","setColor","PrivateRoute","rest","render","from","SignUp","setUserName","confirmPassword","setConfirmPassword","handleUserNameChange","handleConfirmPasswordChange","Verify","setCode","userInfo","user_email","setItem","token","handleCodeChange","FloatsComponent","setExchange","setSector","setIndustry","optionsExchange","setOptionsExchanges","optionsSector","setOptionsSector","optionsIndustry","setOptionsIndustry","loadFloatDetails","pageNum","floatDetails","floats","loadFloatsFilterOption","scannerOptions","exchanges","industries","sectors","handleSectorChange","handleExchangeChange","handleIndustryChange","column","Floats","ForgotPassword","handleForgotPassword","PasswordResetConfirm","setPassword1","setPassword2","delay","ms","Promise","setTimeout","handlePasswordResetConfirm","handlePassword1Change","handlePassword2Change","CustomDropDown","nodes","inputvalue","selectedNode","nodeOptions","child","Widget","checkedAvailableItem","expandedAvailableItem","nodesFilteredAvailableItem","nodesAvailableItem","restoreAvailableItems","restoreCurrentItems","currentNodes","checkedCurrrentItem","expandedCurrrentItem","onCheckAvailableItem","onExpandAvailableItem","onFilterChangeAvailableItem","onCheckCurrentItem","onExpandCurrentItem","onAddItems","onRemoveItems","onLoadDefaults","onMoveUp","onMoveDown","onRestoreClicked","onOkClicked","onCancelClicked","onGetAvailabelNodes","onLoadTotalNodes","isExistItem","currentItems","cloneDeep","totalNodes","availableNodes","totalNode","parentFlag","totalCurrentNode","totalCurrnetChildrens","totalCurrentChild","totalChild","childFlag","availableNode","checkedCurrentItem","expandedCurrentItem","filteredNodes","childNode","checkedItems","availableItems","newCurrentNodes","availableItem","currentChildItems","childItem","originCurrentNodes","totalNewCurrentNodes","newCurrentNode","exist","currentNode","newChildItem","parentExist","totalCurrentNodes","originNode","newNode","filteredNode","isExist","pushItem","availableChildItems","defaultNodes","direction","Array","isArray","moveEnable","parentSuffix","uniqParentSuffix","Set","parentValue","nodeIndex","parentIndex","childIndex","temp","moveItem","handleCurrentNodesChanged","handleVisible","expanded","onCheck","onExpand","WatchListEditColumnWidget","setTotalNodes","selectedColumns","setCurrentNodes","childNodes","getModalData","stockFinancialsData","stock_financials","ticker_news","tickerDetails","ticker_details","total","defaults","setColumns","visibleStatus","handleModalClose","WatchListItem","setAllViewData","isLoadedWatchListOptions","setIsLoadedWatchListOptions","isConnected","setIsConnected","setSelectedColumns","chartMultiData","setChartMultiData","ws","setWs","isOpenedEditColumnWidget","setIsOpenedEditColumnWidget","selectedWatchList","setSelectedWatchList","selectedWatchListOptions","setSelectedWatchListOptions","isUpdatedCols","setIsUpdatedCols","columnItems","setColumnItems","initColumnItems","isUpdatedWatchList","setIsUpdatedWatchList","selectedSymbols","setSelectedSymbols","timeFrames","setTimeFrames","timeFrameOptions","watchListData","setWatchListData","watchListInitData","setWatchListInitData","loadWatchListOptions","getScannerAvailableFields","cols","temps","colObjects","loadRows","financials","loadMultiFinancials","object","updateChangeSymbol","isValidChartData","filtered","financial","getIncomeFromFinancial","getChartDataBySymbol","isChild","slicedChartData","splice","newData","init","symbol_type","send","loadview","view","indicatorStyle","rsi_side","rsi2_color","rsi3_color","heik1_color","heik_color","heik2_color","handleWatchListChange","createWebSocket","multiCharts","socket","WebSocket","onopen","onmessage","msg","onclose","isNaN","WatchList","defaultViewFields","allViewDataDefault","loadLayout","validViewDatas","chartNumbers","allViewDataFiltered","newAllViewData","reload","MarketWatch","ScannerComponent","loadWholeOptions","scannerDetails","loadScannerDetails","Scanner","HeatMapChart","generateData","count","randomArray","ceil","floor","random","chartOptions","seriesBuffer","OptimizationChartItem","OptimizationChart","OptimizationChartPage","Optimization","DBDashboardContext","DBDashboardUpdateContext","DBDashboardLoadingContext","DBDatabaseExportContext","DBDatabaseDeleteContext","DBBackupContext","useBackupStatus","useDBDashboard","useDBDashboardLoading","useActiveDatabase","hash","substring","useExportDatabase","useDeleteDatabase","DBDashboardProvider","databases","setDatabases","isBackupRunning","setBackupRunning","currentBackupId","setCurrentBackupId","databaseName","updatedDatabases","filteredDatabase","DBCollection","buttonStyle","textStyle","rowStyle","handleBackup","onDeleteClick","DBCollectionList","collections","setCollections","updatedCollections","filteredCollection","deleteCollection","DBDatabaseActions","handleDelete","DBPathway","DBControlBar","DBDatabase","onSaveClick","DBDatabaseList","DBContent","currentDb","overflowY","DBSidebar","activeDatabase","MDBContainer","MDBRow","MDBCol","DBDashboard","stopBackup","background","zIndex","DashboardWrapper","ReactDOM","getElementById"],"mappings":"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,KACP0V,MAAO,IACP/P,WAAY,CACV,gBAAiB,YACjB,aAAc,OAGlB,CACEryB,MAAO,WACP0sB,MAAO,OACPhkB,MAAO,KAET,CACE1I,MAAO,aACP0sB,MAAO,YACPrf,KAAM,KAER,CACErN,MAAO,YACP0sB,MAAO,YACPrf,KAAM,KAER,CACErN,MAAO,aACP0sB,MAAO,YACPrf,KAAM,KAER,CACErN,MAAO,kBACP0sB,MAAO,kBACP4F,MAAM,EACNjlB,KAAM,KAER,CACErN,MAAO,gBACP0sB,MAAO,gBACP4F,MAAM,EACNjlB,KAAM,KAER,CACErN,MAAO,cACP0sB,MAAO,cACP4F,MAAM,EACNjlB,KAAM,KAER,CACErN,MAAO,eACP0sB,MAAO,eACP4F,MAAM,EACNjlB,KAAM,KAER,CACErN,MAAO,gBACP0sB,MAAO,gBACP4F,MAAM,EACNjlB,KAAM,KAER,CACErN,MAAO,QACP0sB,MAAO,QACP4F,MAAM,EACNjlB,KAAM,KAER,CACErN,MAAO,iBACP0sB,MAAO,iBACP4F,MAAM,EACNjlB,KAAM,KAER,CACErN,MAAO,uBACP0sB,MAAO,uBACP4F,MAAM,EACNjlB,KAAM,KAER,CACErN,MAAO,cACP0sB,MAAO,cACP4F,MAAM,EACNjlB,KAAM,MAGVivB,4BAA6B,CAC3B,CACEt8B,MAAO,KACP0sB,MAAO,KACP0V,MAAO,IACP/P,WAAY,CACV,gBAAiB,YACjB,aAAc,OAGlB,CACEryB,MAAO,WACP0sB,MAAO,OACPhkB,MAAO,KAET,CACE1I,MAAO,iBACP0sB,MAAO,iBACP4F,MAAM,EACNjlB,KAAM,KAER,CACErN,MAAO,iBACP0sB,MAAO,QACP4F,MAAM,EACNjlB,KAAM,KAER,CACErN,MAAO,aACP0sB,MAAO,aACP4F,MAAM,EACNjlB,KAAM,MAGV0uB,mBAAoB,CAClBtP,QAAS,GACTja,KAAM,IAER+pB,mBAAoB,CAClB9P,QAAS,GACTja,KAAM,IAERgqB,wBAAyB,CACvB/P,QAAS,GACTja,KAAM,IAERuuB,kBAAmB,CACjBz+B,MAAM,EACNoE,WAAW,EACXoT,W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","file":"static/js/main.2deb2cc4.chunk.js","sourcesContent":["/*eslint-disable*/\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// reactstrap components\nimport { Nav, NavLink as ReactstrapNavLink } from \"reactstrap\";\nimport {\n  BackgroundColorContext,\n} from \"contexts/BackgroundColorContext\";\n\nimport { Dropdown } from 'components/Dropdown/Dropdown'\n\nvar ps;\n\nfunction Sidebar(props) {\n  const history = useHistory();\n  const sidebarRef = React.useRef(null);\n  const [user] = useState(JSON.parse(localStorage.getItem('user-info')))\n  const [userRole, setUserRole] = useState('');\n  // verifies if routeName is the one active (in browser input)\n  useEffect(() => {\n    setUserRole(user?.role)\n  }, [])\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(sidebarRef.current, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n    }\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n    };\n  });\n  \n  const handleClick = (instance, pathname) => {\n    handleInstanceChange(instance)\n    const locationState = {\n      initInstance: instance\n    }\n    if (pathname) {\n      history.push({\n        pathname: pathname,\n        state: instance === 'stress_test'\n        || instance === 'optimization'\n        || instance === 'live_trading'\n        ?  locationState: null\n      })\n    }\n  }\n\n  const { isAdminPage, routes, selectedInstance, handleSidebarChange, handleInstanceChange, subInstance } = props;\n  \n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color }) => (\n        <div className=\"sidebar hunter-sidebar\" data={color}>\n          <div className=\"sidebar-wrapper\" ref={sidebarRef}>\n            <div className=\"show-sidebar-button-area\">\n              <div className=\"show-sidebar-icon\">\n                <i className=\"tim-icons icon-align-left-2\" onClick={handleSidebarChange}/>\n              </div>\n            </div>\n            {isAdminPage ? (\n              <Nav>\n                {routes.map((prop, key) => {\n                  return (\n                    <li\n                      className={\n                        prop.instance === selectedInstance ? \"active-instance hunter-select-instance\" : \"hunter-select-instance\"\n                      }\n                      key={key}\n                      onClick={() => {\n                        handleInstanceChange(prop.instance)\n                        if (prop.pathname) {\n                          history.push({\n                            pathname: prop.pathname\n                          })\n                        }\n                      }}\n                    >\n                      <div\n                        className=\"nav-link\"\n                      >\n                        <i className={prop.icon} />\n                        <p>{prop.name}</p>\n                      </div>\n                    </li>\n                  );\n                })}\n              </Nav>  \n            ) : (\n              <Nav>\n                {routes.map((prop, key) => {\n                  if (!user.is_admin && !userRole.includes(prop.instance)) {\n                    return (<></>)\n                  }\n                  return (\n                    <li\n                      className={\n                        prop.instance === selectedInstance ? \"active-instance hunter-select-instance\" : \"hunter-select-instance\"\n                      }\n                      key={key}\n                    >\n                      {prop.items ? (\n                        <div\n                          className=\"nav-link\"\n                        >\n                          <Dropdown \n                            title={prop.name}\n                            icon={prop.icon}\n                            items={prop.items}\n                            instance={prop.instance}\n                            subInstance={subInstance}\n                            handleClick={handleClick}\n                            isActive={prop.instance === selectedInstance}\n                            key={`${prop.instance}`}\n                          />\n                        </div>\n                      ) : (\n                        <div\n                          className=\"nav-link\"\n                          onClick={() => {\n                            handleInstanceChange(prop.instance)\n                            const locationState = {\n                              initInstance: prop.instance\n                            }\n                            if (prop.pathname) {\n                              history.push({\n                                pathname: prop.pathname,\n                                state: prop.instance === 'stress_test'\n                                || prop.instance === 'optimization'\n                                || prop.instance === 'live_trading'\n                                ?  locationState: null\n                              })\n                            }\n                          }}\n                        >\n                          <i className={prop.icon} />\n                          <p className=\"hunter-ml-6\" >{prop.name}</p>\n                        </div>\n                      )\n                    }\n                    </li>\n                  );\n                })}\n              </Nav>\n            )}\n          </div>\n        </div>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nSidebar.defaultProps = {\n  rtlActive: false,\n  routes: [{}],\n};\n\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string,\n  }),\n};\n\nexport default Sidebar;\n","import { createContext } from \"react\";\n\nexport const backgroundColors = {\n  primary: \"primary\",\n  blue: \"blue\",\n  green: \"green\",\n};\n\nexport const BackgroundColorContext = createContext({\n  color: backgroundColors.blue,\n  changeColor: (color) => {},\n});\n","import { useState } from 'react'\n\nexport const Dropdown = (props) => {\n  const { items, title, icon, instance, handleClick, isActive, subInstance } = props;\n  const [isOpen, setOpen] = useState(false);\n  const toggleDropdown = () => setOpen(!isOpen);\n  \n  return (\n    <div className='hunter-dropdown'>\n      <div className='hunter-dropdown-header' onClick={toggleDropdown}>\n        <i className={icon} />\n        {title}\n        <i className={`fa fa-chevron-right hunter-dropdown-icon icon ${isOpen && \"open\"}`}></i>\n      </div>\n      <div className={`hunter-dropdown-body ${isOpen && 'open'}`}>\n        {items.map(item => (\n          <div className={`hunter-dropdown-item ${isActive && item.instance === subInstance && 'hunter-selected'}`}\n            onClick={e => {\n              handleClick(instance, item.pathname)\n            }}\n            id={item.id}\n            key={`${instance}-${item.id}`}\n          >\n            {item.label}\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}","export var routes = [\n  {\n    name: \"Admin\",\n    icon: \"tim-icons icon-app\",\n    instance: \"admin_tab\",\n    items: [\n      {\n        id: 0,\n        label: 'Paper Bot Management',\n        instance: \"systemfilemanager\",\n        pathname: '/botmanagement'\n      },\n      {\n        id: 0,\n        label: 'DB Management',\n        instance: \"dbmanager\",\n        pathname: '/db_management'\n      }\n    ],\n  },\n  {\n    name: \"Paper Trading\",\n    icon: \"tim-icons icon-chart-pie-36\",\n    instance: \"forward_test\",\n    pathname: '/'\n    // items: [\n    //   {\n    //     id: 0,\n    //     label: 'View',\n    //     instance: \"view\",\n    //     pathname: '/'\n    //   }\n    // ],\n  },\n  // {\n  //   name: \"Stress test\",\n  //   icon: \"tim-icons icon-attach-87\",\n  //   instance: \"stress_test\",\n  //   items: [\n  //     {\n  //       id: 0,\n  //       label: 'View',\n  //       instance: \"view\",\n  //       pathname: '/'\n  //     }\n  //   ],\n  // },\n  // {\n  //   name: \"Optimization\",\n  //   icon: \"tim-icons icon-atom\",\n  //   instance: \"optimization\",\n  //   items: [\n  //     {\n  //       id: 0,\n  //       label: 'View',\n  //       instance: \"view\",\n  //       pathname: '/optimization'\n  //     }\n  //   ],\n  // },\n  {\n    name: \"Live trading\",\n    icon: \"tim-icons icon-badge\",\n    instance: \"live_trading\",\n    pathname: '/'\n    // items: [\n    //   {\n    //     id: 0,\n    //     label: 'View',\n    //     instance: \"view\",\n    //     pathname: '/'\n    //   }\n    // ],\n  },\n  {\n    name: \"Market\",\n    icon: \"tim-icons icon-camera-18\",\n    instance: \"market_watch\",\n    pathname: '/market_watch'\n  },\n  {\n    name: \"Data Tables\",\n    icon: \"tim-icons icon-chart-bar-32\",\n    instance: \"trade_data\",\n    items: [\n      {\n        id: 0,\n        label: 'Price Data Table',\n        instance: \"pricedatatable\",\n        pathname: '/pricedatatable'\n      },\n      {\n        id: 1,\n        label: 'Trade Data Table',\n        instance: \"tradedatatable\",\n        pathname: '/tradedatatable'\n      }\n    ],\n  },\n  {\n    name: \"Hybrid View\",\n    icon: \"tim-icons icon-video-66\",\n    instance: \"hybrid_view\",\n    pathname: '/hybrid_view'\n  },\n  {\n    name: \"Financial Data\",\n    icon: \"tim-icons icon-coins\",\n    instance: \"financial_data\",\n    pathname: '/financial_data'\n  },\n  {\n    name: \"Scanner\",\n    icon: \"tim-icons icon-controller\",\n    instance: \"scanner\",\n    pathname: '/scanner'\n  },\n  {\n    name: \"Floats\",\n    icon: \"tim-icons icon-vector\",\n    instance: \"floats\",\n    pathname: '/floats'\n  },\n]\n\nexport var adminRoutes = [\n  {\n    name: \"User Manage\",\n    icon: \"tim-icons icon-chart-pie-36\",\n    instance: \"usermanage\",\n    pathname: '/admin/usermanage'\n  },\n  {\n    name: \"Link Manage\",\n    icon: \"tim-icons icon-attach-87\",\n    instance: \"linkmanage\",\n    pathname: '/admin/linkmanage'\n  },\n]\n\n","import { isNotDefined } from \"react-stockcharts/lib/utils\";\n\nexport function saveInteractiveNode(chartId) {\n\treturn node => {\n\t\tthis[`node_${chartId}`] = node;\n\t};\n}\n\nexport function handleSelection(type, chartId) {\n\treturn selectionArray => {\n\t\tconst key = `${type}_${chartId}`;\n\t\tconst interactive = this.state[key].map((each, idx) => {\n\t\t\treturn {\n\t\t\t\t...each,\n\t\t\t\tselected: selectionArray[idx]\n\t\t\t};\n\t\t});\n\t\tthis.setState({\n\t\t\t[key]: interactive\n\t\t});\n\t};\n}\n\nexport function saveInteractiveNodes(type, chartId) {\n\treturn node => {\n\t\tif (isNotDefined(this.interactiveNodes)) {\n\t\t\tthis.interactiveNodes = {};\n\t\t}\n\t\t// const key = `${type}_${chartId}`;\n\t\t// // if (isDefined(node) || isDefined(this.interactiveNodes[key])) {\n\t\t// // \t// console.error(node, key)\n\t\t// // \t// console.log(this.interactiveNodes)\n\t\t// // \t// eslint-disable-next-line fp/no-mutation\n\t\t// // \tthis.interactiveNodes = {\n\t\t// // \t\t...this.interactiveNodes,\n\t\t// // \t\t[key]: { type, chartId, node },\n\t\t// // \t};\n\t\t// }\n\t};\n}\n\nexport function getInteractiveNodes() {\n\treturn this.interactiveNodes;\n}","\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core\";\nimport { format } from \"d3-format\";\nimport dayjs from \"dayjs\";\nimport { timeFormat } from \"d3-time-format\";\n\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\nimport {\n\tBarSeries,\n\tCandlestickSeries,\n\tStraightLine,\n} from \"react-stockcharts/lib/series\";\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\nimport {\n\tCrossHairCursor,\n\tMouseCoordinateX,\n\tMouseCoordinateY,\n} from \"react-stockcharts/lib/coordinates\";\n\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\nimport {\n\tOHLCTooltip,\n\tToolTipText,\n\tSingleValueTooltip,\n} from \"react-stockcharts/lib/tooltip\";\nimport { atr, ema, macd, heikinAshi } from \"react-stockcharts/lib/indicator\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\nimport { DrawingObjectSelector } from \"react-stockcharts/lib/interactive\";\nimport { last, toObject } from \"react-stockcharts/lib/utils\";\nimport {\n\tsaveInteractiveNodes,\n\tgetInteractiveNodes,\n} from \"../Interactiveutils\";\nimport {\n\tAnnotate,\n\tSvgPathAnnotation,\n\tbuyPath,\n\tsellPath,\n} from \"react-stockcharts/lib/annotation\";\n\nconst rsiAppearance = {\n\tstroke: {\n\t\tmacd: \"#FF0000\",\n\t\tsignal: \"#00F300\",\n\t},\n\tfille: {\n\t\tbearPower: \"#4682B4\"\n\t}\n};\n\n// common stock chart\nclass CandleStickChartWithEquidistantChannel extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.addTextLable = this.addTextLable.bind(this);\n\t\tthis.onKeyPress = this.onKeyPress.bind(this);\n\t\tthis.onDrawComplete = this.onDrawComplete.bind(this);\n\t\tthis.saveInteractiveNode = this.saveInteractiveNode.bind(this);\n\t\tthis.saveCanvasNode = this.saveCanvasNode.bind(this);\n\t\tthis.handleSelection = this.handleSelection.bind(this);\n\t\t\n\t\tthis.saveInteractiveNodes = saveInteractiveNodes.bind(this);\n\t\tthis.getInteractiveNodes = getInteractiveNodes.bind(this);\n\n\t\tthis.state = {\n\t\t\tenableInteractiveObject: true,\n\t\t\tx: -200,\n      \t\ty: -200,\n\t\t\tchannels_1: [],\n\t\t\tchannels_3: [],\n\t\t\tvalueText: \"\",\n      \t\tdateText: \"\",\n\t\t\tstatus: '',\n\t\t\tisFullChart: false,\n\t\t};\n\t}\n\tsaveInteractiveNode(node) {\n\t\tthis.node = node;\n\t}\n\tsaveCanvasNode(node) {\n\t\tthis.canvasNode = node;\n\t}\n\tcomponentDidMount() {\n\t\tdocument.addEventListener(\"keyup\", this.onKeyPress);\n\t\tthis.canvasNode.subscribe(\"CandleStickChartWithEquidistantChannel\", { listener: this.handleEvents });\n\t}\n\tcomponentWillUnmount() {\n\t\tthis.canvasNode.unsubscribe(\"CandleStickChartWithEquidistantChannel\");\n\t\tdocument.removeEventListener(\"keyup\", this.onKeyPress);\n\t}\n\n\thandleEvents = (type) => {\n\t\tif (type === \"zoom\") {\n\t\t  this.handleZoom();\n\t\t}\n\t\tif (type === \"mousedown\") {\n\t\t  this.hideTextLabel();\n\t\t}\n\t};\n\n\thandleZoom() {\n\t\tif (this.state.x !== -200 && this.state.y !== -200) {\n\t\t  this.hideTextLabel();\n\t\t}\n\t}\n\n\thideTextLabel() {\n\t\tthis.setState({\n\t\t  x: -200,\n\t\t  y: -200\n\t\t});\n\t}\n\n\taddTextLable(e) {\n\t\tconst formatter = new Intl.DateTimeFormat(\"en\", { month: \"short\" });\n\t\tconst formatterW = new Intl.DateTimeFormat(\"en\", { weekday: \"long\" });\n\t\tconst month2 = formatter.format(e.datum.date);\n\t\tconst week2 = formatterW.format(e.datum.date);\n\t\tconst dateElem = `${week2}, ${month2} ${e.datum.date.getDate()}, ${e.datum.date.getFullYear()}`;\n\t\tthis.setState({\n\t\t\tx: 500,\n\t\t\ty: 30,\n\t\t\tvalueText: e.datum.high,\n\t\t\tdateText: dateElem,\n\t\t\tstatus: e.datum.action,\n\t\t});\n\t}\n\n\thandleSelection(interactives) {\n\t\tconst state = toObject(interactives, each => {\n\t\t\treturn [\n\t\t\t\t`channels_${each.chartId}`,\n\t\t\t\teach.objects,\n\t\t\t];\n\t\t});\n\t\tthis.setState(state);\n\t}\n\n\tisIncludeIndicators(indicator) {\n\t\tif (this.props.indicators) {\n\t\t\treturn this.props.indicators.filter((e) => e.value === indicator).length;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tonDrawComplete(channels_1) {\n\t\tthis.setState({\n\t\t\tenableInteractiveObject: false,\n\t\t\tchannels_1\n\t\t});\n\t}\n\tonKeyPress(e) {\n\t\tconst keyCode = e.which;\n\t\tconsole.log(keyCode);\n\t\tswitch (keyCode) {\n\t\t\tcase 46: { // DEL\n\t\t\t\tconst channels_1 = this.state.channels_1\n\t\t\t\t\t.filter(each => !each.selected);\n\t\t\t\tconst channels_3 = this.state.channels_3\n\t\t\t\t\t.filter(each => !each.selected);\n\n\t\t\t\tthis.canvasNode.cancelDrag();\n\t\t\t\tthis.setState({\n\t\t\t\t\tchannels_1,\n\t\t\t\t\tchannels_3,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 27: { // ESC\n\t\t\t\tthis.node.terminate();\n\t\t\t\tthis.canvasNode.cancelDrag();\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tenableInteractiveObject: false\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 68:   // D - Draw drawing object\n\t\t\tcase 69: { // E - Enable drawing object\n\t\t\t\tthis.setState({\n\t\t\t\t\tenableInteractiveObject: true\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tcalculateHeight (isFullChart) {\n\t\tif (this.props.isHomePage && !isFullChart) {\n\t\t\treturn 400;\n\t\t}\n\t\tlet index = 1\n\t\tif (this.props.indicators) {\n\t\t\tif (this.props.indicators.length > 1) {\n\t\t\t\tindex = this.props.indicators.length\n\t\t\t}\n\t\t}\n\t\treturn 500 + index * 100\n\t}\n\n\tcalculateOffset (indicator, isFullChart) {\n\t\tif (!this.props.isHomePage || isFullChart) {\n\t\t\tif (indicator === 'rsi1') {\n\t\t\t\tconst filter = this.props.indicators.filter(indicator => ['rsi2', 'rsi3', 'heik', 'heik_diff'].includes(indicator.value))\n\t\t\t\treturn 300 + filter.length * 70;\n\t\t\t}\n\t\n\t\t\tif (indicator === 'rsi2') {\n\t\t\t\tconst filter = this.props.indicators.filter(indicator => ['rsi3', 'heik', 'heik_diff'].includes(indicator.value))\n\t\t\t\treturn 300 + filter.length * 70;\n\t\t\t}\n\n\t\t\tif (indicator === 'rsi3') {\n\t\t\t\tconst filter = this.props.indicators.filter(indicator => ['heik', 'heik_diff'].includes(indicator.value))\n\t\t\t\treturn 300 + filter.length * 70;\n\t\t\t}\n\t\n\t\t\tif (indicator === 'heik') {\n\t\t\t\tconst filter = this.props.indicators.filter(indicator => ['heik_diff'].includes(indicator.value))\n\t\t\t\treturn 300 + filter.length * 70;\n\t\t\t}\n\t\t\t\n\t\t\tif (indicator === 'heik_diff') {\n\t\t\t\tconst filter = this.props.indicators.filter(indicator => [''].includes(indicator.value))\n\t\t\t\treturn 300 + filter.length * 70;\n\t\t\t}\n\t\t\treturn 0\t\n\t\t}\n\t\tif (indicator === 'rsi1') {\n\t\t\tif (this.isIncludeIndicators(indicator)) {\n\t\t\t\tif (this.isIncludeIndicators('volume')) {\n\t\t\t\t\tif (this.props.indicators.length > 1) {\n\t\t\t\t\t\treturn (this.props.indicators.length-1) * 50 + 50\n\t\t\t\t\t}\n\t\t\t\t\treturn 80;\n\t\t\t\t} else {\n\t\t\t\t\tif (this.props.indicators.length > 1) {\n\t\t\t\t\t\treturn (this.props.indicators.length) * 50 + 50\n\t\t\t\t\t}\n\t\t\t\t\treturn 80;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (indicator === 'heik') {\n\t\t\tif (this.isIncludeIndicators(indicator)) {\n\t\t\t\tif (this.isIncludeIndicators('heik_diff')) {\n\t\t\t\t\treturn 130;\n\t\t\t\t}\n\t\t\t\treturn 80;\n\t\t\t}\n\t\t}\n\n\t\tif (indicator === 'heik_diff') {\n\t\t\treturn 60;\n\t\t}\n\n\t\treturn 10\n\t}\n\n\tcalculateMainHeightOffset(isFullChart) {\n\t\tif (this.props.isHomePage && !isFullChart) {\n\t\t\treturn 100 + (this.props.indicators.length - 1) * 50\n\t\t}\n\t\tif ( this.props.indicators ) {\n\t\t\tif (this.props.indicators.length > 1) {\n\t\t\t\treturn 300 + (this.props.indicators.length - 1) * 100\n\t\t\t}\n\t\t}\n\t\treturn 300\n\t}\n\n\tcalculateTooltipOffset0(isFullChart) {\n\t\treturn 0;\n\t\t// if (!this.props.isHomePage || isFullChart) {\n\t\t// \treturn 0;\n\t\t// }\n\t\t// if ( this.props.indicators ) {\n\t\t// \tif (this.props.indicators.length > 1) {\n\t\t// \t\treturn 0\n\t\t// \t}\n\t\t// }\n\t\t// return 0\n\t}\n\t\n\tcalculateTooltipOffset1(isFullChart) {\n\t\treturn 0;\n\t\t// if (!this.props.isHomePage || isFullChart) {\n\t\t// \treturn 0;\n\t\t// }\n\t\t// if ( this.props.indicators ) {\n\t\t// \tif (this.props.indicators.length > 1) {\n\t\t// \t\treturn 0\n\t\t// \t}\n\t\t// }\n\t\t// return 0\n\t}\n\n\t// computeAnnotation(dateLine) {\n\t// \tconst deal = this.props.deals.filter(\n\t// \t\tdealLine => {\n\t// \t\t\treturn dateLine.date.getTime() === dealLine.ddate.getTime()\n\t// \t\t}\n\t// \t\t);\n\t\t\t\n\t// \tif (deal.length > 0) {\n\t// \t\treturn deal[0].action;\n\t// \t}\n\t// }\n\n\trender() {\n\n\t\tconst ema20 = ema()\n\t\t\t.id(0)\n\t\t\t.options({ windowSize: 13 })\n\t\t\t.merge((d, c) => { d.ema20 = c; })\n\t\t\t.accessor(d => d.ema20);\n\n\t\tconst ema50 = ema()\n\t\t\t.id(2)\n\t\t\t.options({ windowSize: 50 })\n\t\t\t.merge((d, c) => { d.ema50 = c; })\n\t\t\t.accessor(d => d.ema50);\n\n\t\t\n\t\t// const longFillProps = {\n\t\t// \tstroke: \"#22a46e\",\n\t\t// \tfill: \"#22a46e\",\n\t\t// \tclassName: this.props.classes.deal_green_shadowed\n\t\t//   };\n\t  \n\t\t//   const shortFillProps = {\n\t\t// \tstroke: \"#cc4060\",\n\t\t// \tfill: \"#cc4060\",\n\t\t// \tclassName: this.props.classes.deal_red_shadowed\n\t\t//   };\n\t  \n\t\t//   const fontProps = {\n\t\t// \tfontFamily: \"Material Icons\",\n\t\t// \tfontSize: 24,\n\t\t// \tfontWeight: \"normal\",\n\t\t// \topacity: 1,\n\t\t// \tonClick: this.addTextLable\n\t\t//   };\n\t  \n\t\t// const yOpenProps = {\n\t\t// y: ({ yScale, datum }) => yScale(datum.high * 1.04 - 100)\n\t\t// };\n\t  \n\t\t// const yCloseProps = {\n\t\t// y: ({ yScale, datum }) => yScale(datum.high * 1.04 - 100)\n\t\t// };\n\t  \n\t\t// const buyTooltipProps = {\n\t\t// \ttooltip: (o) => {\n\t\t// \t\treturn `Buy: ${o.date} \\n Price: ${o.price}`\n\t\t// \t}\n\t\t// }\n\t\t\n\t\t// const sellTooltipProps = {\n\t\t// \ttooltip: (o) => {\n\t\t// \t\treturn `Sell: ${o.date}\\nPrice: ${o.price}`\n\t\t// \t}\n\t\t// }\n\n\t\t// const buy = {\n\t\t// \t...longFillProps,\n\t\t// \t...fontProps,\n\t\t// \t...yOpenProps,\n\t\t// \ttext: \"\\u25B2\",\n\t\t// \t...buyTooltipProps,\n\t\t// \trotate: 180\n\t\t// };\n\t  \n\t\t//   const sell = {\n\t\t// \t...shortFillProps,\n\t\t// \t...fontProps,\n\t\t// \t...yCloseProps,\n\t\t// \t...sellTooltipProps,\n\t\t// \ttext: \"\\u25B2\",\n\t\t// \trotate: 180\n\t\t// };\n\n\t\tconst ha = heikinAshi();\n\t\t\n\t\tconst macdCalculator = macd()\n\t\t\t.options({\n\t\t\t\tfast: 12,\n\t\t\t\tslow: 26,\n\t\t\t\tsignal: 9,\n\t\t\t})\n\t\t\t.merge((d, c) => { d.macd = c; })\n\t\t\t.accessor(d => d.macd);\n\n\t\tconst atr14 = atr()\n\t\t.options({ windowSize: 14 })\n\t\t.merge((d, c) => {d.atr14 = c;})\n\t\t.accessor(d => d.atr14);\t\n\n\t\tconst { type, data: initialData, width, ratio, chartColumn, extendMarketTime } = this.props;\n\n\t\tconst isFullChart = (chartColumn === 1 || chartColumn === 2);\n\n\t\tinitialData.forEach(line => {\n\t\t\tline.date = dayjs(line.date).toDate();\n\t\t  });\n\n\t\t// const margin = { left: 80, right: 80, top: 30, bottom: 50 };  \n\n\t\t// const height = 400;\n\n\t\t// const [yAxisLabelX, yAxisLabelY] = [width - margin.left - 40, margin.top + (height - margin.top - margin.bottom) / 2];\n\t\t\n\t\tconst calculatedData = macdCalculator((ha(atr14(initialData))));\n\t\t\n\t\tconst xScaleProvider = discontinuousTimeScaleProvider\n\t\t\t.inputDateAccessor(d => d.date);\n\t\tconst {\n\t\t\tdata,\n\t\t\txScale,\n\t\t\txAccessor,\n\t\t\tdisplayXAccessor,\n\t\t} = xScaleProvider(calculatedData);\n\n\n\t\tconst defaultAnnotationProps = {\n\t\t\tonClick: console.log.bind(console),\n\t\t};\n\n\t\tconst longAnnotationProps = {\n\t\t\t...defaultAnnotationProps,\n\t\t\ty: ({ yScale, datum }) => { return yScale(datum.low) - this.calculateTooltipOffset0(isFullChart) },\n\t\t\tfill: \"#006517\",\n\t\t\tpath: buyPath,\n\t\t\ttooltip: (e) => {\n\t\t\t\tconst contents = e.trades.map((trade) => `${trade.longShort === 'LONG' ? 'Buy:' : 'Sell:'} Price: ${trade.price} Date: ${trade.trade_date.replace('T', ' ')}\\n`)\n\t\t\t\treturn contents\n\t\t\t},\n\t\t};\n\n\t\tconst shortAnnotationProps = {\n\t\t\t...defaultAnnotationProps,\n\t\t\ty: ({ yScale, datum }) => { return yScale(datum.high) - this.calculateTooltipOffset1(isFullChart)},\n\t\t\tfill: \"#FF0000\",\n\t\t\tpath: sellPath,\n\t\t\ttooltip: (e) => {\n\t\t\t\tconst contents = e.trades.map((trade) => `${trade.longShort === 'LONG' ? 'Buy:' : 'Sell:'} Price: ${trade.price} Trade Date: ${trade.trade_date.replace('T', ' ')}\\n`)\n\t\t\t\treturn contents\n\t\t\t}\n\t\t};\n\n\t\tconst start = xAccessor(last(data));\n\t\t// const periodIndex = this.props.period === 'heikfilter-2mins-trades' \n\t\t// \t? 15\n\t\t// \t: this.props.period === 'heikfilter-12mins-trades'\n\t\t// \t? 30\n\t\t// \t: this.props.period === 'heikfilter-1hour-trades'\n\t\t// \t? 90\n\t\t// \t: this.props.period === 'heikfilter-4hours-trades'\n\t\t// \t? 200\n\t\t// \t: this.props.period === 'heikfilter-12hours-trades'\n\t\t// \t? 200 : 1000\n\t\t\n\t\t// const end = xAccessor(data[Math.max(0, data.length - periodIndex)]);\n\t\tconst end = xAccessor(data[Math.max(0, data.length - 150)]);\n\t\tconst xExtents = [start, end];\n\t\t// const xExtents = [\n\t\t// \tthis.props.data[0].date,\n\t\t// \tthis.props.data[this.props.data.length-1].date\n\t\t// ];\n\t\t// console.log(\"xExtents\", last(data).date, data[Math.max(0, data.length - 150)].date)\n\t\t// console.log(\"xExtents1\", this.props.data[0].date, this.props.data[this.props.data.length - 1].date)\n\t\t\n\t\tconst xDisplayFormatProps = {\n\t\t\txDisplayFormat: timeFormat(\"%Y-%m-%d : %H-%M-%S\"),\n\t\t\tohlcFormat: () => \"\",\n\t\t\tvolumeFormat: () => \"\",\n\t\t\tpercentFormat: () => \"\",\n\t\t\tdisplayTexts: {\n\t\t\t\td: \"Date: \",\n\t\t\t},\n\n\t\t}\n\t\tconst xDisplayFormatProps1 = {\n\t\t\txDisplayFormat: timeFormat(\"\"),\n\t\t\tdisplayTexts: {\n\t\t\t\to: \" O: \",\n\t\t\t\th: \" H: \",\n\t\t\t\tl: \" L: \",\n\t\t\t\tc: \" C: \",\n\t\t\t\tv: \" Vol: \",\n\t\t\t\tna: \"n/a\"\n\t\t\t},\n\t\t}\n\t\tconst xDisplayFormatProps2 = {\n\t\t\txDisplayFormat: timeFormat(\"\"),\n\t\t\tohlcFormat: () => \"\",\n\t\t\tvolumeFormat: () => this.props.symbol,\n\t\t\tpercentFormat: () => \"\",\n\t\t\tdisplayTexts: {\n\t\t\t\tv: \" Symbol: \",\n\t\t\t},\n\t\t}\n\t\t\n\t\tconst SMATooltipProps = {\n\t\t\tvalueFill: '#ffffff'\n\t\t}\n\n\t\treturn (\n\t\t\t<ChartCanvas\n\t\t\t\theight={this.calculateHeight(isFullChart)}\n\t\t\t\twidth={width}\n\t\t\t\tratio={ratio}\n\t\t\t\tmargin={{ left: 70, right: 70, top: 20, bottom: 30 }}\n\t\t\t\ttype={type}\n\t\t\t\tseriesName=\"MSFT\"\n\t\t\t\tdata={data}\n\t\t\t\txExtents={xExtents}\n\t\t\t\txScale={xScale}\n\t\t\t\tdisplayXAccessor={displayXAccessor}\n\t\t\t\txAccessor={xAccessor}\n\t\t\t\tref={node => {\n\t\t\t\t\tthis.canvasNode = node;\n\t\t\t\t}}\n\t\t\t\tredraw={true}\n\t\t\t>\n\t\t\t\t<Chart id={1}\n\t\t\t\t\theight={\n\t\t\t\t\t\t(!this.props.isHomePage || isFullChart)\n\t\t\t\t\t\t? this.isIncludeIndicators('volume') || this.props.indicators.length ? 250 : 400\n\t\t\t\t\t\t: 300 - this.props.indicators.length * 50\n\t\t\t\t\t}\n\t\t\t\t\tyExtents={[d => [d.high, d.low], ema20.accessor(), ema50.accessor()]}\n\t\t\t\t\tpadding={{ top: 10, bottom: 20 }}\n\t\t\t\t>\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"  stroke=\"white\" tickStroke=\"white\" />\n\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} stroke=\"white\" tickStroke=\"white\" />\n\n\t\t\t\t\t<MouseCoordinateX\n\t\t\t\t\t\tat=\"bottom\"\n\t\t\t\t\t\torient=\"bottom\"\n\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"right\"\n\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\n\n\t\t\t\t\t<CandlestickSeries \n\t\t\t\t\t\tstroke={d => d.close > d.open ? \"#6BA583\" : \"#DB0000\"}\n\t\t\t\t\t\twickStroke={d => d.close > d.open ? \"#6BA583\" : \"#DB0000\"}\n\t\t\t\t\t\tfill={d => d.close > d.open ? \"#6BA583\" : \"#DB0000\"}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<OHLCTooltip \n\t\t\t\t\t\torigin={[-50, -10]}\n\t\t\t\t\t\t{...xDisplayFormatProps}\n\t\t\t\t\t/>\n\t\t\t\t\t\n\t\t\t\t\t<OHLCTooltip \n\t\t\t\t\t\torigin={[-50, 20]}\n\t\t\t\t\t\t{...xDisplayFormatProps1}\n\t\t\t\t\t/>\n\t\t\t\t\t\n\t\t\t\t\t<OHLCTooltip \n\t\t\t\t\t\torigin={[100, -5]}\n\t\t\t\t\t\t{...xDisplayFormatProps2}\n\t\t\t\t\t/>\n\t\t\t\t\t\n\t\t\t\t\t<Annotate with={SvgPathAnnotation} when={ d => \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn this.props.selectedInstance !== 'live_trading'  \n\t\t\t\t\t\t\t&& d.trades\n\t\t\t\t\t\t\t&& d.trades[0].strategy === `${this.props.strategy.value}-${this.props.microStrategy}-trades`\n\t\t\t\t\t\t\t&& d.trades[0].longShort === \"LONG\" \n\t\t\t\t\t\t}}\n\t\t\t\t\t\tusingProps={longAnnotationProps} />\n\t\t\t\t\t<Annotate with={SvgPathAnnotation} when={d => \n\t\t\t\t\t\tthis.props.selectedInstance !== 'live_trading' \n\t\t\t\t\t\t&& d.trades\n\t\t\t\t\t\t&& d.trades[0].strategy === `${this.props.strategy.value}-${this.props.microStrategy}-trades`\n\t\t\t\t\t\t&& d.trades[0].longShort === \"SHORT\" }\n\t\t\t\t\t\tusingProps={shortAnnotationProps} />\n\n\t\t\t\t</Chart>\n\t\t\t\t{this.isIncludeIndicators('volume') && (\n\t\t\t\t\t<Chart id={2} height={(!this.props.isHomePage || isFullChart) ? 100 : 50}\n\t\t\t\t\t\tyExtents={[d => d.volume]}\n\t\t\t\t\t\torigin={(w, h) => [0, h - this.calculateMainHeightOffset(isFullChart)]}\n\t\t\t\t\t\tpadding={{ top: 10, bottom: 10 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" stroke=\"white\" tickStroke=\"white\" />\n\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} tickFormat={format(\".2s\")} stroke=\"white\" tickStroke=\"white\" />\n\n\t\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\t\tat=\"left\"\n\t\t\t\t\t\t\torient=\"left\"\n\t\t\t\t\t\t\tdisplayFormat={format(\".4s\")} />\n\n\t\t\t\t\t\t<BarSeries yAccessor={d => d.volume} fill={d => d.close > d.open ? \"#6BA583\" : \"#FF0000\"} />\n\t\t\t\t\t</Chart>\n\t\t\t\t)}\n\t\t\t\t{this.isIncludeIndicators('rsi1') && (\n\t\t\t\t\t<Chart id={3} \n\t\t\t\t\t\t// height={(!this.props.isHomePage || isFullChart) ? 100 : 70}\n\t\t\t\t\t\theight={70}\n\t\t\t\t\t\tyExtents={[0, d => d.rsi.bearPower]}\n\t\t\t\t\t\torigin={(w, h) => [0, h - this.calculateOffset('rsi1', isFullChart)]}\n\t\t\t\t\t\tpadding={{ top: 40, bottom: 10 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" stroke=\"white\" tickStroke=\"white\" />\n\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" stroke=\"white\" tickStroke=\"white\" ticks={4} tickFormat={format(\".2f\")}/>\n\t\t\t\t\t\t<MouseCoordinateX\n\t\t\t\t\t\t\tat=\"bottom\"\n\t\t\t\t\t\t\torient=\"bottom\"\n\t\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\n\t\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\t\tat=\"right\"\n\t\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\n\t\t\t\t\t\t<BarSeries\n\t\t\t\t\t\t\tyAccessor={d => d.rsi.bearPower}\n\t\t\t\t\t\t\tbaseAt={(xScale, yScale, d) => yScale(0)}\n\t\t\t\t\t\t\tfill={d => d.rsi.side === 'buy' ? '#800080' : d.rsi.side === 'sell' ? '#FFA500' : d.rsi.side === 'hold' ? '#00FF00' : '#FF0000'} />\n\t\t\t\t\t\t<StraightLine yValue={0} />\n\n\t\t\t\t\t\t<SingleValueTooltip\n\t\t\t\t\t\t\tyAccessor={d => d.rsi.bearPower}\n\t\t\t\t\t\t\tyLabel=\"RSI - Bear power\"\n\t\t\t\t\t\t\tyDisplayFormat={format(\".2f\")}\n\t\t\t\t\t\t\tappearance={rsiAppearance}\n\t\t\t\t\t\t\t{...SMATooltipProps}\n\t\t\t\t\t\t\torigin={[-40, 35]}/>\n\t\t\t\t\t</Chart>\n\t\t\t\t)}\n\t\t\t\t{this.isIncludeIndicators('rsi2') && (\n\t\t\t\t\t<Chart id={4} \n\t\t\t\t\t\t// height={(!this.props.isHomePage || isFullChart) ? 100 : 70}\n\t\t\t\t\t\theight={70}\n\t\t\t\t\t\tyExtents={[0, d => d.rsi2.bearPower]}\n\t\t\t\t\t\torigin={(w, h) => [0, h - this.calculateOffset('rsi2', isFullChart)]}\n\t\t\t\t\t\tpadding={{ top: 40, bottom: 10 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" stroke=\"white\" tickStroke=\"white\" />\n\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" stroke=\"white\" tickStroke=\"white\" ticks={4} tickFormat={format(\".2f\")}/>\n\t\t\t\t\t\t<MouseCoordinateX\n\t\t\t\t\t\t\tat=\"bottom\"\n\t\t\t\t\t\t\torient=\"bottom\"\n\t\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\n\t\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\t\tat=\"right\"\n\t\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\n\t\t\t\t\t\t<BarSeries\n\t\t\t\t\t\t\tyAccessor={d => d.rsi2.bearPower}\n\t\t\t\t\t\t\tbaseAt={(xScale, yScale, d) => yScale(0)}\n\t\t\t\t\t\t\tfill={d => \n\t\t\t\t\t\t\t\td.rsi2.color === 'l_g' ? '#90EE90' : d.rsi2.color === 'd_g' ? '#006400' : d.rsi2.color === 'l_r' ? '#ED0800' : '#8B0000'\n\t\t\t\t\t\t\t} />\n\t\t\t\t\t\t<StraightLine yValue={0} />\n\n\t\t\t\t\t\t<SingleValueTooltip\n\t\t\t\t\t\t\tyAccessor={d => d.rsi2.bearPower}\n\t\t\t\t\t\t\tyLabel=\"RSI2 - Bear power\"\n\t\t\t\t\t\t\tyDisplayFormat={format(\".2f\")}\n\t\t\t\t\t\t\tappearance={rsiAppearance}\n\t\t\t\t\t\t\t{...SMATooltipProps}\n\t\t\t\t\t\t\torigin={[-40, 35]}/>\n\t\t\t\t\t</Chart>\n\t\t\t\t)}\n\t\t\t\t{this.isIncludeIndicators('rsi3') && (\n\t\t\t\t\t<Chart id={5} \n\t\t\t\t\t\t// height={(!this.props.isHomePage || isFullChart) ? 100 : 70}\n\t\t\t\t\t\theight={70}\n\t\t\t\t\t\tyExtents={[0, d => d.rsi3.bearPower]}\n\t\t\t\t\t\torigin={(w, h) => [0, h - this.calculateOffset('rsi3', isFullChart)]}\n\t\t\t\t\t\tpadding={{ top: 40, bottom: 10 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" stroke=\"white\" tickStroke=\"white\" />\n\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" stroke=\"white\" tickStroke=\"white\" ticks={4} tickFormat={format(\".2f\")}/>\n\t\t\t\t\t\t<MouseCoordinateX\n\t\t\t\t\t\t\tat=\"bottom\"\n\t\t\t\t\t\t\torient=\"bottom\"\n\t\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\n\t\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\t\tat=\"right\"\n\t\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\n\t\t\t\t\t\t<BarSeries\n\t\t\t\t\t\t\tyAccessor={d => d.rsi3.bearPower}\n\t\t\t\t\t\t\tbaseAt={(xScale, yScale, d) => yScale(0)}\n\t\t\t\t\t\t\tfill={d => \n\t\t\t\t\t\t\t\td.rsi3.color === 'l_g' ? '#90EE90' : d.rsi3.color === 'd_g' ? '#006400' : d.rsi3.color === 'l_r' ? '#ED0800' : '#8B0000'\n\t\t\t\t\t\t\t} />\n\t\t\t\t\t\t<StraightLine yValue={0} />\n\n\t\t\t\t\t\t<SingleValueTooltip\n\t\t\t\t\t\t\tyAccessor={d => d.rsi3.bearPower}\n\t\t\t\t\t\t\tyLabel=\"RSI3 - Bear power\"\n\t\t\t\t\t\t\tyDisplayFormat={format(\".2f\")}\n\t\t\t\t\t\t\tappearance={rsiAppearance}\n\t\t\t\t\t\t\t{...SMATooltipProps}\n\t\t\t\t\t\t\torigin={[-40, 35]}/>\n\t\t\t\t\t</Chart>\n\t\t\t\t)}\n\t\t\t\t{this.isIncludeIndicators('heik') && (\n\t\t\t\t\t<Chart id={6} \n\t\t\t\t\t\t// height={(!this.props.isHomePage || isFullChart) ? 100 : 70}\n\t\t\t\t\t\theight={70}\n\t\t\t\t\t\tyExtents={[0, d => d.heik.bearPower]}\n\t\t\t\t\t\torigin={(w, h) => [0, h - this.calculateOffset('heik', isFullChart)]}\n\t\t\t\t\t\tpadding={{ top: 40, bottom: 10 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" stroke=\"white\" tickStroke=\"white\" />\n\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" stroke=\"white\" tickStroke=\"white\" ticks={4} tickFormat={format(\".2f\")}/>\n\t\t\t\t\t\t<MouseCoordinateX\n\t\t\t\t\t\t\tat=\"bottom\"\n\t\t\t\t\t\t\torient=\"bottom\"\n\t\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\n\t\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\t\tat=\"right\"\n\t\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\n\t\t\t\t\t\t<BarSeries\n\t\t\t\t\t\t\tyAccessor={d => d.heik.bearPower}\n\t\t\t\t\t\t\tbaseAt={(xScale, yScale, d) => yScale(0)}\n\t\t\t\t\t\t\tfill={d => \n\t\t\t\t\t\t\t\td.heik.color === 'l_g' ? '#90EE90' : d.heik.color === 'd_g' ? '#006400' : d.heik.color === 'l_r' ? '#ED0800' : '#8B0000'\n\t\t\t\t\t\t\t} />\n\t\t\t\t\t\t<StraightLine yValue={0} />\n\n\t\t\t\t\t\t<SingleValueTooltip\n\t\t\t\t\t\t\tyAccessor={d => d.heik.bearPower}\n\t\t\t\t\t\t\tyLabel=\"HEIK1 - Bear power\"\n\t\t\t\t\t\t\tyDisplayFormat={format(\".2f\")}\n\t\t\t\t\t\t\tappearance={rsiAppearance}\n\t\t\t\t\t\t\t{...SMATooltipProps}\n\t\t\t\t\t\t\torigin={[-40, 35]}/>\n\t\t\t\t\t</Chart>\n\t\t\t\t)}\n\t\t\t\t{this.isIncludeIndicators('heik_diff') && (\n\t\t\t\t\t<Chart id={7} \n\t\t\t\t\t\t// height={(!this.props.isHomePage || isFullChart) ? 100 : 70}\n\t\t\t\t\t\theight={70}\n\t\t\t\t\t\tyExtents={[0, d => d.heik2.bearPower]}\n\t\t\t\t\t\torigin={(w, h) => [0, h - this.calculateOffset('heik_diff', isFullChart)]}\n\t\t\t\t\t\tpadding={{ top: 40, bottom: 10 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" stroke=\"white\" tickStroke=\"white\" />\n\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" stroke=\"white\" tickStroke=\"white\" ticks={4} tickFormat={format(\".2f\")}/>\n\t\t\t\t\t\t<MouseCoordinateX\n\t\t\t\t\t\t\tat=\"bottom\"\n\t\t\t\t\t\t\torient=\"bottom\"\n\t\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\n\t\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\t\tat=\"right\"\n\t\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\n\t\t\t\t\t\t<BarSeries\n\t\t\t\t\t\t\tyAccessor={d => d.heik2.bearPower}\n\t\t\t\t\t\t\tbaseAt={(xScale, yScale, d) => yScale(0)}\n\t\t\t\t\t\t\tfill={d => \n\t\t\t\t\t\t\t\td.heik2.color === 'l_g' ? '#90EE90' : d.heik2.color === 'd_g' ? '#006400' : d.heik2.color === 'l_r' ? '#ED0800' : '#8B0000'\n\t\t\t\t\t\t\t} />\n\t\t\t\t\t\t<StraightLine yValue={0} />\n\n\t\t\t\t\t\t<SingleValueTooltip\n\t\t\t\t\t\t\tyAccessor={d => d.heik2.bearPower}\n\t\t\t\t\t\t\tyLabel=\"HEIK2 - Bear power\"\n\t\t\t\t\t\t\tyDisplayFormat={format(\".2f\")}\n\t\t\t\t\t\t\tappearance={rsiAppearance}\n\t\t\t\t\t\t\t{...SMATooltipProps}\n\t\t\t\t\t\t\torigin={[-40, 35]}/>\n\t\t\t\t\t</Chart>\n\t\t\t\t)}\n\t\t\t\t{/* {this.isIncludeIndicators('RSI3') && (\n\t\t\t\t\t<Chart id={5} \n\t\t\t\t\t\t// height={(!this.props.isHomePage || isFullChart) ? 100 : 70}\n\t\t\t\t\t\theight={70}\n\t\t\t\t\t\tyExtents={[0, d => d.rsi2.bearPower]}\n\t\t\t\t\t\torigin={(w, h) => [0, h - this.calculateOffset('RSI3', isFullChart)]}\n\t\t\t\t\t\tpadding={{ top: 40, bottom: 10 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" stroke=\"white\" tickStroke=\"white\" />\n\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" stroke=\"white\" tickStroke=\"white\" ticks={4} tickFormat={format(\".2f\")}/>\n\t\t\t\t\t\t<MouseCoordinateX\n\t\t\t\t\t\t\tat=\"bottom\"\n\t\t\t\t\t\t\torient=\"bottom\"\n\t\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\n\t\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\t\tat=\"right\"\n\t\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\n\t\t\t\t\t\t<BarSeries\n\t\t\t\t\t\t\tyAccessor={d => d.rsi3.bearPower}\n\t\t\t\t\t\t\tbaseAt={(yScale) => yScale(0)}\n\t\t\t\t\t\t\tfill={d => d.side === 'buy' ? '#800080' : d.side === 'sell' ? '#FFA500' : d.side === 'hold' ? '#00FF00' : '#FF0000'} />\n\t\t\t\t\t\t<StraightLine yValue={0} />\n\n\t\t\t\t\t\t<SingleValueTooltip\n\t\t\t\t\t\t\tyAccessor={d => d.rsi3.bearPower}\n\t\t\t\t\t\t\tyLabel=\"RSI3 - Bear power\"\n\t\t\t\t\t\t\tyDisplayFormat={format(\".2f\")}\n\t\t\t\t\t\t\tappearance={rsiAppearance}\n\t\t\t\t\t\t\t{...SMATooltipProps}\n\t\t\t\t\t\t\torigin={[-40, this.props.isHompage ? 40 : 25]}/>\n\t\t\t\t\t</Chart>\n\t\t\t\t)} */}\n\t\t\t\t{/* {this.isIncludeIndicators('HEIK1') && (\n\t\t\t\t\t<Chart id={6} \n\t\t\t\t\t\t// height={(!this.props.isHomePage || isFullChart) ? 100 : 70}\n\t\t\t\t\t\theight={70}\n\t\t\t\t\t\tyExtents={[0, d => {console.log(d); return d.heik.bearPower}]}\n\t\t\t\t\t\torigin={(w, h) => [0, h - this.calculateOffset('HEIK1', isFullChart)]}\n\t\t\t\t\t\tpadding={{ top: 40, bottom: 10 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" stroke=\"white\" tickStroke=\"white\" />\n\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" stroke=\"white\" tickStroke=\"white\" ticks={4} tickFormat={format(\".2f\")}/>\n\t\t\t\t\t\t<MouseCoordinateX\n\t\t\t\t\t\t\tat=\"bottom\"\n\t\t\t\t\t\t\torient=\"bottom\"\n\t\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\n\t\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\t\tat=\"right\"\n\t\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\n\t\t\t\t\t\t<BarSeries\n\t\t\t\t\t\t\tyAccessor={d => d.heik.bearPower}\n\t\t\t\t\t\t\tbaseAt={(yScale) => yScale(0)}\n\t\t\t\t\t\t\tfill={d => d.side === 'buy' ? '#800080' : d.side === 'sell' ? '#FFA500' : d.side === 'hold' ? '#00FF00' : '#FF0000'} />\n\t\t\t\t\t\t<StraightLine yValue={0} />\n\n\t\t\t\t\t\t<SingleValueTooltip\n\t\t\t\t\t\t\tyAccessor={d => d.heik.bearPower}\n\t\t\t\t\t\t\tyLabel=\"HEIK1 - Bear power\"\n\t\t\t\t\t\t\tyDisplayFormat={format(\".2f\")}\n\t\t\t\t\t\t\tappearance={rsiAppearance}\n\t\t\t\t\t\t\t{...SMATooltipProps}\n\t\t\t\t\t\t\torigin={[-40, this.props.isHompage ? 40 : 25]}/>\n\t\t\t\t\t</Chart>\n\t\t\t\t)} */}\n\t\t\t\t{/* {this.isIncludeIndicators('HEIK2') && (\n\t\t\t\t\t<Chart id={7} \n\t\t\t\t\t\t// height={(!this.props.isHomePage || isFullChart) ? 100 : 70}\n\t\t\t\t\t\theight={70}\n\t\t\t\t\t\tyExtents={[0, d => d.heik2.bearPower]}\n\t\t\t\t\t\torigin={(w, h) => [0, h - this.calculateOffset('HEIK2', isFullChart)]}\n\t\t\t\t\t\tpadding={{ top: 40, bottom: 10 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" stroke=\"white\" tickStroke=\"white\" />\n\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" stroke=\"white\" tickStroke=\"white\" ticks={4} tickFormat={format(\".2f\")}/>\n\t\t\t\t\t\t<MouseCoordinateX\n\t\t\t\t\t\t\tat=\"bottom\"\n\t\t\t\t\t\t\torient=\"bottom\"\n\t\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\n\t\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\t\tat=\"right\"\n\t\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\n\t\t\t\t\t\t<BarSeries\n\t\t\t\t\t\t\t// yAccessor={d => { console.log(d); return elder.accessor()(d) && elder.accessor()(d).bearPower}}\n\t\t\t\t\t\t\tyAccessor={d => d.heik2.bearPower}\n\t\t\t\t\t\t\tbaseAt={(yScale) => yScale(0)}\n\t\t\t\t\t\t\tfill={d => d.side === 'buy' ? '#800080' : d.side === 'sell' ? '#FFA500' : d.side === 'hold' ? '#00FF00' : '#FF0000'} />\n\t\t\t\t\t\t<StraightLine yValue={0} />\n\n\t\t\t\t\t\t<SingleValueTooltip\n\t\t\t\t\t\t\tyAccessor={d => d.heik2.bearPower}\n\t\t\t\t\t\t\tyLabel=\"HEIK2 - Bear power\"\n\t\t\t\t\t\t\tyDisplayFormat={format(\".2f\")}\n\t\t\t\t\t\t\tappearance={rsiAppearance}\n\t\t\t\t\t\t\t{...SMATooltipProps}\n\t\t\t\t\t\t\torigin={[-40, this.props.isHompage ? 40 : 25]}/>\n\t\t\t\t\t</Chart>\n\t\t\t\t)} */}\n\t\t\t\t<CrossHairCursor />\n\t\t\t\t<DrawingObjectSelector\n\t\t\t\t\tenabled={!this.state.enableInteractiveObject}\n\t\t\t\t\tgetInteractiveNodes={this.getInteractiveNodes}\n\t\t\t\t\tdrawingObjectMap={{\n\t\t\t\t\t\tEquidistantChannel: \"channels\"\n\t\t\t\t\t}}\n\t\t\t\t\tonSelect={this.handleSelection}\n\t\t\t\t/>\n\t\t\t{(!this.props.isHomePage || isFullChart) && \n\t\t\t\t<g>\n\t\t\t\t\t<rect\n\t\t\t\t\t\tclassName={this.props.classes.CandleChart}\n\t\t\t\t\t\tx={this.state.x - 100}\n\t\t\t\t\t\ty={this.state.y - 50}\n\t\t\t\t\t\twidth=\"200\"\n\t\t\t\t\t\theight=\"50\"\n\t\t\t\t\t\tstroke=\"#3D4977\"\n\t\t\t\t\t\tfill=\"#3D4977\"\n\t\t\t\t\t\trx=\"2\"\n\t\t\t\t\t\try=\"2\"\n\t\t\t\t\t/>\n\t\t\t\t\t<ToolTipText x={this.state.x} y={this.state.y}>\n\t\t\t\t\t\t<tspan\n\t\t\t\t\t\tclassName={this.props.classes.CandleChart_type_date}\n\t\t\t\t\t\tx={this.state.x}\n\t\t\t\t\t\ttextAnchor=\"middle\"\n\t\t\t\t\t\tdy=\"-1em\"\n\t\t\t\t\t\tfill={\"#fff\"}\n\t\t\t\t\t\tonClick={this.hideTextLabel.bind(this)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t{this.state.dateText}\n\t\t\t\t\t\t{this.state.status}\n\t\t\t\t\t\t</tspan>\n\t\t\t\t\t\t<tspan\n\t\t\t\t\t\tclassName={this.props.classes.CandleChart_type_value}\n\t\t\t\t\t\tx={this.state.x}\n\t\t\t\t\t\ttextAnchor=\"middle\"\n\t\t\t\t\t\tkey=\"value\"\n\t\t\t\t\t\tdy=\"-1em\"\n\t\t\t\t\t\tfill={\"#fff\"}\n\t\t\t\t\t\tonClick={this.hideTextLabel.bind(this)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\tPrice: {this.state.valueText}\n\t\t\t\t\t\t</tspan>\n\t\t\t\t\t</ToolTipText>\n\t\t\t\t\t</g>\n\t\t\t\t}\n\t\t\t</ChartCanvas>\n\t\t);\n\t}\n}\n\nCandleStickChartWithEquidistantChannel.propTypes = {\n\tdata: PropTypes.array.isRequired,\n\twidth: PropTypes.number.isRequired,\n\tratio: PropTypes.number.isRequired,\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired\n};\n  \nCandleStickChartWithEquidistantChannel.defaultProps = {\n\ttype: \"svg\",\n};\n\nCandleStickChartWithEquidistantChannel = fitWidth(CandleStickChartWithEquidistantChannel);\n\n\n  \nexport default withStyles({\n\tCandleChart_type_date: {\n\t  fontSize: \"12px\",\n\t  fill: \"#AEC6EE\"\n\t},\n\tCandleChart: {\n\t  borderRadius: \"2px\"\n\t},\n\tCandleChart_type_value: {\n\t  fontSize: \"16px\",\n\t  fontWeight: 500\n\t},\n\tdeal_green_shadowed: {\n\t  textShadow: \"0 0 3px yellowgreen\"\n\t},\n\tdeal_red_shadowed: {\n\t  textShadow: \"0 0 3px fuchsia\"\n\t}\n})(fitWidth(CandleStickChartWithEquidistantChannel));\n  ","import React from 'react'\nimport Chart from 'react-apexcharts'\nimport moment from \"moment\";\n\nexport class MultiLineChart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      series: this.getSeries(),\n      options: {\n        chart: {\n          height: 350,\n          type: 'line',\n          zoom: {\n            enabled: false\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          show: true,\n          curve: 'smooth',\n          lineCap: 'butt',\n          colors: undefined,\n          width: 2,\n          dashArray: 0,\n        },\n        title: {\n          text: props.isPercent ? 'Percent Gain/Lost' : 'Total Percent Gain/Lost',\n          align: 'left',\n          style: {\n            fontSize:  '18px',\n            fontWeight:  'bold',\n            color: '#FFFFFF'\n          },\n        },\n        grid: {\n          show: false\n        },\n        xaxis: {\n          categories: this.getCategories(),\n          labels: {\n            show: true,\n            style: {\n                colors: '#FFFFFF',\n            },\n            formatter: (val, opt) => {\n                if (val && val.length>10) {\n                  return moment.utc(val).format(\"MM/DD hh:mm\")\n                } else {\n                  return moment.utc(val).format(\"MM/DD\")\n                }\n              }\n          },\n          datetimeUTC: true,\n        },\n        yaxis: {\n          labels: {\n            show: true,\n            style: {\n                colors: '#FFFFFF',\n            },\n            formatter: (value) => { return (value)?value.toFixed(3):'' },\n          },\n          axisBorder: {\n            show: true,\n          },\n          min: this.getMinValue(),\n          max: this.getMaxValue(),\n        },\n        legend: {\n          show: true,\n          labels: {\n            colors: ['#FFFFFF']\n          },\n          position: 'top'\n        }\n      },\n    };\n  }\n\n  getSeries() {\n    const series = []\n    this.props.chartData.map((data) => {\n      for (const property in data) {\n        series.push({\n          name: property,\n          data: data[property].map((o) => this.props.isPercent ? o.percent.toFixed(3) : o.efficiency.toFixed(3))\n        })\n      }\n      return null\n    })\n    return series\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.chartData !== this.props.chartData) {\n      this.setState({\n        series: this.getSeries(),\n        options: {\n          xaxis: {\n            categories: this.getCategories(),\n            labels: {\n              show: true,\n              style: {\n                  colors: '#FFFFFF',\n              },\n              formatter: (val) => {\n                if (val && val.length>10) {\n                  return moment.utc(val).format(\"MM/DD hh:mm\")\n                } else {\n                  return moment.utc(val).format(\"MM/DD\")\n                }\n              }\n            },\n            datetimeUTC: true,\n          },\n          yaxis: {\n            labels: {\n              show: true,\n              style: {\n                  colors: '#FFFFFF',\n              },\n              formatter: (value) => { return (value)?value.toFixed(3):0 },\n              min: this.getMinValue(),\n              max: this.getMaxValue(),\n            },\n            axisBorder: {\n              show: true,\n            },\n          }\n        },\n      })\n    }\n  }\n\n  getMinValue() {\n    let series = [];\n    this.props.chartData.map((data) => {\n      for (const property in data) {\n        const rows = data[property].map(o => this.props.isPercent ? o.percent : o.efficiency)\n        series.push(Math.min(...rows))\n      }\n\n      return null\n    })\n    const min = Math.min(...series)\n    return min.toFixed(3);\n  }\n\n  getMaxValue() {\n    let series = [];\n\n    this.props.chartData.map((data) => {\n      for (const property in data) {\n        const rows = data[property].map(o => this.props.isPercent ? o.percent : o.efficiency)\n        series.push(Math.max(...rows))\n      }\n      return null\n    })\n    const max = Math.max(...series)\n    return max.toFixed(3);\n  }\n\n  getCategories() {\n    const categories = this.props.chartData.map((data) => {\n      for (const property in data) {\n        return data[property].map((o) => o.date)\n      }\n      return []\n    })\n\n    return categories[0]\n  }\n\n  render() {\n    return (\n      <div id=\"chart\">\n        <Chart options={this.state.options} series={this.state.series} type=\"line\" height={350} />\n      </div>\n    )\n  }\n}","import React, { useState, useEffect } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nconst getWiningData = (chartData, isAverage, isTotal) => {\n  return chartData.map((d) => isAverage ? d.avgWinning : !isTotal ? d.winning : d.totWinning)\n}\n\nconst getLosingData = (chartData, isAverage, isTotal) => {\n  return chartData.map((d) => isAverage ? d.avgLosing : !isTotal ? d.losing : d.totLosing)\n}\n\nconst getSymbols = (chartData) => {\n  return chartData.map((d) => d.symbol)\n}\n\nconst optionCreator = (chartData, isAverage, isTotal, isPercent) => {\n  const formatAvg = (value) => {\n    const formatValue = parseFloat(value.toFixed(2))\n    return formatValue + ((isPercent)?' %':'')\n  }\n  return {\n    chart: {\n      type: \"bar\",\n      width: \"100%\",\n      toolbar: {\n        show: false\n      },\n      events: {\n        click: function (event, chartContext, config) {\n          console.log(\"clicked\");\n        }\n      }\n    },\n    states: {\n      normal: {\n        filter: {\n          type: \"none\"\n        }\n      },\n      active: {\n        filter: {\n          type: \"darken\",\n          value: 0.35\n        }\n      }\n    },\n    colors: [\"#00ff00\", `rgba(255,0,0, ${1 ? 0.5 : 1})`],\n    title: {\n      text: isAverage ? \"Average return per trade\" : !isTotal ? \"Number of trades\" : \"Total return\",\n      align: \"left\",\n      offsetX: 8,\n      offsetY: -2,\n      style: {\n        fontSize: \"16px\",\n        color: '#FFFFFF'\n      }\n    },\n    plotOptions: {\n      bar: {\n        endingShape: \"rounded\",\n        columnWidth: \"75%\",\n        barHeight: \"100%\",\n        dataLabels: {\n          position: \"top\"\n        }\n      }\n    },\n    dataLabels: {\n      enabled: true,\n      offsetY: -20,\n      style: {\n        fontSize: \"16px\",\n        colors: [\"#FFFFFF\", \"#FFFFFF\"]\n      },\n      formatter: (value, opts) => {\n        return formatAvg(value)\n      },\n    },\n    stroke: {\n      show: true,\n      width: 1,\n      colors: [\"#fff\"]\n    },\n    xaxis: {\n      categories: getSymbols(chartData),\n      labels: {\n        show: true,\n        style: {\n            colors: '#FFFFFF',\n        },\n      },\n    },\n    grid: {\n      show: false\n    },\n    yaxis: {\n      labels: {\n        show: true,\n        style: {\n            colors: '#FFFFFF',\n        },\n        // formatter: (value) => { return isAverage ? value.toFixed(5) : value | 0 },\n        formatter: (value) => {\n          return formatAvg(value)\n        },\n      },\n      axisBorder: {\n        show: true,\n      },\n    },\n    tooltip: {\n      enabled: true\n    },\n    legend: {\n      position: \"top\",\n      horizontalAlign: \"right\",\n      offsetY: -50,\n      fontSize: \"14px\",\n      labels: {\n        colors: \"#FFFFFF\"\n      },\n      markers: {\n        width: 16,\n        height: 16,\n        radius: 4\n      },\n      itemMargin: {\n        horizontal: 5,\n        vertical: 5\n      },\n      onItemHover: {\n        highlightDataSeries: true\n      }\n    }\n  };\n};\n\nexport default function GroupApexBar(props) {\n  const { data: chartData, isAverage, isTotal, isPercent } = props;\n  const [options, setOptions] = useState(optionCreator(chartData, isAverage, isTotal, isPercent));\n  const [series, setSeries] = useState([\n    {\n      data: getWiningData(chartData, isAverage, isTotal)\n    },\n    {\n      data: getLosingData(chartData, isAverage, isTotal)\n    }\n  ]);\n\n  useEffect(() => {\n    setOptions(optionCreator(chartData, isAverage, isTotal, isPercent))\n    setSeries([\n      {\n        name: isAverage ? 'Winning Average' : !isTotal ? 'Winning' : 'Total Winning',\n        data: getWiningData(chartData, isAverage, isTotal)\n      },\n      {\n        name: isAverage ? 'Losing Average' : !isTotal ? 'Losing' : 'Total Losing',\n        data: getLosingData(chartData, isAverage, isTotal)\n      }\n    ])\n\n  }, [chartData, isAverage])\n\n  return (\n    <div id=\"chart\">\n      <ReactApexChart\n        options={options}\n        series={series}\n        type=\"bar\"\n        width={'100%'}\n        height={400}\n      />\n    </div>\n  );\n}","import { MultiLineChart } from './MultiLineChart'\nimport GroupApexBar from './GroupBarChart'\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\nclass PerformanceChart extends React.Component {\n\trender() {\n\n\t\tconst { data: mainData } = this.props;\n\n\t\tif (mainData == null) {\n\t\t\treturn <div>Loading...</div>\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<MultiLineChart chartData={mainData.totalPercentGainLost} isPercent={false}/>\n\t\t\t\t<MultiLineChart chartData={mainData.percentEfficiency} isPercent={true}/>\n\t\t\t\t<TypeChooser>\n\t\t\t\t\t{type => <GroupApexBar type={type} data={mainData.winningLosing} isAverage={false} isPercent={false} />}\n\t\t\t\t</TypeChooser>\n\t\t\t\t<TypeChooser>\n\t\t\t\t\t{type => <GroupApexBar type={type} data={mainData.winningLosingAvg} isAverage={true} isPercent={true}/>}\n\t\t\t\t</TypeChooser>\n\t\t\t\t<TypeChooser>\n\t\t\t\t\t{type => <GroupApexBar type={type} data={mainData.totWinLose} isTotal={true} isAverage={false} isPercent={true}/>}\n\t\t\t\t</TypeChooser>\n\t\t\t\t{/* <MultiLineChart chartData={mainData.percentEfficiency} isPercent={false}/> */}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nPerformanceChart.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\twidth: PropTypes.number.isRequired,\n\tratio: PropTypes.number.isRequired,\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\n};\n\nPerformanceChart.defaultProps = {\n\ttype: \"svg\",\n};\nPerformanceChart = fitWidth(PerformanceChart);\n\nexport default PerformanceChart;","import Axios from 'axios';\n\nconst http  = Axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nconst request = async (req) => {\n  const config = {\n    method: req.method,\n    url: req.path,\n    params: req.params,\n    data: req.body,\n    headers: req.headers,\n  }\n  try {\n    const response = await http.request(config);\n    return {\n      success: true,\n      data: response.data,\n    }\n  } catch (err) {\n    console.error(`request ${req.path}:`, err);\n    return {\n      success: false,\n      data: err,\n    }\n  }\n}\n\nexport const getStrategyListReq = async () => {\n  const req = {\n    method: 'GET',\n    path: 'api/get_strategy_list'\n  }\n\n  return await request(req);\n}\n\nexport const getTablesReq = async (strategy) => {\n  const req = {\n    method: 'POST',\n    path: 'api/tables',\n    body: {\n      strategy,\n    }\n  }\n\n  return await request(req);\n}\n\nexport const getDataReq = async (body) => {\n  const req = {\n    method: 'POST',\n    path: 'api/get_data',\n    body,\n  }\n\n  return await request(req);\n}\n\nexport const getDataSliceReq = async (body) => {\n  const req = {\n    method: 'POST',\n    path: 'api/get_data_slice',\n    body,\n  }\n\n  return await request(req);\n}\n\nexport const getDataExtendedSliceReq = async (body) => {\n  const req = {\n    method: 'POST',\n    path: 'api/get_data_extended_slice',\n    body,\n  }\n\n  return await request(req);\n}\n\nexport const getDataExtendedReq = async (body) => {\n  const req = {\n    method: 'POST',\n    path: 'api/get_data_extended',\n    body,\n  }\n\n  return await request(req);\n}\n\nexport const getBacktestingResultReq = async (body) => {\n  const req = {\n    method: 'POST',\n    path: 'api/get_backtesting_result',\n    body,\n  }\n\n  return await request(req);\n}\n\nexport const filterPriceData = async (symbol, timeFrame, tradeStartDate, tradeEndDate, currentPage, pageAmount) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      'symbol': symbol,\n      'time_frame': timeFrame,\n      'start': tradeStartDate,\n      'end': tradeEndDate,\n      'page_num': currentPage,\n      'page_mounts': pageAmount,\n    })\n  };\n\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/api/get_table_candles\", requestOptions)\n    .then(response => response.json())\n    .then(data => {\n      const candles = []\n      data.candles.forEach((x) => {\n        candles.push({\n          'o': x.o,\n          'h': x.h,\n          'c': x.c,\n          'l': x.l,\n          'v': x.v,\n          'date': x.date.replace('T', ' '),\n        })\n      })\n      return {\n        candles,\n        page_total: data.page_total\n      }\n    })\n}\n\nexport const filterTradesData = async (macroStrategy, microStrategy, tradeStartDate, tradeEndDate, currentPage, pageAmount) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      'macroStrategy': macroStrategy,\n      'microStrategy': microStrategy,\n      'tradeStartDate': tradeStartDate,\n      'tradeEndDate': tradeEndDate,\n      'page_num': currentPage,\n      'page_mounts': pageAmount,\n    })\n  };\n\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/api/get_data_trades\", requestOptions)\n    .then(response => response.json())\n    .then(data => {\n      let trades_data = []\n      data.trades_data.forEach((x) => {\n        trades_data.push({\n          'symbol': x.symbol,\n          'strategy': `${x.macro_strategy} - ${x.micro_strategy}`,\n          'side': x.side,\n          'quantity': x.quantity,\n          'date': x.date.replace('T', ' '),\n          'price': x.price\n        })\n      })\n      return {\n        trades_data,\n        page_total: data.page_total\n      }\n    })\n}\n\nexport const getAllSymbols = async () => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      'strategy': 'no_strategy'\n    })\n  };\n\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/api/tables\", requestOptions)\n    .then(response => response.json())\n    .then(data => {\n      let temp_data = []\n      data.tables.map((x) => {\n        temp_data.push({\n          value: x,\n          label: x\n        });\n        return null\n      })\n      return temp_data\n    })\n}\n\nexport const createSignUpLink = async (roles) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      roles: roles,\n      link: process.env.REACT_APP_BACKEND_URL + '/signup/'\n    })\n  };\n  let res = []\n  await fetch(process.env.REACT_APP_BACKEND_URL + \"/links\", requestOptions)\n    .then(response => response.json())\n    .then(async data => {\n      if (data.success === \"create link\") {\n        await fetch(process.env.REACT_APP_BACKEND_URL + \"/links\")\n        .then(response => response.json())\n        .then(data => {\n          res = data\n        })\n      }\n    })\n  return res\n}\n\nexport const getActiveLinks = async () => {\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/links\")\n    .then(response => response.json())\n    .then(data => {\n      return data;\n    })\n}\n\nexport const sendSignUpLink = async (email, link) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      email,\n      link\n    })\n  };\n\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/send-signup-link\", requestOptions)\n    .then(response => response.json())\n    .then(data => {\n      return true\n    })\n}\n\nexport const forgotPassword = async (email) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      email,\n      url: process.env.REACT_APP_BACKEND_URL\n    })\n  };\n\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/password_reset/\", requestOptions)\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n}\n\nexport const getStrategyOptions = async () => {\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/api/get_strategies\")\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n}\n\nexport const passwordConfirmReset = async (password1, password2, pathname) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      password1,\n      password2,\n      pathname: pathname\n    })\n  };\n\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/password_reset_confirm/\", requestOptions)\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n}\n\nexport const getScriptFileNames = async() => {\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/api/get_script_files\")\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n}\n\nexport const getModuleTypeNames = async() => {\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/strategy/parameter_list/\")\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n}\n\nexport const getFileTypeNames = async(moduleType) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      param_type: moduleType\n    })\n  };\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/strategy/parameter_detail_list/\", requestOptions)\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n}\n\nexport const createScriptFile = async(filename, content, isUpdate) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      filename,\n      content,\n    })\n  };\n\n  const api = isUpdate ? '/api/update_script_file' : '/api/create_script_file';\n\n  return await fetch(process.env.REACT_APP_BACKEND_URL + api, requestOptions)\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n}\n\nconst convertArraytoString = (src) => {\n  if (!src) {\n    return ''\n  }\n\n  let dest = ''\n  let comma = ''\n\n  src.forEach(o => {\n    dest = dest + comma + o.value\n    comma = ','\n  })\n  return dest\n}\n\nconst convertStringtoArray = (src) => {\n  if (!src || !src.length) {\n    return null\n  }\n\n  const dest = src.split(',')\n  return dest.map((o) => ({\n    value: o,\n    label: o\n  }))\n}\n\nconst convertStringtoHourObject = (src) => {\n  return {\n    value: src === true || src === 'true' ? true : false,\n    label: src === true || src === 'true' ? 'true' : 'false',\n  }\n}\n\nconst transformingProcessConfigToQuery = (settings) => {\n  return {\n    name: settings.name,\n    indicator: convertArraytoString(settings.indicator),\n    watchlist: convertArraytoString(settings.watchlist),\n    position_sizing: convertArraytoString(settings.position_sizing),\n    order_routing: convertArraytoString(settings.order_routing),\n    data_source: convertArraytoString(settings.data_source),\n    live_trading: convertArraytoString(settings.live_trading),\n    starting_cash: settings.starting_cash,\n    extended_hours: convertArraytoString(settings.extended_hours),\n    macro_strategy: convertArraytoString(settings.macro_strategy),\n    indicator_signalling: convertArraytoString(settings.indicator_signalling),\n    asset_class: convertArraytoString(settings.asset_class),\n  };\n}\n\nconst transformingProcessConfigFromParam = (settings) => {\n  return {\n    name: settings.name,\n    indicator: convertStringtoArray(settings.indicator),\n    watchlist: convertStringtoArray(settings.watchlist),\n    position_sizing: convertStringtoArray(settings.position_sizing),\n    order_routing: convertStringtoArray(settings.order_routing),\n    data_source: convertStringtoArray(settings.data_source),\n    live_trading: convertStringtoArray(settings.live_trading),\n    starting_cash: settings.starting_cash,\n    extended_hours: convertStringtoHourObject(settings.extended_hours),\n    macro_strategy: convertStringtoArray(settings.macro_strategy),\n    indicator_signalling: convertStringtoArray(settings.indicator_signalling),\n    asset_class: convertStringtoArray(settings.asset_class),\n  };\n}\n\nexport const saveConfigFile = async(settings) => {\n\n\n  const data = transformingProcessConfigToQuery(settings)\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      config_collection: 'bot_configs',\n      config: data\n    })\n  };\n\n  const api = '/strategy/create_one_config_detail/';\n\n  return await fetch(process.env.REACT_APP_BACKEND_URL + api, requestOptions)\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n}\n\nexport const saveScriptFile = async(filename, contents, isUpdate) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      name: filename,\n      contents,\n    })\n  };\n\n  const api = '/strategy/save_other_parameters/';\n\n  return await fetch(process.env.REACT_APP_BACKEND_URL + api, requestOptions)\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n}\n\nexport const getScriptFile = async(filename) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      filename,\n    })\n  };\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/api/get_script_file\", requestOptions)\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n}\n\n/** User Management Api*/\nexport const getUserList = async () => {\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/get_user_list\")\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n}\n\nexport const updateUserRole = async (id, role) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      id,\n      role\n    })\n  };\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/update_user_role\", requestOptions)\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n}\n\nexport const deleteUser = async (id) => {\n  const requestOptions = {\n    method: 'PUT',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      id,\n    })\n  };\n\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/delete_user/\", requestOptions)\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n}\n\nexport const getConfigFileList = async (collection) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      config_collection: collection,\n    })\n  };\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/strategy/config_detail_names/\", requestOptions)\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n}\n\nexport const getBotConfigFileList = async (collection) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      config_collection: collection,\n    })\n  };\n\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/strategy/config_detail_names/\", requestOptions)\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n}\n\nexport const getConfigFileDetail = async (collection, name) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      config_collection: collection,\n      name,\n    })\n  };\n  const res = await fetch(process.env.REACT_APP_BACKEND_URL + \"/strategy/config_item_detail/\", requestOptions)\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n\n  return transformingProcessConfigFromParam(res.result)\n}\n\nexport const getBotStatusList = async () => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      \"config_collection\": \"bot_status\"\n    })\n  };\n\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/strategy/bot_status_list/\", requestOptions)\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n}\n\nexport const updateBotStatus = async (botName, botAction) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      \"config_collection\": \"bot_configs\",\n      \"name\": botName\n    })\n  };\n\n  const apiUrl = botAction === 'start'\n    ? '/strategy/bot_run/'\n    : botAction === 'pause'\n    ? '/strategy/bot_pause/'\n    : '/strategy/bot_stop/'\n\n  try {\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiUrl, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        return data\n      })\n  } catch (e) {\n    return {\n      success: false,\n      message: e\n    }\n  }\n}\n\nexport const getBotConfigList = async () => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      \"config_collection\": \"bot_configs\",\n    })\n  };\n\n  const apiUrl = '/strategy/config_details/'\n\n  try {\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiUrl, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        return data\n      })\n  } catch (e) {\n    return {\n      success: false,\n      message: e\n    }\n  }\n}\n\nexport const getNewsFinancialData = async (symbol) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      'symbol': symbol,\n    })\n  };\n\n  const apiUrl = '/news/symbol_news/'\n\n  try {\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiUrl, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        return data\n      })\n  } catch (e) {\n    return {\n      success: false,\n      message: e\n    }\n  }\n}\n\nexport const getIncomeStatement = async (symbol) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      'symbol': symbol,\n    })\n  };\n\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/financials/income_statement/\", requestOptions)\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n}\nexport const getBalanceSheet = async (symbol) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      'symbol': symbol,\n    })\n  };\n\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/financials/balance_sheet/\", requestOptions)\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n}\n\nexport const getCashStatement = async (symbol) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      'symbol': symbol,\n    })\n  };\n\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/financials/cash_statement/\", requestOptions)\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n}\n\nexport const getFinancialTotalData = async (symbol) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      'symbol': symbol,\n    })\n  };\n\n  return await fetch(process.env.REACT_APP_BACKEND_URL + \"/financials/financial_total_data/\", requestOptions)\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n}\n\nexport const getStockModalData = async () => {\n  const apiUrl = '/scanner/available_items/'\n\n  try {\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiUrl)\n      .then(response => response.json())\n      .then(data => {\n        return data\n      })\n  } catch (e) {\n    return {\n      success: false,\n      message: e\n    }\n  }\n}\n\nexport const getMultiFinancials = async (symbols, statement_type) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      'symbols': symbols,\n      'financial_part': statement_type,\n    })\n  };\n\n  const apiURL = '/scanner/multi_financials/'\n  try {\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        return data.results\n      })\n  } catch (e) {\n    return {\n      success: false,\n      message: e\n    }\n  }\n}\n\nexport const saveScannerView = async (chart_number, symbols, fields) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      'chart_number': chart_number,\n      'symbols': symbols,\n      'fields': fields,\n    })\n  };\n\n  const apiURL = '/scanner/save_scanner_views/'\n  try {\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        return data.results\n      })\n  } catch (e) {\n    return {\n      success: false,\n      message: e\n    }\n  }\n}\n\nexport const getScannerViewData = async (chart_number) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      'chart_number': chart_number,\n    })\n  };\n\n  const apiURL = '/scanner/scanner_views/'\n  try {\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\n    .then(response => response.json())\n    .then(data => {\n        return data.result\n      })\n  } catch (e) {\n    return {\n      success: false,\n      message: e\n    }\n  }\n}\n\nexport const getScannerDetails = async (exchange='', industry='', sector='', currentPage, pageAmount) => {\n\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      'exchange': exchange,\n      'industry': industry,\n      'sector': sector,\n      'page_num': currentPage,\n      'page_mounts': pageAmount,\n    })\n  };\n\n  const apiURL = '/scanner/ticker_details_list/'\n\n  try {\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n  } catch (e) {\n    return {\n      success: false,\n      message: e\n    }\n  }\n}\n\nexport const getTickerScannerOptions = async () => {\n  const apiUrl = '/scanner/ticker_details_filter_options/'\n\n  try {\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiUrl)\n      .then(response => response.json())\n      .then(data => {\n        return data\n      })\n  } catch (e) {\n    return {\n      success: false,\n      message: e\n    }\n  }\n}\n\nexport const getFloatsFilterOptions = async () => {\n  const apiUrl = '/floats/float_details_filter_options/'\n\n  try {\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiUrl)\n      .then(response => response.json())\n      .then(data => {\n        return data\n      })\n  } catch (e) {\n    return {\n      success: false,\n      message: e\n    }\n  }\n}\n\nexport const getFloatsDetails = async (pageNumber, pageAmount, exchange='', industry='', sector='') => {\n\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      'page_num': pageNumber,\n      'page_mounts': pageAmount,\n      'exchange': exchange,\n      'industry': industry,\n      'sector': sector,\n    })\n  };\n\n  const apiURL = '/floats/float_details_list/'\n\n  try {\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\n    .then(response => response.json())\n    .then(data => {\n      return data.results\n    })\n  } catch (e) {\n    return {\n      success: false,\n      message: e\n    }\n  }\n}\n\nexport const saveScannerAllViewData = async (allViewData) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify(allViewData)\n  };\n\n  const apiURL = '/scanner/save_all_views/'\n  try {\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        return {\n          success: true,\n          data: data.results\n        }\n      })\n  } catch (e) {\n    return {\n      success: false,\n      message: e\n    }\n  }\n}\n\nexport const getScannerAllViewData = async (chart_number) => {\n  const requestOptions = {\n    method: 'GET',\n    headers: {'Content-Type': 'application/json'},\n  };\n\n  const apiURL = '/scanner/load_all_views/'\n  try {\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\n    .then(response => response.json())\n    .then(data => {\n        return {\n          success: true,\n          data: data.result,\n        }\n      })\n  } catch (e) {\n    return {\n      success: false,\n      message: e\n    }\n  }\n}\n\nexport const getSymbolsByMicroStrategy = async (macroStrat, microStrat) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      'macro': macroStrat,\n      'micro': microStrat\n    })\n  };\n\n  const apiURL = '/api/micro_strategy_symbols'\n\n  try {\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        return {\n          success: true,\n          data: data.result\n        }\n      })\n  } catch (e) {\n    return {\n      success: false,\n      message: e\n    }\n  }\n}\n\nexport const getIndicators = async () => {\n  const requestOptions = {\n    method: 'GET',\n    headers: {'Content-Type': 'application/json'},\n  };\n\n  const apiURL = '/api/indicator_list'\n  try {\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\n    .then(response => response.json())\n    .then(data => {\n        return {\n          success: true,\n          data: data.result,\n        }\n      })\n  } catch (e) {\n    return {\n      success: false,\n      message: e\n    }\n  }\n}\n\nexport const getIndicatorSignallingList = async () => {\n  const requestOptions = {\n    method: 'GET',\n    headers: {'Content-Type': 'application/json'},\n  };\n\n  const apiURL = '/api/get_indicator_signalling_list'\n  try {\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\n    .then(response => response.json())\n    .then(data => {\n        return {\n          success: true,\n          data: data.result,\n        }\n      })\n  } catch (e) {\n    return {\n      success: false,\n      message: e\n    }\n  }\n}\n\nexport const apiGetDatabases = async() => {\n  const requestOptions = {\n    method: 'GET',\n    header: {'Content-Type': 'application/json'},\n  }\n\n  const apiURL = '/api/get_databases'\n  try {\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n  } catch (e) {\n    return {\n      success: false,\n      message: e\n    }\n  }\n}\n\nexport const apiGetCollections = async(dbName) => {\n  const requestOptions = {\n    method: 'GET',\n    header: {'Content-Type': 'application/json'},\n  }\n\n  let apiURL = new URL(process.env.REACT_APP_BACKEND_URL + '/api/get_collections')\n  apiURL.search = new URLSearchParams({db_name: dbName}).toString()\n\n  try {\n    return await fetch(apiURL, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        return data\n      })\n  } catch (e) {\n    return {\n      success: false,\n      message: e\n    }\n  }\n}\n\nexport const apiDeleteCollection = async(dbName, collectionName) => {\n  const requestOptions = {\n    method: 'GET',\n    header: {'Content-Type': 'application/json'},\n  }\n\n  let apiURL = new URL(process.env.REACT_APP_BACKEND_URL + '/api/delete_collection')\n  apiURL.search = new URLSearchParams({db_name: dbName, collection_name: collectionName}).toString()\n\n  try {\n    return await fetch(apiURL, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        return data\n      })\n  } catch (e) {\n    return {\n      success: false,\n      message: e\n    }\n  }\n}\n\n\nexport const apiDeleteDatabase = async(dbName) => {\n  const requestOptions = {\n    method: 'GET',\n    header: {'Content-Type': 'application/json'},\n  }\n\n  let apiURL = new URL(process.env.REACT_APP_BACKEND_URL + '/api/delete_database')\n  apiURL.search = new URLSearchParams({db_name: dbName}).toString()\n\n  try {\n    return await fetch(apiURL, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        return data\n      })\n  } catch (e) {\n    return {\n      success: false,\n      message: e\n    }\n  }\n}\n\n\nexport const apiExportDatabase = async(dbName) => {\n  const requestOptions = {\n    method: 'GET',\n    header: {'Content-Type': 'application/json'},\n  }\n\n  let apiURL = new URL(process.env.REACT_APP_BACKEND_URL + '/api/export_database')\n  apiURL.search = new URLSearchParams({db_name: dbName}).toString()\n\n  try {\n    return await fetch(apiURL, requestOptions)\n      .then(response => {\n        response.blob().then(blob => {\n          let url = window.URL.createObjectURL(blob);\n          let a = document.createElement(\"a\");\n          a.href = url;\n          a.download = `${dbName}.zip`;\n          a.click();\n        })\n      })\n  } catch (e) {\n    return {\n      success: false,\n      message: e\n    }\n  }\n}\n\n\nexport const apiExportCollection = async(dbName, collectionName) => {\n  const requestOptions = {\n    method: 'GET',\n    header: {'Content-Type': 'application/json'},\n  }\n\n  let apiURL = new URL(process.env.REACT_APP_BACKEND_URL + '/api/export_collection')\n  apiURL.search = new URLSearchParams({db_name: dbName, collection_name: collectionName}).toString()\n\n  try {\n    return await fetch(apiURL, requestOptions)\n      .then(response => {\n        response.blob().then(blob => {\n          let url = window.URL.createObjectURL(blob);\n          let a = document.createElement(\"a\");\n          a.href = url;\n          a.download = `${dbName}_${collectionName}.csv`;\n          a.click();\n        })\n      })\n  } catch (e) {\n    return {\n      success: false,\n      message: e\n    }\n  }\n}\n\nexport const getWatchListAll = async () => {\n  const requestOptions = {\n    method: 'GET',\n    headers: {'Content-Type': 'application/json'},\n  };\n\n  const apiURL = '/scanner/watchlists_all/'\n  try {\n    return await fetch(process.env.REACT_APP_BACKEND_URL + apiURL, requestOptions)\n    .then(response => response.json())\n    .then(data => {\n        return {\n          success: true,\n          result: data.result,\n        }\n      })\n  } catch (e) {\n    return {\n      success: false,\n      message: e\n    }\n  }\n}\n\n\n\nexport const apiCreateBackup = async(dbName, collectionName = '') => {\n  const requestOptions = {\n    method: 'GET',\n    header: {'Content-Type': 'application/json'},\n  }\n\n  let apiURL = new URL(process.env.REACT_APP_BACKEND_URL + '/api/create_backup')\n  apiURL.search = new URLSearchParams({db_name: dbName, collection_name: collectionName}).toString()\n\n  try {\n    return await fetch(apiURL, requestOptions)\n      .then(response => response.json())\n      .then(result => result['data'])\n  } catch (e) {\n    return {\n      success: false,\n      message: e\n    }\n  }\n}\n\n\nexport const apiExecuteBackup = async(data) => {\n  const requestOptions = {\n    method: 'GET',\n    header: {'Content-Type': 'application/json'},\n  }\n\n  let apiURL = new URL(process.env.REACT_APP_BACKEND_URL + '/api/execute_backup')\n  apiURL.search = new URLSearchParams({backup_id: data['id']}).toString()\n\n  try {\n    let filename = `${data['database']}.zip`\n    if (data['collection']) {\n      filename = `${data['database']}_${data['collection']}.csv`\n    }\n    return await fetch(apiURL, requestOptions)\n      .then(response => {\n        const contentType = response.headers.get(\"content-type\");\n        if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n          console.log('Json object response')\n        } else {\n          response.blob().then(blob => {\n            let url = window.URL.createObjectURL(blob);\n            let a = document.createElement(\"a\");\n            a.href = url;\n            a.download = filename;\n            a.click();\n          })\n        }\n\n        // console.log('response')\n        // console.log(response)\n\n\n      })\n  } catch (e) {\n    return {\n      success: false,\n      message: e\n    }\n  }\n}\n\n\nexport const apiStopBackup = async(data) => {\n  const requestOptions = {\n    method: 'GET',\n    header: {'Content-Type': 'application/json'},\n  }\n\n  let apiURL = new URL(process.env.REACT_APP_BACKEND_URL + '/api/stop_backup')\n  apiURL.search = new URLSearchParams({backup_id: data['id']}).toString()\n\n  try {\n    return await fetch(apiURL, requestOptions)\n      .then(response => response.json())\n      .then(result => result['data'])\n  } catch (e) {\n    return {\n      success: false,\n      message: e\n    }\n  }\n}\n\n\n\n","import React, { useState, useEffect } from \"react\";\nimport Chart from '../trades-chart/TradesChart';\nimport PerformanceChart from '../performance-chart/PerformanceChart'\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\n\nimport { getDataReq, getDataExtendedReq, getBacktestingResultReq, getDataSliceReq, getDataExtendedSliceReq } from 'api/Api';\n\nconst StockChart = (props) => {\n  const {\n    chartColumn,\n    viewType,\n    symbol,\n    strategy,\n    isHomePage,\n    indicators,\n    multiSymbol,\n    microStrategy,\n    selectedInstance,\n    selectedTradeDB,\n    selectedSymbolType,\n    chartPeriod,\n    startDate,\n    endDate,\n    extendMarketTime,\n    isSliced\n  } = props;\n\n  const [dbname, setDbname] = useState('')\n\tconst [chartData, setChartData] = useState(null)\n  const [exchange, setExchange] = useState('')\n\n  useEffect(() => {\n    if (selectedInstance === 'live_trading') {\n      setChartData(null)\n    }\n  }, [selectedInstance])\n\n  useEffect(() => {\n    const initDbNamebySelectedTradeDB = () => {\n      if (selectedTradeDB === 'heikfilter-2mins-trades') {\n        setDbname('backtest_2_minute');\n      } else if(selectedTradeDB === 'heikfilter-12mins-trades') {\n        setDbname('backtest_12_minute');\n      } else if(selectedTradeDB === 'heikfilter-1hour-trades') {\n        setDbname('backtest_1_hour');\n      } else if(selectedTradeDB === 'heikfilter-4hours-trades') {\n        setDbname('backtest_4_hour');\n      } else if(selectedTradeDB === 'heikfilter-12hours-trades') {\n        setDbname('backtest_12_hour');\n      } else if(selectedTradeDB === 'heikfilter-1day-trades') {\n        setDbname('backtest_1_day');\n      }\n    }\n    initDbNamebySelectedTradeDB();\n  }, [selectedTradeDB])\n\n  useEffect(() => {\n    setChartData(null)\n  }, [viewType])\n\n  useEffect(() => {\n    const get_data = async (symbol) => {\n      if (viewType !== 'performance') {\n        if (!dbname) {\n          return;\n        }\n        const requestBody = {\n          'db_name': dbname,\n          'symbol': symbol,\n          'macro': strategy.value,\n          'micro': (selectedInstance !== 'live_trading') ? microStrategy : '',\n        }\n        let dataRes;\n        setChartData(null)\n        try {\n          if (extendMarketTime === 'extend_markettime') {\n            if (isSliced) {\n              dataRes = await getDataExtendedSliceReq(requestBody);\n            } else {\n              dataRes = await getDataExtendedReq(requestBody);\n            }\n          } else if (isSliced) {\n            dataRes = await getDataSliceReq(requestBody);\n          } else {\n            dataRes = await getDataReq(requestBody);\n          }\n          if (dataRes.success) {\n            let data = dataRes.data;\n            if (data['chart_data'].length > 0) {\n              data['chart_data']['columns'] = [\"date\", \"open\", \"high\", \"low\", \"close\", \"volume\", \"split\", \"dividend\", \"absoluteChange\", \"percentChange\"]\n              data['chart_data'].map((x) => {\n                let converDate = new Date(x.date)\n                x.date = converDate\n                return null\n              })\n              setChartData(data['chart_data'])\n            }\n          }\n        } catch (e) {\n          console.error(e)\n        }\n      } else {\n        const symbols = multiSymbol.map((symbol) => symbol.value);\n        if (!symbols.length | !microStrategy) {\n          return;\n        }\n\n        const filteredSymbols = symbols.filter(symbol => symbol !== '*')\n        const requestBody = {\n          'symbols': filteredSymbols,\n          \"macro\": strategy.value,\n          \"micro\": microStrategy,\n          'start_date': startDate,\n          'end_date': endDate,\n        }\n\n        try {\n          const backtestingResultRes = await getBacktestingResultReq(requestBody);\n          if (backtestingResultRes.success) {\n            setChartData(backtestingResultRes.data['chart_data'])\n          }\n        } catch (error) {\n          console.error(error)\n        }\n      }\n    }\n\n    if (symbol || multiSymbol.length) {\n      get_data(symbol)\n    }\n  }, [extendMarketTime, selectedInstance, dbname, viewType, symbol, multiSymbol, startDate, endDate, strategy.value])\n\n  const displayPerformanceChart = (type) => {\n    return (\n      <PerformanceChart type={type} data={chartData} multiSymbol={multiSymbol.map((symbol) => symbol.value)}/>\n    )\n  }\n\n  const displayChart = () => {\n    return (\n      <TypeChooser >\n        {type => {\n          return (\n            (isHomePage | (viewType !== 'performance'))\n            && (<Chart\n                type={type}\n                data={chartData}\n                symbol={symbol}\n                strategy={strategy}\n                isHomePage={isHomePage}\n                indicators={indicators}\n                chartColumn={chartColumn}\n                microStrategy={microStrategy}\n                selectedInstance={selectedInstance}\n                extendMarketTime={extendMarketTime}\n            />)\n          )\n        }}\n      </TypeChooser>\n    )\n  }\n\n  return (\n  <>\n    {\n      chartData == null ? <div className=\"hunter-loadding-status-text\">Loading...</div> :\n      <>\n        <div className=\"select-wrape\">\n          <div>\n            <strong>{chartPeriod} {exchange} </strong>\n          </div>\n        </div>\n        {(chartColumn === 1) && displayChart()}\n        {(chartColumn === 2) && displayChart()}\n        {(chartColumn === 4) && displayChart()}\n        {(chartColumn === 6) && displayChart()}\n        {(viewType === \"performance\") && displayPerformanceChart()}\n      </>\n  }\n  </>)\n}\n\nexport default StockChart","import React, { createContext, useContext } from \"react\";\nconst authContext = createContext();\n\nconst authUser = {\n  isAuthenticated: localStorage.getItem(\"auth-token\") ? true : false,\n  async signin(email, password) {\n    let formData = {\n      username: email,\n      password: password\n    }\n    return await fetch(process.env.REACT_APP_BACKEND_URL + '/signin/', {\n      method: \"POST\",\n      body: JSON.stringify(formData)\n    })\n      .then(response => {\n          return response.json();\n      })\n      .then(res => {\n        if (!res.user_id) {\n          throw new Error('SignIn failed');\n        }\n        return {\n          success: true,\n          user_id: res.user_id\n        }\n      })\n      .catch(err => {\n        return {\n          success: false,\n          error: \"User Name or Password is wrong\"\n        }\n      })\n  },\n\n  async signup(username, email, password1, password2, pathname) {\n    let formData = {\n      username: username,\n      email: email,\n      first_name: \"\",\n      last_name: \"\",\n      password1: password1,\n      password2: password2,\n      signup_path: process.env.REACT_APP_BACKEND_URL + pathname\n    }\n    \n    return await fetch(process.env.REACT_APP_BACKEND_URL + '/signup/', {\n      method: \"POST\",\n      body: JSON.stringify(formData)\n    })\n      .then(response => {\n          return response.json();\n      })\n      .then(res => {\n        if (res.success) {\n          return {\n            success: true\n          }\n        } else {\n          throw new Error(res.error);\n        }\n      })\n      .catch(err => {\n        return {\n          success: false,\n          error: 'Sign up failed'\n        }\n      })\n  },\n  async verify(userId, code) {\n    let formData = {\n      user_id: userId,\n      num: code\n    }\n    const res = await fetch(process.env.REACT_APP_BACKEND_URL + '/verify/', {\n      method: \"POST\",\n      body: JSON.stringify(formData)\n    })\n      .then(response => {\n          return response.json();\n      })\n      .then(res => {\n        if (res.error) {\n          throw new Error(res.error);\n        }\n        return res\n      })\n      .catch(err => {\n        return { \n          verify: false,\n          error: 'verify failed'\n        }\n      })\n    authUser.isAuthenticated = true;\n    return res\n  },\n  signout() {\n    authUser.isAuthenticated = false;\n    localStorage.removeItem(\"auth-token\")\n    localStorage.removeItem(\"user-info\")\n  },\n};\n\nexport function useAuth() {\n  return useContext(authContext);\n}  \n\nexport default function ProvideAuth({ children }) {\n  const auth = useProvideAuth();\n  return (\n    <authContext.Provider value={auth}>\n      {children}\n    </authContext.Provider>\n  );\n}\n  \nfunction useProvideAuth() {\n  const verify = async ( userId, num ) => {\n    authUser.signin(userId, num)\n  };\n\n  const signin = async ( email, password ) => {\n    authUser.signin(email, password)\n  };\n\n  const signout = () => {\n    authUser.signout()\n  };\n  \n  return {\n    authUser,\n    verify,\n    signin,\n    signout,\n  };\n}","import React from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport {\n  Button\n} from \"reactstrap\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport { routes } from \"routes.js\";\n\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\nimport HeiknStockChart from \"components/HeiknStockChart\"\nimport HeiknStockChartItem from \"components/ItemChart\"\nimport HeiknStockSlicedChart from \"components/HeiknStockSlicedChart\"\n\nvar ps;\n\nfunction HomePage() {\n  const history = useHistory();\n  const initInstance = history.location.state ? history.location.state.initInstance : null;\n  const [viewType, setViewType] = React.useState(0);\n  const [isShowSidebar, setShowSidebar] = React.useState(false);\n  const [selectedInstance, setSelectedInstance] = React.useState(\n    initInstance ? initInstance : 'forward_test'\n  );\n  const location = useLocation();\n  const mainPanelRef = React.useRef(null);\n\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(mainPanelRef.current, {\n        suppressScrollX: true,\n      });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n        document.documentElement.classList.add(\"perfect-scrollbar-off\");\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n      }\n    };\n  });\n\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    if (mainPanelRef.current) {\n      mainPanelRef.current.scrollTop = 0;\n    }\n  }, [location]);\n\n  const handleSidebarChange = () => {\n    setShowSidebar(!isShowSidebar);\n  };\n\n  const handleInstanceChange = (instance) => {\n    setSelectedInstance(instance)\n  }\n\n  const handleChartRedirect = (flag) => {\n    alert('view type' + flag)\n    setViewType(flag)\n  }\n\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color }) => (\n        <React.Fragment>\n          <div className=\"wrapper hunter-wrapper\">\n          {!isShowSidebar && (\n            <Button\n              className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\n              onClick={handleSidebarChange}\n            >\n              <i className=\"tim-icons icon-align-left-2\"/>\n            </Button>\n          )}\n          {isShowSidebar && (\n              <Sidebar\n                subInstance={'view'}\n                isAdminPage={false}\n                routes={routes}\n                selectedInstance={selectedInstance}\n                handleSidebarChange={handleSidebarChange}\n                handleInstanceChange={handleInstanceChange}\n              />\n            )}\n            {viewType === 0\n             ? (\n              <div className={`main-panel ${!isShowSidebar ? 'full-width' : ''}`} ref={mainPanelRef} data={color}>\n                <HeiknStockChart selectedInstance={selectedInstance} handleChartRedirect={handleChartRedirect}/>\n              </div>\n              )\n              : viewType === 1 ? (\n                <div className={`main-panel ${!isShowSidebar ? 'full-width' : ''}`} ref={mainPanelRef} data={color}>\n                 <HeiknStockChartItem selectedInstance={selectedInstance} handleChartRedirect={handleChartRedirect}/>\n                </div>\n              ) : (\n                <div className={`main-panel ${!isShowSidebar ? 'full-width' : ''}`} ref={mainPanelRef} data={color}>\n                 <HeiknStockSlicedChart selectedInstance={selectedInstance} handleChartRedirect={handleChartRedirect}/>\n                </div>\n              )\n            }\n          </div>\n        </React.Fragment>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nexport default HomePage;","import React, { useCallback, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Select from 'react-select'\nimport \"react-datetime/css/react-datetime.css\";\nimport StockChart from \"./stock-chart/StockChart\"\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Button,\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  NavLink,\n  Nav,\n} from \"reactstrap\";\nimport { useAuth } from 'contexts/authContext';\nimport disableScroll from 'disable-scroll';\nimport { getStrategyListReq, getTablesReq, getSymbolsByMicroStrategy, getIndicators } from 'api/Api'\n\nconst HeiknStockChart = (props) => {\n  const auth = useAuth();\n  const { selectedInstance, handleChartRedirect } = props\n  const history = useHistory();\n  const [symbol, setSymbol] = useState(null);//{ value: 'MSFT', label: 'MSFT' }\n  const [indicators, setIndicators] = useState([]);\n  const [isShowMicro, setIsShowMicro] = useState(true);\n  const [symbolList, setSymbolList] = useState([])\n  const [collapseOpen,] = React.useState(false)\n  const [chartColumn, setChartColumn] = useState({ value: 6, label: '6' })\n  const [assetClass, setAssetClass] = useState({ value: 'stock', label: 'stock' })\n  const [selectedViewType, setSelectedViewType] = useState({ value: 'charting', label: 'Charting' });\n  const [microStrategy, setMicroStrategy] = useState(null);\n  const [strategy, setStrategy] = useState(null);//{ value: 'heikfilter', label: 'heikfilter' }\n  const [strategyList, setStrategyList] = useState([]);\n  const [user] = useState(JSON.parse(localStorage.getItem('user-info')));\n  const [extendMarketTime, setExtendMarketTime] = useState(\n    {\n      value: 'markettime', label: 'market time',\n    }\n  );\n\n  const [selectedSymbolType, setSelectedSymbolType] = useState({\n    value: 'stock',\n    label: 'stock'\n  })\n\n  const [optionsAssetClass] = useState([\n    {\n      value: 'stock', label: 'stock',\n    },\n    {\n      value: 'crypto', label: 'crypto',\n    }\n  ])\n\n  const [optionsViewTypes, setOptionsViewTypes] = useState([\n    { value: 'charting', label: 'Charting' },\n    { value: 'performance', label: 'Performance' },\n    { value: 'sliced_charting', label: 'Sliced Chatting'},\n    { value: 'chart_with_new_api', label: 'Chart With New API' },\n  ])\n\n  const [optionsMicroStrategy, setOptionsMicroStrategy] = useState([])\n\n  const [optionsStratgy, setOptionsStrategy] = useState([])\n\n  const [optionsIndicator, setOptionsIndicator] = useState([\n    {\n      value: 'volume', label: 'VOLUME',\n    },\n    {\n      value: 'rsi1', label: 'RSI1',\n    },\n    {\n      value: 'heik', label: 'HEIK1',\n    },\n    {\n      value: 'heik_diff', label: 'HEIK2',\n    }\n  ]);\n\n  const [optionsIndicatorExtend, setOptionsIndicatorExtend] = useState([]);\n\n  const [optionsMarketTime] = useState([\n    {\n      value: 'markettime', label: 'market time',\n    },\n    {\n      value: 'extend_markettime', label: 'extend market time',\n    }\n  ]);\n\n  const optionsColumn = [\n    {\n      value: 1, label: '1',\n    },\n    {\n      value: 2, label: '2',\n    },\n    {\n      value: 4, label: '4',\n    },\n    {\n      value: 6, label: '6',\n    }\n  ]\n\n  const getStrategyList = useCallback(\n    async () => {\n      const strategyListRes = await getStrategyListReq();\n      if (strategyListRes.success) {\n        const data = strategyListRes.data;\n        setStrategyList(data.result);\n        const strategyOptions = data.result.map((o => {\n          return {\n            value: o.macro,\n            label: o.macro,\n          }\n        }))\n        setOptionsStrategy(strategyOptions);\n        setStrategy(strategyOptions[0]);\n        if (data.result.length) {\n          let flag = true\n          let item = data.result[0]\n          if (flag) {\n            const microStrategyOptions = item.micro.map(o => {\n              return {\n                value: o,\n                label: o,\n              }\n            })\n\n            setOptionsMicroStrategy( microStrategyOptions )\n            setMicroStrategy(microStrategyOptions[0])\n\n            const result = await getSymbolsByMicroStrategy(strategyOptions[0].value, microStrategyOptions[0].value)\n            if (result.success) {\n              const symbolOptions = result.data.map(o => {\n                return {\n                  value: o,\n                  label: o,\n                }\n              })\n\n              setSymbolList(symbolOptions)\n              setSymbol(symbolOptions[0])\n            }\n          }\n          flag = false\n        }\n      }\n    },\n    [],\n  )\n\n  const get_tables = useCallback(\n    async (strategy) => {\n      const tablesRes = await getTablesReq(strategy);\n      if (tablesRes.success) {\n        const data = tablesRes.data;\n        let temp_data = []\n        data.tables.map((x) => {\n          temp_data.push({\n            value: x,\n            label: x\n          });\n          return null\n        })\n        setSymbolList(temp_data)\n      }\n    },\n    [],\n  )\n\n  useEffect(async () => {\n    const result = await getIndicators()\n    if (result.success) {\n      const indicatorList = result.data.map((o) => (\n        {\n          value: o,\n          label: o\n        }\n      ))\n      setOptionsIndicatorExtend(indicatorList)\n    }\n  }, [])\n\n  useEffect(() => {\n    disableScroll.on();\n    return () => {\n      disableScroll.off();\n    }\n  }, [getStrategyList, user])\n\n  useEffect(() => {\n    const handleInstanceChange = (value) => {\n      if (value === 'live_trading') {\n        setIsShowMicro(false);\n        setStrategy({ value: 'no_strategy', label: 'No Strategy' });\n        setOptionsStrategy([\n          { value: 'no_strategy', label: 'No Srategy' },\n        ])\n        return\n      } else if (value === 'forward_test') {\n        // setStrategy({ value: 'heikfilter', label: 'heikfilter' });\n        // setSymbol({ value: 'MSFT', label: 'MSFT' });\n      }\n      getStrategyList()\n      setIsShowMicro(true);\n    }\n    if (!user.is_admin && !user?.role.length) {\n      return;\n    }\n    handleInstanceChange(selectedInstance)\n    if(selectedInstance === 'live_trading') {\n      get_tables('no_strategy');\n    }\n    if (selectedInstance === 'optimization') {\n      setOptionsViewTypes([\n        { value: 'optimization ', label: 'Optimization' },\n      ])\n    } else {\n      setOptionsViewTypes([\n        { value: 'charting', label: 'Charting' },\n        { value: 'performance', label: 'Performance' },\n        { value: 'sliced_charting', label: 'Sliced Chatting'},\n        { value: 'chart_with_new_api', label: 'Chart With New API' },\n      ])\n    }\n  }, [selectedInstance, getStrategyList, get_tables, user.is_admin, user.role?.length])\n\n  const handleViewTypeChange = (value) => {\n    setSelectedViewType(value)\n    if (value.value === 'performance') {\n      const locationState = {\n        selectedInstance,\n        viewType: value,\n        initStrategy: strategy,\n        initMicroStrategy: microStrategy,//{ value: '2m', label: '2m' }\n        initIndicators: indicators,\n        initSymbol: symbol,\n      }\n      if (value) {\n        handleChartRedirect(1)\n        history.push({\n          state: locationState,\n        });\n      }\n    } else if (value.value === 'sliced_charting') {\n      handleChartRedirect(2)\n    }\n  }\n\n  const handlSymbolChange = (e) => {\n    if (e) {\n      setSymbol(e)\n    }\n  }\n\n  const handleMarketTimeChange = (e) => {\n    if (e) {\n      setExtendMarketTime(e)\n    }\n  }\n\n  const handleStrategy = async (e) => {\n    if (e) {\n      if (strategyList.length) {\n        strategyList.forEach((item) => {\n          if (item.macro === e.value) {\n            const microStrategyOptions = item.micro.map(o => {\n              return {\n                value: o,\n                label: o,\n              }\n            })\n            setOptionsMicroStrategy( microStrategyOptions )\n\n            const is_2m = microStrategyOptions.filter((o => o.value === '2m'))\n\n            if (is_2m.length) {\n              setMicroStrategy({\n                value: '2m',\n                label: '2m'\n              })\n            } else {\n              setMicroStrategy(microStrategyOptions[0])\n            }\n\n            const symbolOptions = item.symbols.map(o => {\n              return {\n                value: o,\n                label: o,\n              }\n            })\n\n            setSymbolList(symbolOptions)\n            setSymbol(symbolOptions[0])\n            // setSymbol({value: 'MSFT', label: 'MSFT'})\n          }\n        })\n      }\n      setStrategy(e)\n    }\n  }\n\n  const handleMicroStrategyChange = async (e) => {\n    if (e) {\n      setMicroStrategy(e)\n      const result = await getSymbolsByMicroStrategy(strategy.value, e.value)\n      if (result.success) {\n        const symbolOptions = result.data.map(o => {\n          return {\n            value: o,\n            label: o,\n          }\n        })\n\n        setSymbolList(symbolOptions)\n        setSymbol(symbolOptions[0])\n      }\n    }\n  }\n\n  const handleIndicatorsChange = (options) => {\n    setIndicators(options);\n  }\n\n  const handleChartsColumnChange = (option) => {\n    if (option.value === 4 || option.value === 6) {\n      setIndicators([])\n      setOptionsIndicator([\n        {\n          value: 'volume', label: 'VOLUME',\n        },\n        {\n          value: 'rsi1', label: 'RSI1',\n        },\n        {\n          value: 'heik', label: 'HEIK1',\n        },\n        {\n          value: 'heik_diff', label: 'HEIK2',\n        }\n      ])\n    } else {\n      setIndicators([])\n      setOptionsIndicator(optionsIndicatorExtend)\n    }\n    setChartColumn(option)\n  }\n\n  const calculateHeightStyle = () => {\n    if (chartColumn.value === 1 || chartColumn.value === 2) {\n      return 'full-height'\n    }\n    return 'half-height'\n  }\n\n  const calculateGridColumn = () => {\n    if (chartColumn.value === 1) {\n      return 12\n    } else if ((chartColumn.value === 2) || (chartColumn.value === 4)) {\n      return 6\n    }\n    return 4\n  }\n\n  const handleSymbolTypeChange = (e) => {\n    setSelectedSymbolType(e)\n  }\n\n  const handleSignout = () => {\n    auth.signout()\n    history.push('/login')\n  }\n\n  const handleAssetClass = () => {\n\n  }\n\n  const displayChart = () => {\n    return (\n      <div className={`row ${calculateHeightStyle()}`}>\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\n          {microStrategy && symbol && (\n            < StockChart\n              selectedSymbolType={selectedSymbolType.value}\n              extendMarketTime={extendMarketTime.value}\n              selectedInstance={selectedInstance}\n              selectedTradeDB='heikfilter-2mins-trades'\n              chartPeriod='20D 2min'\n              symbol={symbol.value}\n              indicators={indicators}\n              strategy={strategy}\n              isHomePage={true}\n              chartColumn={chartColumn.value}\n              microStrategy={microStrategy.value}\n              startDate={null}\n              endDate={null}\n            />\n          )}\n        </div>\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\n          {microStrategy && symbol && (\n            < StockChart\n            extendMarketTime={extendMarketTime.value}\n            selectedInstance={selectedInstance}\n            selectedTradeDB='heikfilter-12mins-trades'\n            chartPeriod='20D 12min'\n            symbol={symbol.value}\n            indicators={indicators}\n            strategy={strategy}\n            isHomePage={true}\n            chartColumn={chartColumn.value}\n            microStrategy={microStrategy.value}\n            startDate={null}\n            endDate={null}\n          />)}\n        </div>\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\n          {microStrategy && symbol && (\n            < StockChart\n              extendMarketTime={extendMarketTime.value}\n              selectedInstance={selectedInstance}\n              selectedTradeDB='heikfilter-1hour-trades'\n              chartPeriod='30D 1hour'\n              symbol={symbol.value}\n              indicators={indicators}\n              strategy={strategy}\n              isHomePage={true}\n              chartColumn={chartColumn.value}\n              microStrategy={microStrategy.value}\n              startDate={null}\n              endDate={null}\n            />)}\n        </div>\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\n          {microStrategy && symbol && (\n            < StockChart\n              extendMarketTime={extendMarketTime.value}\n              selectedInstance={selectedInstance}\n              selectedTradeDB='heikfilter-4hours-trades'\n              chartPeriod='90D 4hour'\n              symbol={symbol.value}\n              indicators={indicators}\n              strategy={strategy}\n              isHomePage={true}\n              chartColumn={chartColumn.value}\n              microStrategy={microStrategy.value}\n              startDate={null}\n              endDate={null}\n            />)}\n        </div>\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\n          {microStrategy && symbol && (\n            < StockChart\n              extendMarketTime={extendMarketTime.value}\n              selectedInstance={selectedInstance}\n              selectedTradeDB='heikfilter-12hours-trades'\n              chartPeriod='90D 12hour'\n              symbol={symbol.value}\n              indicators={indicators}\n              strategy={strategy}\n              isHomePage={true}\n              chartColumn={chartColumn.value}\n              microStrategy={microStrategy.value}\n              startDate={null}\n              endDate={null}\n            />)}\n        </div>\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\n          {microStrategy && symbol && (\n          < StockChart\n            extendMarketTime={extendMarketTime.value}\n            selectedInstance={selectedInstance}\n            selectedTradeDB='heikfilter-1day-trades'\n            chartPeriod='1Y 1day'\n            symbol={symbol.value}\n            indicators={indicators}\n            strategy={strategy}\n            isHomePage={true}\n            chartColumn={chartColumn.value}\n            microStrategy={microStrategy.value}\n            startDate={null}\n            endDate={null}\n          />)}\n        </div>\n      </div>\n    )\n  }\n\n  const handleAssetClassChange = (e) => {\n    setAssetClass(e)\n    return\n  }\n\n  return (\n    <div className=\"hunter-chart-container\">\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark hunter-nav-bar\">\n        <div className=\"logo-title\">\n          <a href=\"/chart\" className=\"hunter-navbar-brand\">\n            Violette AM - Client Portal\n          </a>\n        </div>\n        {(user.is_admin || (user.role?.length)) && (\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/chart\"} className=\"nav-link\"></Link>\n            </li>\n            <div className=\"select-option\">\n              <Select\n                value={selectedViewType}\n                onChange={handleViewTypeChange}\n                options={optionsViewTypes}\n                placeholder=\"Charting\"\n              />\n            </div>\n            <div className=\"select-option\">\n              <Select\n                value={extendMarketTime}\n                onChange={handleMarketTimeChange}\n                options={optionsMarketTime}\n                placeholder=\"Market Time\"\n              />\n            </div>\n            {/* <div className=\"select-option\">\n              <Select\n                value={selectedSymbolType}\n                onChange={handleSymbolTypeChange}\n                options={optionsSymbolType}\n                placeholder=\"Select Symbol Type\"\n              />\n            </div> */}\n            <div className=\"select-option\">\n              <Select\n                value={strategy}\n                onChange={handleStrategy}\n                options={optionsStratgy}\n                placeholder=\"Macro Strategy\"\n              />\n            </div>\n            {isShowMicro && (\n              <div className=\"select-option\">\n                <Select\n                  value={microStrategy}\n                  onChange={handleMicroStrategyChange}\n                  options={optionsMicroStrategy}\n                  placeholder=\"Micro Strategy\"\n                />\n              </div>\n            )}\n            <div className=\"select-option\">\n              <Select\n                value={symbol}\n                onChange={handlSymbolChange}\n                options={symbolList}\n                placeholder=\"Symbol\"\n              />\n            </div>\n            <div className=\"select-multi-option\">\n              <Select\n                name=\"filters\"\n                placeholder=\"Indicators\"\n                value={indicators}\n                onChange={handleIndicatorsChange}\n                options={optionsIndicator}\n                isMulti={true}\n              />\n            </div>\n            <div className=\"select-option\">\n              <Select\n                value={chartColumn}\n                onChange={handleChartsColumnChange}\n                options={optionsColumn}\n                placeholder=\"Columns\"\n              />\n            </div>\n            {/* <div className=\"select-option\">\n              <Select\n                value={assetClass}\n                onChange={handleAssetClassChange}\n                options={optionsAssetClass}\n                placeholder=\"Asset Class\"\n              />\n            </div> */}\n          </div>\n        )}\n        <Collapse navbar isOpen={collapseOpen}>\n            <Nav className=\"ml-auto\" navbar>\n              <UncontrolledDropdown>\n                <DropdownToggle\n                  caret\n                  color=\"default\"\n                  nav\n                  onClick={(e) => e.preventDefault()}\n                >\n                  <div className=\"photo\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/anime3.png\").default}\n                    />\n                  </div>\n                  <p className=\"d-lg-none\">Log out</p>\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                  <DropdownItem divider tag=\"li\" />\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\" onClick={() => {\n                      handleSignout()\n                    }}>Log out</DropdownItem>\n                  </NavLink>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <li className=\"separator d-lg-none\" />\n            </Nav>\n          </Collapse>\n      </nav>\n      {!user.is_admin && !user?.role.length\n        ? (<div className=\"development-in-content dark\">\n            No Permission\n          </div>)\n        : selectedInstance === 'stress_test' || selectedInstance === 'optimization'\n        ? (<div className=\"development-in-content dark\">\n          In development\n        </div>)\n        : (<div className=\"graphs-container dark\">\n          {displayChart()}\n        </div>)\n      }\n    </div>\n  );\n};\n\nexport default HeiknStockChart;","import React, { useState } from 'react'\nimport { Range } from 'rc-slider';\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport moment from 'moment'\n\nimport 'rc-slider/assets/index.css';\n\nexport default (props) => {\n  const { selectDateRange } = props\n  const startedDate = moment().subtract(365, 'days').format(\"YYYY-MM-DD\")\n  const endedDate = moment().format(\"YYYY-MM-DD\")\n  const [tradeStartDate, setTradeStartDate] = useState(startedDate);\n  const [tradeEndDate, setTradeEndDate ] = useState(endedDate)\n  \n  const handleDateRangeChange = (rangeValue, isFlag) => {\n    const startDate = moment(startedDate, \"YYYY-MM-DD\").add(rangeValue[0], 'days').format(\"YYYY-MM-DD\")\n    const endDate = moment(startedDate, \"YYYY-MM-DD\").add(rangeValue[1], 'days').format(\"YYYY-MM-DD\")\n    setTradeStartDate(startDate)\n    setTradeEndDate(endDate)\n\n    if ( isFlag ) {\n      selectDateRange(startDate, endDate)  \n    }\n  }\n  \n  return (\n    <Form.Group as={Row} className=\"hunter-multi-range-area\">\n      <input \n        type='text'\n        className=\"hunter-form-control-input\"\n        value={tradeStartDate}\n        disabled\n      />\n      <Range\n        min={0}\n        max={365}\n        defaultValue={[0, 365]}\n        step={1}\n        onChange={(value) => {\n          handleDateRangeChange(value, false)\n        }}\n        onAfterChange={(value) => {\n          handleDateRangeChange(value, true)\n        }}\n      />\n      <input \n        type='text'\n        className=\"hunter-form-control-input\"\n        value={tradeEndDate}\n        disabled\n      />    \n    </Form.Group>\n)};","import React, { useCallback, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Select from 'react-select'\nimport \"react-datetime/css/react-datetime.css\";\nimport StockChart from \"./stock-chart/StockChart\"\nimport { useHistory } from \"react-router-dom\";\nimport disableScroll from 'disable-scroll';\n\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\nimport MultiRangeSlider from 'components/MultiRangeSlider/MultiRangeSlider'\nimport { getSymbolsByMicroStrategy, getIndicators } from 'api/Api'\n\nconst HeiknStockChartItem = (props) => {\n\n  const { selectedInstance, handleChartRedirect } = props\n  const history = useHistory();\n  const { viewType, initStrategy, initMicroStrategy, initIndicators, initSymbol } = history.location.state\n\n  const [selectedViewType, setSelectedViewType] = useState(\n    viewType\n    ? viewType\n    : { value: 'charting', label: 'Charting' }\n  );\n\n  const [symbol, setSymbol] = useState(initSymbol)\n  const [multiSymbol, setMultiSymbol] = useState([initSymbol])\n  const [strategy, setStrategy] = useState(initStrategy ? initStrategy : {})\n  const [symbolList, setSymbolList] = useState([])\n  const [microStrategy, setMicroStrategy] = useState(initMicroStrategy ? initMicroStrategy: null)\n  const [indicators, setIndicators] = useState(initIndicators)\n  const [apiFlag, setApiFlag] = useState(false)\n  const [tradeStartDate, setTradeStartDate] = useState('')\n  const [tradeEndDate, setTradeEndDate] = useState('')\n  const [strategyList, setStrategyList] = useState([]);\n\n  const [optionsViewTypes, setOptionsViewTypes] = useState([\n    { value: 'charting', label: 'Charting' },\n    { value: 'performance', label: 'Performance' },\n    { value: 'sliced_charting', label: 'Sliced Chatting'},\n    { value: 'chart_with_new_api', label: 'Chart With New API' },\n  ])\n\n  const [optionsMicroStrategy, setOptionsMicroStrategy] = useState([])\n\n  const [optionsStratgy, setOptionsStrategy] = useState([])\n\n  const optionsSymbolType = [\n    {\n      value: 'stock', label: 'stock',\n    },\n    {\n      value: 'crypto', label: 'crypto',\n    }\n  ]\n\n  const [optionsIndicator, setOptionsIndicator] = useState([\n    {\n      value: 'volume', label: 'VOLUME',\n    },\n    {\n      value: 'rsi', label: 'RSI',\n    },\n    {\n      value: 'macd', label: 'MACD',\n    },\n    {\n      value: 'sma', label: 'SMA',\n    }\n  ])\n\n  const getStrategyList = useCallback(\n    () => {\n      fetch(process.env.REACT_APP_BACKEND_URL + \"/api/get_strategy_list\")\n        .then(response => response.json())\n        .then(data => {\n          setStrategyList(data.result);\n          const strategyOptions = data.result.map((o => {\n            return {\n              value: o.macro,\n              label: o.macro,\n            }\n          }))\n          setOptionsStrategy(strategyOptions);\n          if (data.result.length) {\n            let item = data.result[0]\n                const microStrategyOptions = item.micro.map(o => {\n                  return {\n                    value: o,\n                    label: o,\n                  }\n                })\n                setOptionsMicroStrategy( microStrategyOptions )\n\n                const symbolOptions = item.symbols.map(o => {\n                  return {\n                    value: o,\n                    label: o,\n                  }\n                })\n                setSymbolList([{ label: \"All\", value: \"*\" }, ...symbolOptions]);\n                // setSymbol(symbolOptions[0])\n          }\n        })\n    },\n    [],\n  )\n\n  useEffect(async () => {\n    const result = await getIndicators()\n    if (result.success) {\n      const indicatorList = result.data.map((o) => (\n        {\n          value: o,\n          label: o\n        }\n      ))\n      setOptionsIndicator(indicatorList)\n    }\n  }, [])\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('user-info'))\n    if (user.is_admin || user.role.length) {\n      getStrategyList();\n    }\n    disableScroll.on();\n    return () => {\n      disableScroll.off();\n    }\n  }, [getStrategyList])\n\n  useEffect(() => {\n    if (selectedInstance.value === 'optimization') {\n      setOptionsViewTypes([\n        { value: 'optimization', label: 'Optimization' },\n      ])\n    } else {\n      setOptionsViewTypes([\n        { value: 'charting', label: 'Charting' },\n        { value: 'performance', label: 'Performance' },\n        { value: 'sliced_charting', label: 'Sliced Chatting'},\n        { value: 'chart_with_new_api', label: 'Chart With New API' },\n      ])\n    }\n  }, [selectedInstance])\n\n  useEffect(() => {\n    const get_tables = () => {\n      try {\n        const requestOptions = {\n          method: 'POST',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            'strategy': strategy.value\n          })\n        };\n        fetch(process.env.REACT_APP_BACKEND_URL + \"/api/tables\", requestOptions)\n          .then(response => response.json())\n          .then(data => {\n            let temp_data = []\n            data.tables.map((x) => {\n              temp_data.push({\n                value: x,\n                label: x\n              });\n              return null\n            })\n            setSymbolList([{ label: \"All\", value: \"*\" }, ...temp_data]);\n          })\n      } catch (error) {\n        console.log(error)\n      }\n    }\n\n    if (!apiFlag) {\n      setMicroStrategy(microStrategy)\n      get_tables();\n      setApiFlag(true)\n    }\n  }, [setMicroStrategy, apiFlag, microStrategy, setApiFlag, strategy.value])\n\n  const handleViewTypeChange = (e) => {\n    setSelectedViewType(e)\n    if (e.value === 'charting') {\n      handleChartRedirect(0)\n    } else if (e.value === 'sliced_charting') {\n      handleChartRedirect(2)\n    }\n  }\n\n  const handlSymbolChange = (e) => {\n    if (e) {\n        setSymbol(e)\n    }\n  }\n\n  const handlMultiSymbolChange = (e, event) => {\n    if (event.action === 'select-option' && event.option.value === '*') {\n      setMultiSymbol(symbolList)\n    } else if (event.action === 'deselect-option' && event.option.value === '*') {\n      setMultiSymbol([])\n    } else if (event.action === 'deselect-option') {\n      setMultiSymbol(e.filter((o) => o.value !== '*'))\n    }\n    else if (e.length === symbolList.length - 1) {\n      setMultiSymbol(symbolList)\n    } else {\n      setMultiSymbol(e)\n    }\n  }\n\n  const handleStrategyChange = async (e) => {\n    if (e) {\n      setStrategy(e)\n      if (strategyList.length) {\n        strategyList.forEach((item) => {\n          if (item.macro === e.value) {\n            const microStrategyOptions = item.micro.map(o => {\n              return {\n                value: o,\n                label: o,\n              }\n            })\n            setOptionsMicroStrategy( microStrategyOptions )\n\n            const is_2m = microStrategyOptions.filter((o => o.value === '2m'))\n            if (is_2m.length) {\n              setMicroStrategy({\n                value: '2m',\n                label: '2m'\n              })\n            } else {\n              setMicroStrategy(microStrategyOptions[0])\n            }\n\n            const symbolOptions = item.symbols.map(o => {\n              return {\n                value: o,\n                label: o,\n              }\n            })\n            setSymbolList([{ label: \"All\", value: \"*\" }, ...symbolOptions]);\n            setSymbol(symbolOptions[0])\n          }\n        })\n      }\n    }\n  }\n\n  const handleIndicatorsChange = (options) => {\n    setIndicators(options);\n  }\n\n  const handleMicroStrategyChange = async (e) => {\n    setMicroStrategy(e);\n    const result = await getSymbolsByMicroStrategy(strategy.value, e.value)\n      if (result.success) {\n        const symbolOptions = result.data.map(o => {\n          return {\n            value: o,\n            label: o,\n          }\n        })\n\n        if (selectedViewType.value !== 'performance') {\n          setSymbolList(symbolOptions)\n          setSymbol(symbolOptions[0])\n        } else {\n          setSymbolList([{ label: \"All\", value: \"*\" }, ...symbolOptions]);\n          if (symbolOptions.length) {\n            setMultiSymbol([symbolOptions[0]])\n          } else {\n            setMultiSymbol([])\n          }\n        }\n      }\n  }\n\n  const selectDateRange = (startDate, endDate) => {\n    setTradeStartDate(startDate)\n    setTradeEndDate(endDate)\n  }\n\n  return (\n    <div className=\"hunter-chart-container\">\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark hunter-nav-bar\">\n        <div className=\"logo-title\">\n          <a href=\"/chart\" className=\"hunter-navbar-brand\">\n            Violette AM - Client Portal\n          </a>\n        </div>\n        <div className=\"navbar-nav ma-auto hunter-nav-bar-nav\">\n          <li className=\"nav-item\">\n            <Link to={\"/chart\"} className=\"nav-link\"></Link>\n          </li>\n          <div className=\"select-option\">\n            <Select\n              value={selectedViewType}\n              onChange={handleViewTypeChange}\n              options={optionsViewTypes}\n              placeholder=\"Charting\"\n            />\n          </div>\n          {selectedViewType.value !== 'performance'\n            ? (<div className=\"select-option\">\n              <Select\n                  value={symbol}\n                  onChange={handlSymbolChange}\n                  options={symbolList}\n              />\n                </div>)\n            : (<div className=\"select-multi-option hunter-multi-select-checkboxes\">\n                <ReactMultiSelectCheckboxes\n                  options={symbolList}\n                  value={multiSymbol}\n                  onChange={handlMultiSymbolChange}\n                />\n              </div>)\n          }\n          {/* <div className=\"select-option\">\n            <Select\n              value={selectedSymbolType}\n              onChange={handleSymbolTypeChange}\n              options={optionsSymbolType}\n              placeholder=\"Select Symbol Type\"\n            />\n          </div> */}\n          {(selectedInstance.value !== 'live_trading') &&\n            (<div className=\"select-option\">\n                <Select\n                  value={strategy}\n                  onChange={handleStrategyChange}\n                  options={optionsStratgy}\n                  placeholder=\"Macro Strategy\"\n                />\n            </div>)\n          }\n          {selectedInstance.value !== 'live_trading' &&\n            (<div className=\"select-option\">\n              <Select\n                name=\"filters\"\n                placeholder=\"Micro Strategy\"\n                value={microStrategy}\n                onChange={handleMicroStrategyChange}\n                options={optionsMicroStrategy}\n              />\n            </div>)\n          }\n          {selectedViewType.value !== 'performance' &&\n            (<div className=\"select-multi-option\">\n              <Select\n                name=\"filters\"\n                placeholder=\"Indicators\"\n                value={indicators}\n                onChange={handleIndicatorsChange}\n                options={optionsIndicator}\n                isMulti={true}\n              />\n            </div>)\n          }\n          <div className='date hunter-item-chart hunter-date-time-picker' id='datetimepicker1'>\n            <MultiRangeSlider\n              selectDateRange={selectDateRange}\n            />\n          </div>\n        </div>\n      </nav>\n      <div className=\"graphs-container dark\">\n        {multiSymbol && viewType && (\n          < StockChart\n            selectedInstance ={selectedInstance.value}\n            viewType={selectedViewType.value}\n            microStrategy={microStrategy.value}\n            symbol={symbol.value}\n            multiSymbol={multiSymbol}\n            indicators={indicators}\n            strategy={strategy}\n            isHomePage={false}\n            startDate={tradeStartDate}\n            endDate={tradeEndDate}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default HeiknStockChartItem;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Select from 'react-select'\nimport \"react-datetime/css/react-datetime.css\";\nimport StockChart from \"./stock-chart/StockChart\"\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  NavLink,\n  Nav,\n} from \"reactstrap\";\nimport { useAuth } from 'contexts/authContext';\nimport disableScroll from 'disable-scroll';\n\nconst HeiknStockSlicedChart = (props) => {\n\n  const auth = useAuth();\n  const { selectedInstance, handleChartRedirect } = props\n  const history = useHistory();\n  const [symbol, setSymbol] = useState(null);\n  const [indicators, setIndicators] = useState([]);\n  const [isShowMicro, setIsShowMicro] = useState(true);\n  const [symbolList, setSymbolList] = useState([])\n  const [collapseOpen,] = React.useState(false)\n  const [chartColumn, setChartColumn] = useState({ value: 6, label: '6' })\n  const [selectedViewType, setSelectedViewType] = useState({ value: 'sliced_charting', label: 'Sliced Charting' });\n  const [microStrategy, setMicroStrategy] = useState(null);\n  const [strategy, setStrategy] = useState(null);\n  const [strategyList, setStrategyList] = useState([]);\n  const [user] = useState(JSON.parse(localStorage.getItem('user-info')));\n  const [extendMarketTime, setExtendMarketTime] = useState(\n    {\n      value: 'markettime', label: 'market time',\n    }\n  );\n\n  const [selectedSymbolType, setSelectedSymbolType] = useState({\n    value: 'stock',\n    label: 'stock'\n  })\n\n  const optionsSymbolType = [\n    {\n      value: 'stock', label: 'stock',\n    },\n    {\n      value: 'crypto', label: 'crypto',\n    }\n  ]\n\n  const [optionsViewTypes, setOptionsViewTypes] = useState([\n    { value: 'charting', label: 'Charting' },\n    { value: 'performance', label: 'Performance' },\n    { value: 'sliced_charting', label: 'Sliced Charting' },\n    { value: 'chart_with_new_api', label: 'Chart With New API' },\n  ])\n\n  const [optionsMicroStrategy, setOptionsMicroStrategy] = useState([])\n\n  const [optionsStratgy, setOptionsStrategy] = useState([])\n\n  const [optionsIndicator, setOptionsIndicator] = useState([\n    {\n      value: 'volume', label: 'VOLUME',\n    },\n    {\n      value: 'rsi1', label: 'RSI',\n    },\n    {\n      value: 'heik', label: 'HEIK1',\n    },\n    {\n      value: 'heik_diff', label: 'HEIK2',\n    }\n  ]);\n\n  const [optionsMarketTime] = useState([\n    {\n      value: 'markettime', label: 'market time',\n    },\n    {\n      value: 'extend_markettime', label: 'extend market time',\n    }\n  ]);\n\n  const optionsColumn = [\n    {\n      value: 1, label: '1',\n    },\n    {\n      value: 2, label: '2',\n    },\n    {\n      value: 4, label: '4',\n    },\n    {\n      value: 6, label: '6',\n    }\n  ]\n\n  const getStrategyList = useCallback(\n    () => {\n      try {\n        fetch(process.env.REACT_APP_BACKEND_URL + \"/api/get_strategy_list\")\n          .then(response => response.json())\n          .then(data => {\n            console.log('data???', data)\n            setStrategyList(data.result);\n            const strategyOptions = data.result.map((o => {\n              return {\n                value: o.macro,\n                label: o.macro,\n              }\n            }))\n            // setStrategy({\n            //   value: 'heikfilter',\n            //   label: 'heikfilter'\n            // });\n            setOptionsStrategy(strategyOptions);\n            setStrategy(strategyOptions[0]);\n            if (data.result.length) {\n              let item = data.result[0]\n              const microStrategyOptions = item.micro.map(o => {\n                return {\n                  value: o,\n                  label: o,\n                }\n              })\n              setOptionsMicroStrategy( microStrategyOptions )\n              setMicroStrategy(microStrategyOptions[0])\n\n              const symbolOptions = item.symbols.map(o => {\n                return {\n                  value: o,\n                  label: o,\n                }\n              })\n              setSymbolList(symbolOptions)\n              setSymbol(symbolOptions[0])\n            }\n          })\n      } catch (error) {\n        console.log(error)\n      }\n    },\n    [],\n  )\n\n  const get_tables = useCallback(\n    (strategy) => {\n      const requestOptions = {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          'strategy': strategy\n        })\n      };\n\n      fetch(process.env.REACT_APP_BACKEND_URL + \"/api/tables\", requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          let temp_data = []\n          data.tables.map((x) => {\n            temp_data.push({\n              value: x,\n              label: x\n            });\n            return null\n          })\n          setSymbolList(temp_data)\n          // setSymbol(temp_data[0])\n        })\n    },\n    [],\n  )\n\n  useEffect(() => {\n    disableScroll.on();\n    return () => {\n      disableScroll.off();\n    }\n  }, [getStrategyList, user])\n\n  useEffect(() => {\n    const handleInstanceChange = (value) => {\n      if (value === 'live_trading') {\n        setIsShowMicro(false);\n        setStrategy({ value: 'no_strategy', label: 'No Strategy' });\n        setOptionsStrategy([\n          { value: 'no_strategy', label: 'No Srategy' },\n        ])\n        return\n      } else if (value === 'forward_test') {\n        // setStrategy({ value: 'heikfilter', label: 'heikfilter' });\n        // setSymbol({ value: 'MSFT', label: 'MSFT' });\n      }\n      getStrategyList()\n      setIsShowMicro(true);\n    }\n    if (!user.is_admin && !user?.role.length) {\n      return;\n    }\n    handleInstanceChange(selectedInstance)\n    if(selectedInstance === 'live_trading') {\n      get_tables('no_strategy');\n    }\n    if (selectedInstance === 'optimization') {\n      setOptionsViewTypes([\n        { value: 'optimization ', label: 'Optimization' },\n      ])\n    } else {\n      setOptionsViewTypes([\n        { value: 'charting', label: 'Charting' },\n        { value: 'performance', label: 'Performance' },\n        { value: 'sliced_charting', label: 'Sliced Charting' },\n        { value: 'chart_with_new_api', label: 'Chart With New API' },\n      ])\n    }\n  }, [selectedInstance, getStrategyList, get_tables, user.is_admin, user.role?.length])\n\n  const handleViewTypeChange = (value) => {\n    setSelectedViewType(value)\n    if (value.value === 'performance') {\n      const locationState = {\n        selectedInstance,\n        viewType: value,\n        initStrategy: strategy,\n        initMicroStrategy: microStrategy,//{ value: '2m', label: '2m' }\n        initIndicators: indicators,\n        initSymbol: symbol,\n      }\n      if (value) {\n        handleChartRedirect(1)\n        history.push({\n          state: locationState,\n        });\n      }\n    } else if (value.value === 'charting') {\n      handleChartRedirect(0)\n    }\n  }\n\n  const handlSymbolChange = (e) => {\n    if (e) {\n      setSymbol(e)\n    }\n  }\n\n  const handleMarketTimeChange = (e) => {\n    if (e) {\n      setExtendMarketTime(e)\n    }\n  }\n\n  const handleStrategy = async (e) => {\n    if (e) {\n      if (strategyList.length) {\n        strategyList.forEach((item) => {\n          if (item.macro === e.value) {\n            const microStrategyOptions = item.micro.map(o => {\n              return {\n                value: o,\n                label: o,\n              }\n            })\n            setOptionsMicroStrategy( microStrategyOptions )\n\n            const is_2m = microStrategyOptions.filter((o => o.value === '2m'))\n\n            if (is_2m.length) {\n              setMicroStrategy({\n                value: '2m',\n                label: '2m'\n              })\n            } else {\n              setMicroStrategy(microStrategyOptions[0])\n            }\n\n            const symbolOptions = item.symbols.map(o => {\n              return {\n                value: o,\n                label: o,\n              }\n            })\n            setSymbolList(symbolOptions)\n            setSymbol(symbolOptions[0])\n            // setSymbol({value: 'MSFT', label: 'MSFT'})\n          }\n        })\n      }\n      setStrategy(e)\n    }\n  }\n\n  const handleMicroStrategyChange = (e) => {\n    if (e) {\n      setMicroStrategy(e)\n    }\n  }\n\n  const handleIndicatorsChange = (options) => {\n    setIndicators(options);\n  }\n\n  const handleChartsColumnChange = (option) => {\n    if (option.value === 4 || option.value === 6) {\n      setIndicators([])\n      setOptionsIndicator([\n        {\n          value: 'volume', label: 'VOLUME',\n        },\n        {\n          value: 'rsi1', label: 'RSI',\n        },\n        {\n          value: 'heik', label: 'HEIK1',\n        },\n        {\n          value: 'heik_diff', label: 'HEIK2',\n        }\n      ])\n    } else {\n      setIndicators([])\n      setOptionsIndicator([\n        {\n          value: 'volume', label: 'VOLUME',\n        },\n        {\n          value: 'rsi1', label: 'RSI',\n        },\n        {\n          value: 'rsi2', label: 'RSI2',\n        },\n        {\n          value: 'rsi3', label: 'RSI3',\n        },\n        {\n          value: 'heik', label: 'HEIK1',\n        },\n        {\n          value: 'heik_diff', label: 'HEIK2',\n        }\n      ])\n    }\n    setChartColumn(option)\n  }\n\n  const calculateHeightStyle = () => {\n    if (chartColumn.value === 1 || chartColumn.value === 2) {\n      return 'full-height'\n    }\n    return 'half-height'\n  }\n\n  const calculateGridColumn = () => {\n    if (chartColumn.value === 1) {\n      return 12\n    } else if ((chartColumn.value === 2) || (chartColumn.value === 4)) {\n      return 6\n    }\n    return 4\n  }\n\n  const handleSymbolTypeChange = (e) => {\n    setSelectedSymbolType(e)\n  }\n\n  const handleSignout = () => {\n    auth.signout()\n    history.push('/login')\n  }\n\n  const displayChart = () => {\n    return (\n      <div className={`row ${calculateHeightStyle()}`}>\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\n          {microStrategy && symbol && (\n            < StockChart\n              selectedSymbolType={selectedSymbolType.value}\n              extendMarketTime={extendMarketTime.value}\n              selectedInstance={selectedInstance}\n              selectedTradeDB='heikfilter-2mins-trades'\n              chartPeriod='20D 2min'\n              symbol={symbol.value}\n              indicators={indicators}\n              strategy={strategy}\n              isHomePage={true}\n              chartColumn={chartColumn.value}\n              microStrategy={microStrategy.value}\n              startDate={null}\n              endDate={null}\n              isSliced={true}\n            />\n          )}\n        </div>\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\n          {microStrategy && symbol && (\n            < StockChart\n            extendMarketTime={extendMarketTime.value}\n            selectedInstance={selectedInstance}\n            selectedTradeDB='heikfilter-12mins-trades'\n            chartPeriod='20D 12min'\n            symbol={symbol.value}\n            indicators={indicators}\n            strategy={strategy}\n            isHomePage={true}\n            chartColumn={chartColumn.value}\n            microStrategy={microStrategy.value}\n            startDate={null}\n            endDate={null}\n            isSliced={true}\n          />)}\n        </div>\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\n          {microStrategy && symbol && (\n            < StockChart\n              extendMarketTime={extendMarketTime.value}\n              selectedInstance={selectedInstance}\n              selectedTradeDB='heikfilter-1hour-trades'\n              chartPeriod='30D 1hour'\n              symbol={symbol.value}\n              indicators={indicators}\n              strategy={strategy}\n              isHomePage={true}\n              chartColumn={chartColumn.value}\n              microStrategy={microStrategy.value}\n              startDate={null}\n              endDate={null}\n              isSliced={true}\n            />)}\n        </div>\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\n          {microStrategy && symbol && (\n            < StockChart\n              extendMarketTime={extendMarketTime.value}\n              selectedInstance={selectedInstance}\n              selectedTradeDB='heikfilter-4hours-trades'\n              chartPeriod='90D 4hour'\n              symbol={symbol.value}\n              indicators={indicators}\n              strategy={strategy}\n              isHomePage={true}\n              chartColumn={chartColumn.value}\n              microStrategy={microStrategy.value}\n              startDate={null}\n              endDate={null}\n              isSliced={true}\n            />)}\n        </div>\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\n          {microStrategy && symbol && (\n            < StockChart\n              extendMarketTime={extendMarketTime.value}\n              selectedInstance={selectedInstance}\n              selectedTradeDB='heikfilter-12hours-trades'\n              chartPeriod='90D 12hour'\n              symbol={symbol.value}\n              indicators={indicators}\n              strategy={strategy}\n              isHomePage={true}\n              chartColumn={chartColumn.value}\n              microStrategy={microStrategy.value}\n              startDate={null}\n              endDate={null}\n              isSliced={true}\n            />)}\n        </div>\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\n          {microStrategy && symbol && (\n          < StockChart\n            extendMarketTime={extendMarketTime.value}\n            selectedInstance={selectedInstance}\n            selectedTradeDB='heikfilter-1day-trades'\n            chartPeriod='1Y 1day'\n            symbol={symbol.value}\n            indicators={indicators}\n            strategy={strategy}\n            isHomePage={true}\n            chartColumn={chartColumn.value}\n            microStrategy={microStrategy.value}\n            startDate={null}\n            endDate={null}\n            isSliced={true}\n          />)}\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"hunter-chart-container\">\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark hunter-nav-bar\">\n        <div className=\"logo-title\">\n          <a href=\"/chart\" className=\"hunter-navbar-brand\">\n            Violette AM - Client Portal\n          </a>\n        </div>\n        {(user.is_admin || (user.role?.length)) && (\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/chart\"} className=\"nav-link\"></Link>\n            </li>\n            <div className=\"select-option\">\n              <Select\n                value={selectedViewType}\n                onChange={handleViewTypeChange}\n                options={optionsViewTypes}\n                placeholder=\"Charting\"\n              />\n            </div>\n            <div className=\"select-option\">\n              <Select\n                value={extendMarketTime}\n                onChange={handleMarketTimeChange}\n                options={optionsMarketTime}\n                placeholder=\"Market Time\"\n              />\n            </div>\n            {/* <div className=\"select-option\">\n              <Select\n                value={selectedSymbolType}\n                onChange={handleSymbolTypeChange}\n                options={optionsSymbolType}\n                placeholder=\"Select Symbol Type\"\n              />\n            </div> */}\n            <div className=\"select-option\">\n              <Select\n                value={strategy}\n                onChange={handleStrategy}\n                options={optionsStratgy}\n                placeholder=\"Macro Strategy\"\n              />\n            </div>\n            {isShowMicro && (\n              <div className=\"select-option\">\n                <Select\n                  value={microStrategy}\n                  onChange={handleMicroStrategyChange}\n                  options={optionsMicroStrategy}\n                  placeholder=\"Micro Strategy\"\n                />\n              </div>\n            )}\n            <div className=\"select-option\">\n              <Select\n                value={symbol}\n                onChange={handlSymbolChange}\n                options={symbolList}\n                placeholder=\"Symbol\"\n              />\n            </div>\n            <div className=\"select-multi-option\">\n              <Select\n                name=\"filters\"\n                placeholder=\"Indicators\"\n                value={indicators}\n                onChange={handleIndicatorsChange}\n                options={optionsIndicator}\n                isMulti={true}\n              />\n            </div>\n            <div className=\"select-option\">\n              <Select\n                value={chartColumn}\n                onChange={handleChartsColumnChange}\n                options={optionsColumn}\n                placeholder=\"Columns\"\n              />\n            </div>\n          </div>\n        )}\n        <Collapse navbar isOpen={collapseOpen}>\n            <Nav className=\"ml-auto\" navbar>\n              <UncontrolledDropdown>\n                <DropdownToggle\n                  caret\n                  color=\"default\"\n                  nav\n                  onClick={(e) => e.preventDefault()}\n                >\n                  <div className=\"photo\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/anime3.png\").default}\n                    />\n                  </div>\n                  <p className=\"d-lg-none\">Log out</p>\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                  <DropdownItem divider tag=\"li\" />\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\" onClick={() => {\n                      handleSignout()\n                    }}>Log out</DropdownItem>\n                  </NavLink>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <li className=\"separator d-lg-none\" />\n            </Nav>\n          </Collapse>\n      </nav>\n      {!user.is_admin && !user?.role.length\n        ? (<div className=\"development-in-content dark\">\n            No Permission\n          </div>)\n        : selectedInstance === 'stress_test' || selectedInstance === 'optimization'\n        ? (<div className=\"development-in-content dark\">\n          In development\n        </div>)\n        : (<div className=\"graphs-container dark\">\n          {displayChart()}\n        </div>)\n      }\n    </div>\n  );\n};\n\nexport default HeiknStockSlicedChart;","export function validateEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\n// export function validateEmail(email) {\n//  if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email))\n//   {\n//     return (true)\n//   }\n//     alert(\"You have entered an invalid email address!\")\n//     return (false)\n// }\n\nexport function currentDateString() {\n    const date = new Date();\n    let month = date.getMonth() + 1\n    let day = date.getDate()\n    if (date.getMonth() + 1 < 10) {\n        month = '0' + month\n    }\n    if (date.getDate() < 10) {\n        day = '0' + day\n    }\n\n    return `${date.getFullYear()}-${month}-${day}`;\n}","import React, { useState, useEffect } from \"react\";\nimport {\n    useHistory,\n} from \"react-router-dom\";\nimport { useAuth } from 'contexts/authContext'\nimport { validateEmail } from 'utils/helper'\n\nconst Login = () => {\n    let auth = useAuth();\n    let history = useHistory();\n    const [error, setError] = useState(-1)\n    const [isLoading, setIsLoading] = useState(false)\n    const [message, setMessage] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    useEffect(() => {\n        const listener = event => {\n            if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n                event.preventDefault();\n                login();\n            }\n        };\n        document.addEventListener(\"keydown\", listener);\n        return () => {\n            document.removeEventListener(\"keydown\", listener);\n        };\n    }, []);\n\n    const handleEmailChange = (e) => {\n        setEmail(e.target.value)\n    }\n    \n    const handlePasswordChange = (e) => {\n        setPassword(e.target.value)\n    }\n    \n    const login = async () => {\n        if (!email.length || !password.length) {\n            setError(1)\n            setMessage('Email or password is wrong')\n            return\n        }\n        \n        if (!validateEmail(email)){\n            alert('Invalid email')\n            return\n        }\n        \n        setIsLoading(true)\n        const res = await auth.authUser.signin(email, password)\n        setIsLoading(false)\n        if (res.success) {\n            const historyState = {\n                userId: res.user_id\n            }\n            history.push({\n                pathname: '/verify',\n                state: historyState\n            })\n        } else {\n            setError(1)\n            setMessage(res.error)\n            return\n        }\n    }\n\n    const handleModalClose = () => {\n        setError(-1);\n        setMessage('');\n    }\n\n    return (\n        <div className={\"login-form\"}>\n            <div>\n\n                <h3>Log In</h3>\n\n                <div className=\"form-group\">\n                    <label>User Email</label>\n                    <input\n                        type=\"email\"\n                        className=\"form-control hunter-form-control\"\n                        placeholder=\"Enter user email\"\n                        value={email}\n                        onChange={(e) => { handleEmailChange(e)}}\n                        required\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input\n                        type=\"password\"\n                        className=\"form-control hunter-form-control\"\n                        placeholder=\"Enter password\"\n                        value={password}\n                        onChange={(e) => { handlePasswordChange(e)}}\n                        required\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <div className=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\n                    </div>\n                </div>\n\n                <button\n                    className=\"btn btn-dark btn-lg btn-block hunter-signin-button\"\n                    onClick={login}\n                >\n                    {isLoading && (\n                        <span className=\"spinner-border spinner-border-sm hunter-spinner-button\" role=\"status\" aria-hidden=\"true\"></span>\n                    )}\n                    Sign in\n                </button>\n                \n                <div className=\"form-group hunter-form-signup-area\">\n                    {/* <p className=\"sign-up-area text-left\">\n                        <a href=\"/signup\">Sign Up?</a>\n                    </p> */}\n                    <p className=\"forgot-password text-right\">\n                        Forgot <a href=\"/forgot_password\">password?</a>\n                    </p>\n                </div>\n            </div>\n            {error !== -1 && \n                <div className=\"alert alert-primary\" role=\"alert\">\n                    <div className=\"alert-container\">\n                        <div className=\"alert-content\">\n                            {message}\n                        </div>\n                        <button type=\"button\" className=\"btn btn-primary modal-close-button hunter-modal-small-button\" onClick={() => { handleModalClose() }}>Close</button>\n                    </div>\n                </div>   \n            }\n        </div>\n    );\n}\n\nexport default Login","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport {\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Input,\n  Navbar,\n  NavLink,\n  Nav,\n  Container,\n  Modal,\n  ModalHeader,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth } from 'contexts/authContext';\n\nfunction AdminNavbar() {\n  const auth = useAuth();\n  const history = useHistory();\n  const [collapseOpen] = React.useState(false);\n  const [modalSearch, setmodalSearch] = React.useState(false);\n  const [color, setcolor] = React.useState(\"navbar-transparent\");\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateColor);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      window.removeEventListener(\"resize\", updateColor);\n    };\n  });\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  const updateColor = () => {\n    if (window.innerWidth < 993 && collapseOpen) {\n      setcolor(\"bg-white\");\n    } else {\n      setcolor(\"navbar-transparent\");\n    }\n  };\n  \n  // this function is to open the Search modal\n  const toggleModalSearch = () => {\n    setmodalSearch(!modalSearch);\n  };\n\n  const handleSignout = () => {\n    auth.signout()\n    history.push('/login')\n  }\n\n  return (\n    <nav className=\"navbar navbar-expand navbar-dark bg-dark hunter-nav-bar\">\n      <div className=\"logo-title\">\n        <a href=\"/chart\" className=\"hunter-navbar-brand\">\n          Violette AM - Client Portal\n        </a>\n      </div>\n      <Navbar className={classNames(\"navbar-absolute\", color)} expand=\"lg\">\n        <Container fluid>\n          <Collapse navbar isOpen={collapseOpen}>\n            <Nav className=\"ml-auto\" navbar>\n              <UncontrolledDropdown nav>\n                <DropdownToggle\n                  caret\n                  color=\"default\"\n                  nav\n                  onClick={(e) => e.preventDefault()}\n                >\n                  <div className=\"photo\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/anime3.png\").default}\n                    />\n                  </div>\n                  <p className=\"d-lg-none\">Log out</p>\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                  {/* <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\">Profile</DropdownItem>\n                  </NavLink>\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\">Settings</DropdownItem>\n                  </NavLink> */}\n                  <DropdownItem divider tag=\"li\" />\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\" onClick={() => {handleSignout()}}>Log out</DropdownItem>\n                  </NavLink>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <li className=\"separator d-lg-none\" />\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n      <Modal\n        modalClassName=\"modal-search\"\n        isOpen={modalSearch}\n        toggle={toggleModalSearch}\n      >\n        <ModalHeader>\n          <Input placeholder=\"SEARCH\" type=\"text\" />\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            onClick={toggleModalSearch}\n          >\n            <i className=\"tim-icons icon-simple-remove\" />\n          </button>\n        </ModalHeader>\n      </Modal>\n    </nav>\n  );\n}\n\nexport default AdminNavbar;\n","import React, { useEffect, useState } from \"react\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Button\n} from \"reactstrap\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport { adminRoutes } from \"routes.js\";\n\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\n\nvar ps;\n\nfunction Admin() {\n  const history = useHistory();\n  const [isShowSidebar, setShowSidebar] = React.useState(true);\n  const location = useLocation();\n  const mainPanelRef = React.useRef(null);\n  const [sidebarOpened, setsidebarOpened] = React.useState(\n    document.documentElement.className.indexOf(\"nav-open\") !== -1\n  );\n  const [selectedInstance, setSelectedInstance] = React.useState('usermanage');\n  const [user] = useState(JSON.parse(localStorage.getItem('user-info')));\n\n    useEffect(() => {\n      if (!user.is_admin) {\n        history.push('/')\n      }\n    }, [user, history])\n\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(mainPanelRef.current, {\n        suppressScrollX: true,\n      });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n        document.documentElement.classList.add(\"perfect-scrollbar-off\");\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n      }\n    };\n  });\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    if (mainPanelRef.current) {\n      mainPanelRef.current.scrollTop = 0;\n    }\n  }, [location]);\n  // this function opens and closes the sidebar on small devices\n  const toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    setsidebarOpened(!sidebarOpened);\n  };\n  \n  const handleSidebarChange = () => {\n    setShowSidebar(!isShowSidebar);\n  };\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  const getBrandText = (path) => {\n    for (let i = 0; i < adminRoutes.length; i++) {\n      if (location.pathname.indexOf(adminRoutes[i].layout + adminRoutes[i].path) !== -1) {\n        return adminRoutes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  const handleInstanceChange = (instance) => {\n    setSelectedInstance(instance)\n  }\n\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color, changeColor }) => (\n        <React.Fragment>\n          <div className=\"wrapper hunter-wrapper\">\n          {!isShowSidebar && (\n            <Button\n              className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\n              onClick={handleSidebarChange}\n            >\n              <i className=\"tim-icons icon-align-left-2\"/>\n            </Button>\n          )}\n          {isShowSidebar && (\n              <Sidebar\n                isAdminPage={true}\n                routes={adminRoutes}\n                handleSidebarChange={handleSidebarChange}\n                selectedInstance={selectedInstance}\n                handleInstanceChange={handleInstanceChange}\n              />\n            )}\n            <div className={`main-panel ${!isShowSidebar ? 'full-width' : ''}`} ref={mainPanelRef} data={color}>\n              <AdminNavbar\n                brandText={getBrandText(location.pathname)}\n                toggleSidebar={toggleSidebar}\n                sidebarOpened={sidebarOpened}\n              />\n              <Switch>\n                {getRoutes(adminRoutes)}\n              </Switch>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nexport default Admin;\n","import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Select from 'react-select'\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Button\n} from \"reactstrap\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport { adminRoutes } from \"routes.js\";\n\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\nimport Modal from 'react-bootstrap/Modal';\nimport { MDBBtn, MDBTable, MDBTableBody, MDBTableHead  } from 'mdbreact';\nimport { getUserList, updateUserRole, deleteUser } from 'api/Api';\n\nvar ps;\n\nfunction UserManage() {\n  const history = useHistory();\n  const [isRequest, setIsRequest] = useState(true)\n  const [error, setError] = useState(-1)\n  const [isLoading, setIsLoading] = useState(false)\n  const [message, setMessage] = useState('')\n  const [isShowSidebar, setShowSidebar] = React.useState(true);\n  const location = useLocation();\n  const mainPanelRef = React.useRef(null);\n  const [isShowUpdateRoleModal, setIsShowUpdateRoleModal] = useState(false);\n  const [roles, setRoles] = useState([]);\n  const [userlist, setUserList] = useState([])\n  const [selectedUserId, setSelectedUserId] = useState(null);\n  const [sidebarOpened, setsidebarOpened] = React.useState(\n    document.documentElement.className.indexOf(\"nav-open\") !== -1\n  );\n  const [selectedInstance, setSelectedInstance] = React.useState('usermanage');\n  const optionsRole = [\n    { value: 'forward_test', label: 'Forward Test' },\n    // { value: 'stress_test', label: 'Stress Test' },\n    // { value: 'optimization', label: 'Optimization' },\n    { value: 'live_trading', label: 'Live Trade' },\n    { value: 'market_watch', label: 'Market' },\n    { value: 'scanner', label: 'Scanner' },\n    { value: 'trade_data', label: 'Trade Data' },\n    { value: 'hybrid_view', label: 'Hybrid View' },\n    { value: 'financial_data', label: 'Financial Data' },\n    { value: 'floats', label: 'Floats' },\n  ]\n  const [user] = useState(JSON.parse(localStorage.getItem('user-info')));\n\n  useEffect(() => {\n    if (!user.is_admin) {\n      history.push('/')\n    }\n  }, [user, history])\n\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(mainPanelRef.current, {\n        suppressScrollX: true,\n      });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n        document.documentElement.classList.add(\"perfect-scrollbar-off\");\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n      }\n    };\n  });\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    if (mainPanelRef.current) {\n      mainPanelRef.current.scrollTop = 0;\n    }\n  }, [location]);\n\n  useEffect(() => {\n    const fetchUserList = async () => {\n      const list = await getUserList();\n      const users = list.map((user, index) => {\n        return {\n          id: index,\n          username: user.username,\n          email: user.email,\n          role: user.is_superuser ? 'Super User' : user.role,\n          active: 'active',\n          action: <div className=\"hunter-user-manage-button-area\">\n            <MDBBtn color=\"blue\" size=\"sm\" onClick={\n            () => {\n              setRoles([]);\n              setSelectedUserId(user.id);\n              showUpdateUserRoleModal();\n            }}\n            >Update Role</MDBBtn>\n            <MDBBtn color=\"blue\" size=\"sm\" onClick={\n            async () => {\n              if (window.confirm(\"Do you really want to delete this user?\")) {\n                const res = await deleteUser(user.id)\n                setIsRequest(true);\n                alert(res.message)\n              }\n            }}\n          >Delete User</MDBBtn>\n          </div>\n        }\n      })\n       setUserList(users)\n    };\n    if (isRequest) {\n      fetchUserList();\n      setIsRequest(false);\n    }\n  }, [isRequest])\n\n  const showUpdateUserRoleModal = () => {\n    setIsShowUpdateRoleModal(true);\n  }\n\n  // this function opens and closes the sidebar on small devices\n  const toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    setsidebarOpened(!sidebarOpened);\n  };\n\n  const handleSidebarChange = () => {\n    setShowSidebar(!isShowSidebar);\n  };\n\n  const getBrandText = (path) => {\n    for (let i = 0; i < adminRoutes.length; i++) {\n      if (location.pathname.indexOf(adminRoutes[i].layout + adminRoutes[i].path) !== -1) {\n        return adminRoutes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  const handleInstanceChange = (instance) => {\n    setSelectedInstance(instance)\n  }\n\n  const columns= [\n    {\n      label: '#',\n      field: 'id',\n    },\n    {\n      label: 'name',\n      field: 'username',\n    },\n    {\n      label: 'email',\n      field: 'email',\n    },\n    {\n      label: 'Role',\n      field: 'role',\n    },\n    {\n      label: 'Active',\n      field: 'active',\n    },\n    {\n      action: 'Action',\n      field: 'action',\n    }\n  ];\n\n  const handleRolesChange = (options) => {\n    setRoles(options);\n  }\n\n  const handleUpdateRoleModalClose = () => {\n    setIsShowUpdateRoleModal(false)\n  }\n\n  const transformUserRole = (roles) => {\n    let roleValues = ''\n    let coma = ''\n    roles.forEach(role => {\n      roleValues = roleValues + coma + role.value\n      coma = ','\n    })\n    return roleValues;\n  }\n\n  const handleUserRoleUpdate = async () => {\n    setIsLoading(true)\n    const res = await updateUserRole(selectedUserId, transformUserRole(roles));\n    setIsLoading(false)\n    if ( res.success ) {\n      setIsRequest(true);\n      setError(0)\n      setMessage(res.message)\n      return;\n    }\n    setError(1)\n    setMessage(res.message)\n    return\n  }\n\n  const handleModalClose = () => {\n    setError(-1);\n    setMessage('');\n    setIsShowUpdateRoleModal(false)\n  }\n\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color, changeColor }) => (\n        <React.Fragment>\n          <div className=\"wrapper hunter-wrapper\">\n          {!isShowSidebar && (\n            <Button\n              className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\n              onClick={handleSidebarChange}\n            >\n              <i className=\"tim-icons icon-align-left-2\"/>\n            </Button>\n          )}\n          {isShowSidebar && (\n            <Sidebar\n              isAdminPage={true}\n              routes={adminRoutes}\n              handleSidebarChange={handleSidebarChange}\n              selectedInstance={selectedInstance}\n              handleInstanceChange={handleInstanceChange}\n            />\n          )}\n          <Modal show={isShowUpdateRoleModal} className=\"hunter-modal\" onHide={handleUpdateRoleModalClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Update User Role</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div className=\"select-multi-option\">\n                <Select\n                  name=\"filters\"\n                  placeholder=\"Roles\"\n                  value={roles}\n                  onChange={handleRolesChange}\n                  options={optionsRole}\n                  isMulti={true}\n                />\n              </div>\n            </Modal.Body>\n            <Modal.Footer className=\"hunter-modal-footer\">\n              <Button variant=\"primary\" onClick={handleUserRoleUpdate}>\n                {isLoading && (\n                  <span className=\"spinner-border spinner-border-sm hunter-spinner-button\" role=\"status\" aria-hidden=\"true\"></span>\n                )}\n                Update Role\n              </Button>\n            </Modal.Footer>\n            {error !== -1 &&\n              <div className=\"alert alert-primary\" role=\"alert\">\n                <div className=\"alert-container\">\n                  <div className=\"alert-content\">\n                    {message}\n                  </div>\n                  <button type=\"button\" className=\"btn btn-primary modal-close-button hunter-modal-small-button\" onClick={() => { handleModalClose() }}>Close</button>\n                </div>\n              </div>\n            }\n          </Modal>\n            <div className={`main-panel ${!isShowSidebar ? 'full-width' : ''}`} ref={mainPanelRef} data={color}>\n              <AdminNavbar\n                brandText={getBrandText(location.pathname)}\n                toggleSidebar={toggleSidebar}\n                sidebarOpened={sidebarOpened}\n              />\n              <div className=\"hunter-page-container\">\n                <div className=\"hunter-page-title\">\n                  <h3>User Manage</h3>\n                </div>\n                <div className=\"col-sm-8 hunter-mdb-table-container\">\n                  <MDBTable btn>\n                    <MDBTableHead columns={columns} color=\"dark\"/>\n                    <MDBTableBody rows={userlist} className=\"hunter-mdb-table-body\"/>\n                  </MDBTable>\n                </div>\n              </div>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nexport default UserManage;\n","import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Select from 'react-select'\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Button\n} from \"reactstrap\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport { adminRoutes } from \"routes.js\";\n\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\nimport { MDBBtn, MDBTable, MDBTableBody, MDBTableHead  } from 'mdbreact';\nimport Modal from 'react-bootstrap/Modal';\nimport { createSignUpLink, getActiveLinks, sendSignUpLink } from 'api/Api';\nimport { validateEmail } from 'utils/helper';\n\nvar ps;\n\nfunction LinkManage() {\n  const history = useHistory();\n  const [roles, setRoles] = useState([])\n  const [isShowSendModal, setIsShowSendModal] = useState(false)\n  const [isShowCreateLinkModal, setShowCreateLinkModal] = useState(false);\n  const [isShowSidebar, setShowSidebar] = React.useState(true);\n  const location = useLocation();\n  const mainPanelRef = React.useRef(null);\n  const [sidebarOpened, setsidebarOpened] = React.useState(\n    document.documentElement.className.indexOf(\"nav-open\") !== -1\n  );\n  const [selectedInstance, setSelectedInstance] = React.useState('linkmanage');\n  const [selectedLink, setSelectedLink] = useState('')\n  const [email, setEmail] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n\n  const optionsRole = [\n    { value: 'forward_test', label: 'Forward Test' },\n    // { value: 'stress_test', label: 'Stress Test' },\n    // { value: 'optimization', label: 'Optimization' },\n    { value: 'live_trading', label: 'Live Trade' },\n    { value: 'market_watch', label: 'Market' },\n    { value: 'scanner', label: 'Scanner' },\n    { value: 'trade_data', label: 'Trade Data' },\n    { value: 'hybrid_view', label: 'Hybrid View' },\n    { value: 'financial_data', label: 'Financial Data' },\n    { value: 'floats', label: 'Floats' },\n  ]\n\n  const [user] = useState(JSON.parse(localStorage.getItem('user-info')));\n\n  useEffect(() => {\n    if (!user.is_admin) {\n      history.push('/')\n    }\n  }, [user, history])\n\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(mainPanelRef.current, {\n        suppressScrollX: true,\n      });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n        document.documentElement.classList.add(\"perfect-scrollbar-off\");\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n      }\n    };\n  });\n\n  React.useEffect(() => {\n    const fetchActiveLinks = async () => {\n      let links = await getActiveLinks();\n      const filteredLinks = links.filter(link => !link.expired)\n      const linklist = filteredLinks.map(link => {\n        return {\n          id: link.id,\n          link: link.link,\n          roles: link.role,\n          action: <MDBBtn color=\"blue\" size=\"sm\" onClick={\n            () => {\n              setSelectedLink(link.link)\n              showSendEmailModal()\n            }}\n          >Send</MDBBtn>\n        }\n      })\n      setLinkList(linklist)\n    }\n\n    fetchActiveLinks()\n  }, [])\n\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    if (mainPanelRef.current) {\n      mainPanelRef.current.scrollTop = 0;\n    }\n  }, [location]);\n  // this function opens and closes the sidebar on small devices\n  const toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    setsidebarOpened(!sidebarOpened);\n  };\n\n  const handleSidebarChange = () => {\n    setShowSidebar(!isShowSidebar);\n  };\n\n  const getBrandText = (path) => {\n    for (let i = 0; i < adminRoutes.length; i++) {\n      if (location.pathname.indexOf(adminRoutes[i].layout + adminRoutes[i].path) !== -1) {\n        return adminRoutes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n\n  const handleInstanceChange = (instance) => {\n    setSelectedInstance(instance)\n  }\n\n  const handleCreateLinkModalClose = () => {\n    setRoles([])\n    setShowCreateLinkModal(false)\n  }\n\n  const handleCreateLinkClick = () => {\n    setShowCreateLinkModal(true)\n  }\n\n  const handleRolesChange = (options) => {\n    setRoles(options);\n  }\n\n  const handleLinkCreate = async () => {\n    let roleValues = ''\n    let coma = ''\n    roles.forEach(role => {\n      roleValues = roleValues + coma + role.value\n      coma = ','\n    })\n\n    setIsLoading(true)\n    let links = await createSignUpLink(roleValues);\n    setIsLoading(false)\n\n    const linklist = links.map(link => {\n      return {\n        id: link.id,\n        link: link.link,\n        roles: link.role,\n        action: <MDBBtn color=\"blue\" size=\"sm\" onClick={\n          () => {\n            setSelectedLink(link.link)\n            showSendEmailModal()\n          }}\n        >Send</MDBBtn>\n      }\n    })\n\n    setLinkList(linklist)\n    setShowCreateLinkModal(false)\n  }\n\n  const showSendEmailModal = async () => {\n    setIsShowSendModal(true);\n  }\n\n  const handleSendEmailModalClose = async () => {\n    setIsShowSendModal(false);\n  }\n\n  const handleLinkToEmailSend = async () => {\n    if (!validateEmail(email)) {\n      alert('Email is invalid')\n      return\n    }\n\n    setIsLoading(true)\n    await sendSignUpLink(email, selectedLink);\n    setIsLoading(false)\n\n    alert(`sent to ${email} successfully!`)\n\n    setEmail('')\n    setIsShowSendModal(false);\n  }\n\n  const columns= [\n    {\n      label: '#',\n      field: 'id',\n    },\n    {\n      label: 'Link',\n      field: 'link',\n    },\n    {\n      label: 'Roles',\n      field: 'roles',\n    },\n    {\n      label: 'Action',\n      field: 'action',\n    }\n  ];\n\n  const [linklist, setLinkList] = useState()\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value)\n  }\n\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color, changeColor }) => (\n        <React.Fragment>\n          <div className=\"wrapper hunter-wrapper\">\n          {!isShowSidebar && (\n            <Button\n              className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\n              onClick={handleSidebarChange}\n            >\n              <i className=\"tim-icons icon-align-left-2\"/>\n            </Button>\n          )}\n          {isShowSidebar && (\n              <Sidebar\n                isAdminPage={true}\n                routes={adminRoutes}\n                handleSidebarChange={handleSidebarChange}\n                selectedInstance={selectedInstance}\n                handleInstanceChange={handleInstanceChange}\n              />\n            )}\n            <Modal show={isShowCreateLinkModal} className=\"hunter-modal\" onHide={handleCreateLinkModalClose}>\n              <Modal.Header closeButton>\n                <Modal.Title>Create Sign Up link for users</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <div className=\"select-multi-option\">\n                  <Select\n                    name=\"filters\"\n                    placeholder=\"Roles\"\n                    value={roles}\n                    onChange={handleRolesChange}\n                    options={optionsRole}\n                    isMulti={true}\n                  />\n                </div>\n              </Modal.Body>\n              <Modal.Footer className=\"hunter-modal-footer\">\n                <Button variant=\"primary\" onClick={handleLinkCreate}>\n                  Create Link\n                </Button>\n              </Modal.Footer>\n            </Modal>\n            <Modal show={isShowSendModal} className=\"hunter-modal\" onHide={handleSendEmailModalClose}>\n              <Modal.Header closeButton>\n                <Modal.Title>Send the link</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control hunter-form-control\"\n                    placeholder=\"Email\"\n                    value={email}\n                    onChange={(e) => { handleEmailChange(e)} }\n                  />\n                </div>\n              </Modal.Body>\n              <Modal.Footer className=\"hunter-modal-footer\">\n                <Button variant=\"primary\" onClick={handleLinkToEmailSend} className=\"hunter-flex-button\">\n                  {isLoading && (\n                    <span className=\"spinner-border spinner-border-sm hunter-spinner-button\" role=\"status\" aria-hidden=\"true\"></span>\n                  )}\n                  Send\n                </Button>\n              </Modal.Footer>\n            </Modal>\n            <div className={`main-panel ${!isShowSidebar ? 'full-width' : ''}`} ref={mainPanelRef} data={color}>\n              <AdminNavbar\n                brandText={getBrandText(location.pathname)}\n                toggleSidebar={toggleSidebar}\n                sidebarOpened={sidebarOpened}\n              />\n              <div className=\"hunter-page-container\">\n                <div className=\"hunter-page-title\">\n                  <h3>Link Manage</h3>\n                </div>\n                <div className=\"col-sm-6 hunter-mdb-table-container\">\n                  <div className=\"create-button-bar\">\n                    <MDBBtn color=\"blue\" size=\"md\" onClick={handleCreateLinkClick}>Create</MDBBtn>\n                  </div>\n                  <MDBTable btn>\n                    <MDBTableHead columns={columns} color=\"dark\"/>\n                    <MDBTableBody rows={linklist} className=\"hunter-mdb-table-body\"/>\n                  </MDBTable>\n                </div>\n              </div>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nexport default LinkManage;","import React, {useState, useContext} from 'react'\r\n\r\nexport const CsvDownloadContext = React.createContext()\r\nexport const CsvDownloadUpdateContext = React.createContext()\r\n\r\nexport function useCsvDownload() {\r\n  return useContext(CsvDownloadContext)\r\n}\r\n\r\nexport function useCsvDownloadUpdate() {\r\n  return useContext(CsvDownloadUpdateContext)\r\n}\r\n\r\nexport function CsvDownloadProvider({children}) {\r\n  const [dataset, setDataset] = useState([{}])\r\n\r\n  const updateCsvDownload = function(data) {\r\n    setDataset(data)\r\n  }\r\n\r\n  return (\r\n    <CsvDownloadContext.Provider value={dataset}>\r\n      <CsvDownloadUpdateContext.Provider value={updateCsvDownload}>\r\n        {children}\r\n      </CsvDownloadUpdateContext.Provider>\r\n    </CsvDownloadContext.Provider>\r\n  )\r\n}","import { CSVLink } from \"react-csv\"\r\nimport { useCsvDownload } from \"contexts/CsvDownloadContext\"\r\n\r\nconst ButtonCsvDownload = (props) => {\r\n  const dataset = useCsvDownload()\r\n  return (\r\n    <div className={\"d-flex align-items-center\"}>\r\n      <CSVLink data={dataset} filename={props.filename} className={\"btn btn-primary py-2 my-0 hunter-csv-download-button\"}>Csv Download</CSVLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ButtonCsvDownload","import React, {useState, useContext} from 'react'\r\n\r\nconst DatatableContext = React.createContext()\r\nconst DatatableLoadingContext = React.createContext()\r\nconst PaginationContext = React.createContext()\r\nconst PaginationUpdatingContext = React.createContext()\r\n\r\nexport const useDatatableLoading = () => {\r\n  return useContext(DatatableLoadingContext)\r\n}\r\n\r\nexport const useDatatable = (initialData) => {\r\n  return useContext(DatatableContext)\r\n}\r\n\r\n\r\nexport const useDatatableValue = (initialData) => {\r\n  const context = useContext(DatatableContext)\r\n  const [, setDatatable] = context\r\n\r\n  setDatatable(initialData)\r\n  return context\r\n}\r\n\r\n\r\nexport const useDatatableUpdate = () => {\r\n  const [, setDatatable] = useContext(DatatableContext)\r\n\r\n  return setDatatable\r\n}\r\n\r\nexport const usePagination = () => {\r\n  return useContext(PaginationContext)\r\n}\r\n\r\nexport const usePaginationUpdate = () => {\r\n  return useContext(PaginationUpdatingContext)\r\n}\r\n\r\nexport const DatatableProvider = ({children}) => {\r\n  const [isLoading, setLoading] = useState(false)\r\n\r\n  const [itemsPerPage, setItemsPerPage] = useState(10)\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [totalItems, setTotalItems] = useState(0)\r\n\r\n  const [datatable, setDatatable] = useState({\r\n    columns: [],\r\n    rows: [],\r\n  })\r\n\r\n  return (\r\n    <PaginationContext.Provider value={[parseInt(currentPage), parseInt(itemsPerPage), parseInt(totalItems)]}>\r\n      <PaginationUpdatingContext.Provider value={[setCurrentPage, setItemsPerPage, setTotalItems]}>\r\n        <DatatableContext.Provider value={[datatable, setDatatable]}>\r\n          <DatatableLoadingContext.Provider value={[isLoading, setLoading]}>\r\n              {children}\r\n          </DatatableLoadingContext.Provider>\r\n        </DatatableContext.Provider>\r\n      </PaginationUpdatingContext.Provider>\r\n    </PaginationContext.Provider>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst Spinner = (props) => {\r\n  // props.color: primary,success,danger,warning,info\r\n  const color = props.color?props.color:'primary'\r\n\r\n  return (\r\n    <>\r\n      <div className={\"spinner-border text-\" + color} role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Spinner;","import { MDBDataTableV5 } from 'mdbreact';\r\nimport Pagination from 'react-bootstrap/Pagination'\r\nimport Spinner from 'components/Spinner'\r\nimport {useDatatableLoading, useDatatable, usePagination, usePaginationUpdate} from \"contexts/DatatableContext\"\r\n\r\nconst HeiknDatatable = (props) => {\r\n  const [isLoadingData, ] = useDatatableLoading()\r\n  const [currentPage, itemsPerPage, totalItems] = usePagination();\r\n  const [setCurrentPage, setItemsPerPage, ] = usePaginationUpdate();\r\n  const [datatable,] = useDatatable();\r\n\r\n  const handleItemsPerPageChanged = (e) => {\r\n    setItemsPerPage(parseInt(e.target.value))\r\n  }\r\n\r\n  const handlePrevClick = () => {\r\n    if (currentPage > 0) {\r\n      setCurrentPage(currentPage - 1)\r\n    }\r\n  }\r\n\r\n  const handleNextClick = () => {\r\n    if (currentPage < totalItems) {\r\n      setCurrentPage(currentPage + 1)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {isLoadingData && <div className=\"hunter-spinner-area\"><span className=\"mr-30\">Loading ...</span><Spinner>Loading</Spinner></div>}\r\n      {!isLoadingData && (\r\n      <MDBDataTableV5\r\n        hover\r\n        maxHeight=\"500px\"\r\n        entriesOptions={[10, 25, 50, 100]}\r\n        entries={itemsPerPage}\r\n        pagesAmount={itemsPerPage}\r\n        data={datatable}\r\n        dark={true}\r\n        noBottomColumns={true}\r\n        small={true}\r\n        striped={true}\r\n        scrollY={true}\r\n        displayEntries={false}\r\n        info={false}\r\n        paging={false}\r\n      />\r\n      )}\r\n\r\n      <div class=\"mdb-datatable dt-bootstrap4\">\r\n        <div class=\"d-flex align-items-center justify-content-end\">\r\n          <div data-test=\"mdb-datatable-entries\" class=\"mdb-datatable-entries\">\r\n            <div data-test=\"datatable-select\" class=\"mdb-datatable-length bs-select\">\r\n              <label>\r\n                Rows per page:\r\n                <select class=\"custom-select custom-select-sm form-control form-control-sm\" style={{ marginLeft: 0.5 + 'rem' }} onChange={handleItemsPerPageChanged}>\r\n                  <option value=\"10\">10</option>1\r\n                  <option value=\"25\">25</option>\r\n                  <option value=\"50\">50</option>\r\n                  <option value=\"100\">100</option>\r\n                </select>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Pagination>\r\n        <Pagination.Item>{(currentPage - 1) * itemsPerPage + 1}</Pagination.Item>\r\n        <Pagination.Item>{currentPage * itemsPerPage}</Pagination.Item>\r\n        <Pagination.Item> of </Pagination.Item>\r\n        <Pagination.Item> { totalItems } </Pagination.Item>\r\n        <Pagination.Prev disabled={currentPage <= 1} onClick={() => { handlePrevClick() }}/>\r\n        <Pagination.Next disabled={(currentPage + 1) >= totalItems / itemsPerPage} onClick={() => { handleNextClick() }}/>\r\n      </Pagination>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HeiknDatatable","import React, { useState, useEffect, useMemo } from \"react\";\nimport Select from 'react-select'\nimport { Link } from \"react-router-dom\";\nimport \"react-datetime/css/react-datetime.css\";\nimport {\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  NavLink,\n  Nav,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useAuth } from 'contexts/authContext';\nimport { getAllSymbols, filterPriceData } from 'api/Api'\nimport { currentDateString } from 'utils/helper'\nimport MultiRangeSlider from 'components/MultiRangeSlider/MultiRangeSlider'\nimport { useCsvDownloadUpdate } from \"contexts/CsvDownloadContext\"\nimport ButtonCsvDownload from 'components/ButtonCsvDownload'\nimport {useDatatableLoading, useDatatable, usePagination, usePaginationUpdate} from \"contexts/DatatableContext\"\nimport HeiknDatatable from 'components/HeiknDatatable'\n\nconst PriceDataTable = () => {\n  const auth = useAuth();\n  const history = useHistory();\n  const [collapseOpen,] = React.useState(false)\n  const [symbol, setSymbol] = React.useState({value: \"GOOG\", label: \"GOOG\"})\n  const [timeFrame, setTimeFrame] = useState({ value: \"1m\", label: \"1m\"});\n  const [tradeStartDate, setTradeStartDate] = useState('2021-01-01')\n  const [tradeEndDate, setTradeEndDate] = useState(currentDateString())\n  const [optionsSymbol, setOptionsSymbol] = useState([])\n  const [optionsTimeFrame] = useState([\n    { value: \"1m\", label: \"1m\" },\n    { value: \"1h\", label: \"1h\" },\n    { value: \"1d\", label: \"1d\" }\n  ])\n\n  // handle pagination state\n  const [currentPage, itemsPerPage,] = usePagination()\n  const [, , setTotalItems] = usePaginationUpdate()\n\n  const hearder_columns = useMemo(() => {\n    return [\n    {\n      label: 'O',\n      field: 'o',\n      width: 200,\n      attributes: {\n        'aria-controls': 'DataTable',\n        'aria-label': 'symbol',\n      },\n    },\n    {\n      label: 'H',\n      field: 'h',\n      width: 200,\n    },\n    {\n      label: 'C',\n      field: 'c',\n      width: 200,\n    },\n    {\n      label: 'L',\n      field: 'l',\n      width: 200,\n    },\n    {\n      label: 'V',\n      field: 'v',\n      width: 200,\n    },\n    {\n      label: 'Date',\n      field: 'date',\n      sort: 'price',\n    },\n  ]}, [])\n\n  const [, setLoadingData] = useDatatableLoading()\n\n  const [, setDatatable] = useDatatable({\n    columns: hearder_columns,\n    rows: [\n    ],\n  });\n\n  const updateCsvDownload = useCsvDownloadUpdate();\n\n\n  // updating datatable of price\n  const getPriceTrades = async (symbol, timeFrame, tradeStartDate, tradeEndDate) => {\n    setLoadingData(true)\n\n    const trades_data = await filterPriceData(symbol, timeFrame, tradeStartDate, tradeEndDate, currentPage, itemsPerPage);\n\n    setDatatable({\n      columns: hearder_columns,\n      rows: trades_data.candles\n    })\n    updateCsvDownload([...trades_data.candles])\n    setTotalItems(trades_data.page_total)\n\n    setLoadingData(false)\n  }\n\n  useEffect(() => {\n    getPriceTrades(symbol.value, timeFrame.value, tradeStartDate, tradeEndDate)\n  }, [symbol, timeFrame, hearder_columns, tradeStartDate, tradeEndDate, itemsPerPage, currentPage])\n\n\n  useEffect(() => {\n    const getSymbols = async () => {\n      const res = await getAllSymbols()\n      setOptionsSymbol(res)\n    }\n    getSymbols()\n  }, [setOptionsSymbol])\n\n\n  const handleSignout = () => {\n    auth.signout()\n    history.push('/login')\n  }\n\n  const handleSymbolChange = (e) => {\n    setSymbol(e)\n  }\n\n  const handleTimeFrameChange = (e) => {\n    setTimeFrame(e)\n  }\n\n  const selectDateRange = (startDate, endDate) => {\n    setTradeStartDate(startDate)\n    setTradeEndDate(endDate)\n  }\n\n  return (\n    <div className=\"hunter-chart-container\">\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark hunter-nav-bar\">\n        <div className=\"logo-title\">\n          <a href=\"/chart\" className=\"hunter-navbar-brand\">\n            Violette AM - Client Portal\n          </a>\n        </div>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/chart\"} className=\"nav-link\"></Link>\n          </li>\n        </div>\n        <Collapse navbar isOpen={collapseOpen}>\n            <Nav className=\"ml-auto\" navbar>\n              <UncontrolledDropdown nav>\n                <DropdownToggle\n                  caret\n                  color=\"default\"\n                  nav\n                  onClick={(e) => e.preventDefault()}\n                >\n                  <div className=\"photo\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/anime3.png\").default}\n                    />\n                  </div>\n                  <p className=\"d-lg-none\">Log out</p>\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                  <DropdownItem divider tag=\"li\" />\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\" onClick={() => {handleSignout()}}>Log out</DropdownItem>\n                  </NavLink>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <li className=\"separator d-lg-none\" />\n            </Nav>\n          </Collapse>\n      </nav>\n      <div className=\"col-sm-12 hunter-data-table-container\">\n        <div className=\"hunter-data-table-title\">\n          Price Data Table\n        </div>\n        <div className=\"hunter-search-filter-area\">\n          <div className=\"select-option\">\n            <Select\n              value={symbol}\n              onChange={handleSymbolChange}\n              options={optionsSymbol}\n              placeholder=\"Symbol\"\n            />\n          </div>\n          <div className=\"select-option\">\n            <Select\n              value={timeFrame}\n              onChange={handleTimeFrameChange}\n              options={optionsTimeFrame}\n              placeholder=\"Time Frame\"\n            />\n          </div>\n          <div className='input-group date hunter-date-time-picker' id='datetimepicker1'>\n            <MultiRangeSlider\n              selectDateRange={selectDateRange}\n            />\n            <ButtonCsvDownload filename={\"price.csv\"}>Csv Download</ButtonCsvDownload>\n          </div>\n        </div>\n        <HeiknDatatable />\n      </div>\n    </div>\n  );\n};\n\nexport default PriceDataTable;\n","import React from \"react\";\nimport {\n  Button\n} from \"reactstrap\";\n\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport PriceDataTable from \"components/Datatable/PriceDataTable\"\n\nimport { routes } from \"routes.js\";\n\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\nimport { CsvDownloadProvider } from 'contexts/CsvDownloadContext';\nimport { DatatableProvider } from \"contexts/DatatableContext\";\n\nfunction PriceData() {\n  const [isShowSidebar, setShowSidebar] = React.useState(false);\n  const [selectedInstance, setSelectedInstance] = React.useState('trade_data');\n\n  const handleSidebarChange = () => {\n    setShowSidebar(!isShowSidebar);\n  };\n\n  const handleInstanceChange = (instance) => {\n    setSelectedInstance(instance)\n  }\n\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color }) => (\n        <React.Fragment>\n          <div className=\"wrapper hunter-wrapper\">\n          {!isShowSidebar && (\n            <Button\n              className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\n              onClick={handleSidebarChange}\n            >\n              <i className=\"tim-icons icon-align-left-2\"/>\n            </Button>\n          )}\n          {isShowSidebar && (\n              <Sidebar\n                isAdminPage={false}\n                routes={routes}\n                subInstance={'pricedatatable'}\n                selectedInstance={selectedInstance}\n                handleSidebarChange={handleSidebarChange}\n                handleInstanceChange={handleInstanceChange}\n              />\n            )}\n            <div className=\"col-sm-12\">\n              <DatatableProvider>\n                <CsvDownloadProvider>\n                  <PriceDataTable />\n                </CsvDownloadProvider>\n              </DatatableProvider>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nexport default PriceData;","import React, { useCallback, useState, useEffect, useMemo } from \"react\";\nimport Select from 'react-select'\nimport { Link } from \"react-router-dom\";\nimport \"react-datetime/css/react-datetime.css\";\nimport {\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  NavLink,\n  Nav,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth } from 'contexts/authContext';\nimport { getAllSymbols, filterTradesData } from 'api/Api'\nimport { currentDateString } from 'utils/helper'\nimport MultiRangeSlider from 'components/MultiRangeSlider/MultiRangeSlider'\nimport {useDatatableLoading, useDatatable, usePagination, usePaginationUpdate} from \"contexts/DatatableContext\"\nimport HeiknDatatable from 'components/HeiknDatatable'\n\nconst TradeDataTable = () => {\n  const auth = useAuth();\n  const history = useHistory();\n  const [collapseOpen,] = React.useState(false)\n  const [symbol, setSymbol] = React.useState([])\n  const [macroStrategy, setMacroStrategy] = useState();\n  const [microStrategy, setMicroStrategy] = useState()\n  const [tradeStartDate, setTradeStartDate] = useState('2021-01-01')\n  const [tradeEndDate, setTradeEndDate] = useState(currentDateString())\n  const [strategyList, setStrategyList] = useState([]);\n\n  // handle pagination state\n  const [currentPage, itemsPerPage,] = usePagination()\n  const [, , setTotalItems] = usePaginationUpdate()\n\n  const [optionsStrategy, setOptionsStrategy] = useState([])\n  const [optionsMacroStrategy, setOptionsMacroStrategy] = useState([])\n\n  const [optionsMicroStrategy, setOptionsMicroStrategy] = useState([])\n\n  const [optionsSymbol, setOptionsSymbol] = useState([])\n\n  const hearder_columns = useMemo(() => {\n    return [\n    {\n      label: 'Symbol',\n      field: 'symbol',\n      width: 150,\n      attributes: {\n        'aria-controls': 'DataTable',\n        'aria-label': 'symbol',\n      },\n    },\n    {\n      label: 'Strategy',\n      field: 'strategy',\n      width: 200,\n    },\n    {\n      label: 'Trade Date',\n      field: 'date',\n      sort: 'date',\n      width: 150,\n    },\n    {\n      label: 'Side',\n      field: 'side',\n      width: 270,\n    },\n    {\n      label: 'Quantity',\n      field: 'quantity',\n      sort: 'quantity',\n      width: 100,\n    },\n    {\n      label: 'Price',\n      field: 'price',\n      sort: 'price',\n      width: 100,\n    },\n  ]}, [])\n\n  const [,setDatatable] = useDatatable({\n    columns: hearder_columns,\n    rows: [\n    ],\n  });\n\n  const [,setLoadingData] = useDatatableLoading()\n\n\n  const getStrategyList = useCallback(\n    () => {\n      fetch(process.env.REACT_APP_BACKEND_URL + \"/api/get_strategy_list\")\n        .then(response => response.json())\n        .then(data => {\n          const strategyOptions = data.result.map((o => {\n            return {\n              value: o.macro,\n              label: o.macro,\n            }\n          }))\n          setOptionsStrategy(strategyOptions);\n          if (data.result.length) {\n            setStrategyList(data.result);\n            data.result.forEach((item) => {\n              if (item.macro === 'heikfilter') {\n                const microStrategyOptions = item.micro.map(o => {\n                  return {\n                    value: o,\n                    label: o,\n                  }\n                })\n                setOptionsMicroStrategy( microStrategyOptions )\n                setMicroStrategy(microStrategyOptions[0])\n\n                const symbolOptions = item.symbols.map(o => {\n                  return {\n                    value: o,\n                    label: o,\n                  }\n                })\n                setOptionsSymbol(symbolOptions)\n                // setSymbol(symbolOptions[0])\n              }\n            })\n          }\n        })\n    },\n    [],\n  )\n\n  const getTrades = async (macroStrat, microStrat, tradeStartDate, tradeEndDate, currentPage, pageAmount) => {\n    setLoadingData(true)\n    const result = await filterTradesData(macroStrat, microStrat, tradeStartDate, tradeEndDate, currentPage, pageAmount);\n    setDatatable({\n      columns: hearder_columns,\n      rows: result.trades_data\n    })\n    setTotalItems(result.page_total)\n    setLoadingData(false)\n  }\n\n  useEffect(() => {\n    getStrategyList()\n  }, [getStrategyList])\n\n  useEffect(() => {\n    getTrades(\n      macroStrategy ? macroStrategy.value : '',\n      microStrategy ? microStrategy.value : '',\n      tradeStartDate, tradeEndDate, currentPage, itemsPerPage)\n  }, [macroStrategy, microStrategy, hearder_columns, tradeStartDate, tradeEndDate, currentPage, itemsPerPage])\n\n  useEffect(() => {\n      const getSymbols = async () => {\n      const res = await getAllSymbols()\n      setOptionsSymbol(res)\n    }\n    getSymbols()\n  }, [setOptionsSymbol])\n\n  const handleSignout = () => {\n    auth.signout()\n    history.push('/login')\n  }\n\n  const handleSymbolChange = (e) => {\n    setSymbol(e)\n  }\n\n  const handleMacroStrategy = (e) => {\n    if (e) {\n      if (strategyList.length) {\n        strategyList.forEach((item) => {\n          if (item.macro === e.value) {\n            const microStrategyOptions = item.micro.map(o => {\n              return {\n                value: o,\n                label: o,\n              }\n            })\n            setOptionsMicroStrategy( microStrategyOptions )\n\n            setMicroStrategy(microStrategyOptions[0])\n\n            const symbolOptions = item.symbols.map(o => {\n              return {\n                value: o,\n                label: o,\n              }\n            })\n            setOptionsSymbol(symbolOptions)\n            // setSymbol(symbolOptions[0])\n            // setSymbol({value: 'MSFT', label: 'MSFT'})\n          }\n        })\n      }\n      setMacroStrategy(e)\n    }\n  }\n\n  const handleMicroStrategy = (e) => {\n    setMicroStrategy(e)\n  }\n\n  const selectDateRange = (startDate, endDate) => {\n    setTradeStartDate(startDate)\n    setTradeEndDate(endDate)\n  }\n\n\n  return (\n    <div className=\"hunter-chart-container\">\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark hunter-nav-bar\">\n        <div className=\"logo-title\">\n          <a href=\"/chart\" className=\"hunter-navbar-brand\">\n            Violette AM - Client Portal\n          </a>\n        </div>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/chart\"} className=\"nav-link\"></Link>\n          </li>\n        </div>\n        <Collapse navbar isOpen={collapseOpen}>\n            <Nav className=\"ml-auto\" navbar>\n              <UncontrolledDropdown nav>\n                <DropdownToggle\n                  caret\n                  color=\"default\"\n                  nav\n                  onClick={(e) => e.preventDefault()}\n                >\n                  <div className=\"photo\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/anime3.png\").default}\n                    />\n                  </div>\n                  <p className=\"d-lg-none\">Log out</p>\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                  <DropdownItem divider tag=\"li\" />\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\" onClick={() => {handleSignout()}}>Log out</DropdownItem>\n                  </NavLink>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <li className=\"separator d-lg-none\" />\n            </Nav>\n          </Collapse>\n      </nav>\n      <div className=\"col-sm-12 hunter-data-table-container\">\n        <div className=\"hunter-data-table-title\">\n          Trade Data Table\n        </div>\n        <div className=\"hunter-search-filter-area\">\n          <div className=\"select-option\">\n            <Select\n              value={symbol}\n              onChange={handleSymbolChange}\n              options={optionsSymbol}\n              placeholder=\"Symbol\"\n            />\n          </div>\n          <div className=\"select-option\">\n            <Select\n              value={macroStrategy}\n              onChange={handleMacroStrategy}\n              options={optionsStrategy}\n              placeholder=\"Macro Strategy\"\n            />\n          </div>\n          <div className=\"select-option\">\n            <Select\n              value={microStrategy}\n              onChange={handleMicroStrategy}\n              options={optionsMicroStrategy}\n              placeholder=\"Micro Strategy\"\n            />\n          </div>\n          <div className='input-group date hunter-date-time-picker' id='datetimepicker1'>\n            <MultiRangeSlider\n              selectDateRange={selectDateRange}\n            />\n          </div>\n        </div>\n\n        <HeiknDatatable />\n      </div>\n    </div>\n  );\n};\n\nexport default TradeDataTable;\n","import React from \"react\";\nimport {\n  Button\n} from \"reactstrap\";\n\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport TradeDataTable from \"components/Datatable/TradeDataTable\"\nimport { routes } from \"routes.js\";\n\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\n\nfunction TradeData() {\n  const [isShowSidebar, setShowSidebar] = React.useState(false);\n  const [selectedInstance, setSelectedInstance] = React.useState('trade_data');\n\n  const handleSidebarChange = () => {\n    setShowSidebar(!isShowSidebar);\n  };\n\n  const handleInstanceChange = (instance) => {\n    setSelectedInstance(instance)\n  }\n\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color }) => (\n        <React.Fragment>\n          <div className=\"wrapper hunter-wrapper\">\n            {!isShowSidebar && (\n              <Button\n                className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\n                onClick={handleSidebarChange}\n              >\n                <i className=\"tim-icons icon-align-left-2\"/>\n              </Button>\n            )}\n            {isShowSidebar && (\n              <Sidebar\n                isAdminPage={false}\n                routes={routes}\n                subInstance={'tradedatatable'}\n                selectedInstance={selectedInstance}\n                handleSidebarChange={handleSidebarChange}\n                handleInstanceChange={handleInstanceChange}\n              />\n            )}\n            <div className=\"col-sm-12\">\n                <TradeDataTable />\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nexport default TradeData;","import React, { useCallback, useState, useEffect, useMemo } from \"react\";\nimport MultiRangeSlider from 'components/MultiRangeSlider/MultiRangeSlider'\nimport { Link } from \"react-router-dom\";\nimport \"react-datetime/css/react-datetime.css\";\nimport {\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  NavLink,\n  Nav,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { MDBDataTableV5 } from 'mdbreact';\nimport Pagination from 'react-bootstrap/Pagination'\nimport { useAuth } from 'contexts/authContext';\nimport { filterTradesData } from 'api/Api'\nimport { currentDateString } from 'utils/helper'\n\nconst HybridViewTable = (props) => {\n  const { symbol, macroStrategy, microStrategy, isLoaded } = props;\n  const auth = useAuth();\n  const history = useHistory();\n  const [collapseOpen,] = React.useState(false)\n  const [tradeStartDate, setTradeStartDate] = useState('2021-01-01')\n  const [tradeEndDate, setTradeEndDate] = useState(currentDateString())\n  \n  const [pageAmount, setPageAmount] = useState(10)\n  const [currentPage, setCurrentPage] = useState(1);\n  const [wholeRows, setWholeRows] = useState(0);\n\n  const hearder_columns = useMemo(() => {\n    return [\n    {\n      label: 'Symbol',\n      field: 'symbol',\n      width: 150,\n      attributes: {\n        'aria-controls': 'DataTable',\n        'aria-label': 'symbol',\n      },\n    },\n    {\n      label: 'Strategy',\n      field: 'strategy',\n      width: 200,\n    },\n    {\n      label: 'Trade Date',\n      field: 'date',\n      sort: 'date',\n      width: 150,\n    },\n    {\n      label: 'Side',\n      field: 'side',\n      width: 270,\n    },  \n    {\n      label: 'Quantity',\n      field: 'quantity',\n      sort: 'quantity',\n      width: 100,\n    },   \n    {\n      label: 'Price',\n      field: 'price',\n      sort: 'price',\n      width: 100,\n    },\n  ]}, [])\n\n  const [datatable, setDatatable] = React.useState({\n    columns: hearder_columns,\n    rows: [\n    ],\n  });\n\n  useEffect(() => {\n    const get_trades = async (macroStrat, microStrat, tradeStartDate, tradeEndDate) => {\n      const result = await filterTradesData(macroStrat, microStrat, tradeStartDate, tradeEndDate, currentPage, pageAmount);\n      setDatatable({\n        columns: hearder_columns,\n        rows: result.trades_data\n      })\n      setWholeRows(result.page_total)\n    }\n\n    if (isLoaded) {\n      get_trades(\n        macroStrategy ? macroStrategy.value : '',\n        microStrategy ? microStrategy.value : '', \n        tradeStartDate, tradeEndDate, currentPage, pageAmount)\n    }\n  }, [macroStrategy, microStrategy, hearder_columns, tradeStartDate, tradeEndDate, isLoaded])\n\n  const handleSignout = () => {\n    auth.signout()\n    history.push('/login')\n  }\n\n  const selectDateRange = (startDate, endDate) => {\n    setTradeStartDate(startDate)\n    setTradeEndDate(endDate)\n  }\n\n  const loadPriceDetails = async () => {\n    const result = await filterTradesData(macroStrategy ? macroStrategy.value : '',\n    microStrategy ? microStrategy.value : '',\n    tradeStartDate, tradeEndDate, currentPage, pageAmount);\n    setDatatable({\n      columns: hearder_columns,\n      rows: result.trades_data\n    })\n    \n    setWholeRows(result.page_total)\n  }\n\n  const handlePrevClick = () => {\n    setCurrentPage(currentPage - 1)\n    loadPriceDetails(currentPage - 1)\n  }\n\n  const handleNextClick = () => {\n    setCurrentPage(currentPage + 1)\n    loadPriceDetails(currentPage + 1)\n  }\n\n  return (\n    <div className=\"hunter-chart-container\">\n      <div className=\"col-sm-12 hunter-data-table-container\">\n        <div className=\"hunter-data-table-title\">\n          Trade Data Table\n        </div>\n        <div className=\"hunter-search-filter-area\">\n          <div className='date hunter-item-chart hunter-date-time-picker mb-3' id='datetimepicker1'>\n            <MultiRangeSlider\n              selectDateRange={selectDateRange}\n            />\n          </div>\n        </div>\n        <MDBDataTableV5 \n          hover\n          maxHeight=\"500px\"\n          entriesOptions={[10, 25, 50, 100]}\n          entries={10}\n          pagesAmount={4}\n          data={datatable}\n          dark={true}\n          noBottomColumns={true}\n          small={true}\n          striped={true}\n          scrollY={true}\n        />;\n        <Pagination>\n          <Pagination.Item>{(currentPage-1)*10 + 1}</Pagination.Item>\n          <Pagination.Item>{(currentPage) * 10}</Pagination.Item>\n          <Pagination.Item> of </Pagination.Item>\n          <Pagination.Item> { wholeRows } </Pagination.Item>\n          <Pagination.Prev disabled={currentPage <= 0} onClick={() => { handlePrevClick() }}/>\n          <Pagination.Next disabled={(currentPage + 1) >= wholeRows / 10} onClick={() => { handleNextClick() }}/>\n        </Pagination>\n      </div>\n    </div>\n  );\n};\n\nexport default HybridViewTable;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Select from 'react-select'\nimport \"react-datetime/css/react-datetime.css\";\nimport StockChart from \"../stock-chart/StockChart\"\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  NavLink,\n  Nav,\n} from \"reactstrap\";\nimport { useAuth } from 'contexts/authContext';\nimport disableScroll from 'disable-scroll';\nimport HybridViewTable from \"./HybridViewTable\";\nimport { getSymbolsByMicroStrategy, getStrategyListReq } from 'api/Api';\n\nconst HybridViewChartTable = (props) => {\n\n  const auth = useAuth();\n  const { selectedInstance } = props\n  const history = useHistory();\n  const [isLoaded, setIsLoaded] = useState(false)\n  const [symbol, setSymbol] = useState(null);//{ value: 'MSFT', label: 'MSFT' }\n  const [indicators, setIndicators] = useState([]);\n  const [isShowMicro, setIsShowMicro] = useState(true);\n  const [symbolList, setSymbolList] = useState([])\n  const [isGetSymbolList] = useState(false)\n  const [collapseOpen,] = React.useState(false)\n  const [selectedViewType, setSelectedViewType] = useState({ value: 'charting', label: 'Charting' });\n  const [microStrategy, setMicroStrategy] = useState(null);//{ value: '2m', label: '2m' }\n  const [strategy, setStrategy] = useState(null);//{ value: 'heikfilter', label: 'heikfilter' }\n  const [strategyList, setStrategyList] = useState([]);\n  const [user] = useState(JSON.parse(localStorage.getItem('user-info')));\n  const [extendMarketTime, setExtendMarketTime] = useState(\n    {\n      value: 'markettime', label: 'market time',\n    }\n  );\n  \n  const [optionsViewTypes, setOptionsViewTypes] = useState([\n    { value: 'charting', label: 'Charting' },\n    { value: 'performance', label: 'Performance' },\n  ])\n\n  const [optionsMicroStrategy, setOptionsMicroStrategy] = useState([])\n  \n  const [optionsStratgy, setOptionsStrategy] = useState([])\n\n  const [optionsIndicator, setOptionsIndicator] = useState([\n    {\n      value: 'volume', label: 'VOLUME',\n    },\n    {\n      value: 'rsi1', label: 'RSI',\n    },\n    {\n      value: 'rsi2', label: 'RSI2',\n    },\n    {\n      value: 'rsi3', label: 'RSI3',\n    },\n    {\n      value: 'heik', label: 'HEIK1',\n    },\n    {\n      value: 'heik_diff', label: 'HEIK2',\n    }\n  ]);\n  \n  const [optionsMarketTime, setOptionsMarketTime] = useState([\n    {\n      value: 'markettime', label: 'market time',\n    },\n    {\n      value: 'extend_markettime', label: 'extend market time',\n    }\n  ]);\n\n  const getStrategyList = useCallback(\n    async () => {\n      setIsLoaded(false)\n      const strategyListRes = await getStrategyListReq();\n      if (strategyListRes.success) {\n        const data = strategyListRes.data;\n        setStrategyList(data.result);\n        const strategyOptions = data.result.map((o => {\n          return {\n            value: o.macro,\n            label: o.macro,\n          }\n        }))\n        setOptionsStrategy(strategyOptions);\n        setStrategy(strategyOptions[0]);\n        if (data.result.length) {\n          let flag = true\n          let item = data.result[0]\n          if (flag) {\n            const microStrategyOptions = item.micro.map(o => {\n              return {\n                value: o,\n                label: o,\n              }\n            })\n            \n            setOptionsMicroStrategy( microStrategyOptions )\n            setMicroStrategy(microStrategyOptions[0])\n\n            const result = await getSymbolsByMicroStrategy(strategyOptions[0].value, microStrategyOptions[0].value)\n            if (result.success) {\n              const symbolOptions = result.data.map(o => {\n                return {\n                  value: o,\n                  label: o,\n                }\n              })\n              \n              setSymbolList(symbolOptions)\n              setSymbol(symbolOptions[0])\n              setIsLoaded(true)\n            }\n          }\n          flag = false\n        }\n      }\n    },\n    [],\n  )\n\n  const get_tables = useCallback(\n    (strategy) => {\n      const requestOptions = {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          'strategy': strategy\n        })\n      };\n      \n      fetch(process.env.REACT_APP_BACKEND_URL + \"/api/tables\", requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          let temp_data = []\n          data.tables.map((x) => {\n            temp_data.push({\n              value: x,\n              label: x\n            });\n            return null\n          })\n          setSymbolList(temp_data)\n          setSymbol(temp_data[0])\n        })\n    },\n    [],\n  )\n\n  useEffect(() => {\n    disableScroll.on();\n    return () => {\n      disableScroll.off();\n    }\n  }, [user])\n  \n  useEffect(() => {\n    const handleInstanceChange = (value) => {\n      if (value === 'live_trading') {\n        setIsShowMicro(false);\n        setStrategy({ value: 'no_strategy', label: 'No Strategy' });\n        setOptionsStrategy([\n          { value: 'no_strategy', label: 'No Srategy' },\n        ])\n        return\n      }\n      getStrategyList()\n      setIsShowMicro(true);\n    }\n    if (!user.is_admin && !user?.role.length) {\n      return;\n    }\n    handleInstanceChange(selectedInstance)\n    if(selectedInstance === 'live_trading') {\n      get_tables('no_strategy');    \n    }\n    if (selectedInstance === 'optimization') {\n      setOptionsViewTypes([\n        { value: 'optimization ', label: 'Optimization' },\n      ])\n    } else {\n      setOptionsViewTypes([\n        { value: 'charting', label: 'Charting' },\n        { value: 'performance', label: 'Performance' },\n      ])\n    }\n  }, [selectedInstance, user.is_admin, user.role?.length])\n\n  const handleViewTypeChange = (value) => {\n    setSelectedViewType(value)\n    if (value.value === 'performance') {\n      const locationState = {\n        selectedInstance,\n        viewType: value,\n        initStrategy: strategy,\n        initMicroStrategy: { value: '2m', label: '2m' },\n        initIndicators: indicators,\n        initSymbol: symbol,\n      }\n      if (value) {\n        history.push({\n          state: locationState,\n        });\n      }\n    }\n  }\n\n  const handlSymbolChange = (e) => {\n    if (e) {\n      setSymbol(e)\n    }\n  }\n\n  const handleMarketTimeChange = (e) => {\n    if (e) {\n      setExtendMarketTime(e)\n    }\n  }\n\n  const handleStrategy = async (e) => {\n    if (e) {\n      if (strategyList.length) {\n        strategyList.forEach((item) => {\n          if (item.macro === e.value) {\n            const microStrategyOptions = item.micro.map(o => {\n              return {\n                value: o,\n                label: o,\n              }\n            })\n            setOptionsMicroStrategy( microStrategyOptions )\n\n            const is_2m = microStrategyOptions.filter((o => o.value === '2m'))\n\n            setMicroStrategy(microStrategyOptions[0])\n            \n            const symbolOptions = item.symbols.map(o => {\n              return {\n                value: o,\n                label: o,\n              }\n            })\n\n            setSymbolList(symbolOptions)\n            setSymbol(symbolOptions[0])\n          }\n        })\n      }\n      setStrategy(e)\n    }\n  }\n  \n  const handleMicroStrategyChange = (e) => {\n    if (e) {\n      setMicroStrategy(e)\n    }\n  }\n  \n  const handleIndicatorsChange = (options) => {\n    setIndicators(options);\n  }\n\n  const calculateGridColumn = () => {\n    return 12\n  }\n\n  const handleSignout = () => {\n    auth.signout()\n    history.push('/login')\n  }\n\n  const displayChart = () => {\n    return (\n      <div className={`row full-height`}>\n        <div className={`col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\n          {microStrategy && symbol && (\n            < StockChart \n              extendMarketTime={extendMarketTime.value}\n              selectedInstance={selectedInstance}\n              selectedTradeDB='heikfilter-2mins-trades'\n              chartPeriod='20D 2min'\n              symbol={symbol.value}\n              indicators={indicators}\n              strategy={strategy}\n              isHomePage={true}\n              chartColumn={1}\n              microStrategy={microStrategy.value}\n              startDate={null}\n              endDate={null}\n            />\n          )}\n        </div>\n      </div>\n    )\n  }\n  \n  return (\n    <div className=\"hunter-chart-container\">\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark hunter-nav-bar\">\n        <div className=\"logo-title\">\n          <a href=\"/chart\" className=\"hunter-navbar-brand\">\n            Violette AM - Client Portal\n          </a>\n        </div>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/chart\"} className=\"nav-link\"></Link>\n          </li>\n          {/* <div className=\"select-option\">\n            <Select\n              value={extendMarketTime}\n              onChange={handleMarketTimeChange}\n              options={optionsMarketTime}\n              placeholder=\"Market Time\"\n            />\n          </div> */}\n          <div className=\"select-option\">\n            <Select\n              value={strategy}\n              onChange={handleStrategy}\n              options={optionsStratgy}\n              placeholder=\"Macro Strategy\"\n            />\n          </div>\n          {isShowMicro && (\n            <div className=\"select-option\">\n              <Select\n                value={microStrategy}\n                onChange={handleMicroStrategyChange}\n                options={optionsMicroStrategy}\n                placeholder=\"Micro Strategy\"\n              />\n            </div>  \n          )}\n          <div className=\"select-option\">\n            <Select\n              value={symbol}\n              onChange={handlSymbolChange}\n              options={symbolList}\n              placeholder=\"Symbol\"\n            />\n          </div>\n          <div className=\"select-multi-option\">\n            <Select\n              name=\"filters\"\n              placeholder=\"Indicators\"\n              value={indicators}\n              onChange={handleIndicatorsChange}\n              options={optionsIndicator}\n              isMulti={true}\n            />\n          </div>\n        </div>\n        <Collapse navbar isOpen={collapseOpen}>\n            <Nav className=\"ml-auto\" navbar>\n              <UncontrolledDropdown>\n                <DropdownToggle\n                  caret\n                  color=\"default\"\n                  nav\n                  onClick={(e) => e.preventDefault()}\n                >\n                  <div className=\"photo\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/anime3.png\").default}\n                    />\n                  </div>\n                  <p className=\"d-lg-none\">Log out</p>\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                  <DropdownItem divider tag=\"li\" />\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\" onClick={() => {\n                      handleSignout()\n                    }}>Log out</DropdownItem>\n                  </NavLink>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <li className=\"separator d-lg-none\" />\n            </Nav>\n          </Collapse>    \n      </nav>\n      <div className=\"display-flex-j-c\">\n        <div className=\"graphs-container half-width dark\">\n          {displayChart()}\n        </div>\n        <div className=\"half-width dark\">\n          <HybridViewTable\n            symbol={symbol}\n            macroStrategy={strategy}\n            microStrategy={microStrategy}\n            isLoaded={isLoaded}\n          />\n          \n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HybridViewChartTable;","import React from 'react'\nimport {\n  Button\n} from \"reactstrap\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport { routes } from \"routes.js\";\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\nimport HybridViewChartTable from \"components/HybridViewChartTable/HybridViewChartTable\";\n\nconst HybridView = () => {\n  const [isShowSidebar, setShowSidebar] = React.useState(false);\n  const [selectedInstance, setSelectedInstance] = React.useState('hybrid_view');\n  \n  const handleSidebarChange = () => {\n      setShowSidebar(!isShowSidebar);\n  };\n\n  const handleInstanceChange = (instance) => {\n      setSelectedInstance(instance)\n  }\n\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color }) => (\n        <React.Fragment>\n          <div className=\"wrapper hunter-wrapper\">\n          {!isShowSidebar && (\n            <Button\n              className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\n              onClick={handleSidebarChange}\n            >\n              <i className=\"tim-icons icon-align-left-2\"/>\n            </Button>\n          )}\n          {isShowSidebar && (\n            <Sidebar\n              isAdminPage={false}\n              routes={routes}\n              subInstance={'tradedatatable'}\n              selectedInstance={selectedInstance}\n              handleSidebarChange={handleSidebarChange}\n              handleInstanceChange={handleInstanceChange}\n            />\n            )}\n            <div className=\"col-sm-12\">\n              <HybridViewChartTable selectedInstance={selectedInstance} />                \n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </BackgroundColorContext.Consumer>\n    );\n}\n\nexport default HybridView","import React from 'react';\nimport Select from 'react-select';\nimport { useCsvDownload } from 'contexts/CsvDownloadContext';\n\nconst Header = (props) => {\n  const { selectedHeaderNav, setSelectedHeaderNav, symbol, setSymbol, optionsSymbol } = props;\n\n\n  const handleNavClicked = (item) => {\n    setSelectedHeaderNav(item);\n  }\n\n  const handleSymbolChange = (e) => {\n    setSymbol(e);\n  };\n\n  const csvData = useCsvDownload()\n\n  return (\n    <div className=\"container custom-container\">\n      <div className=\"row dashboard-toolbar d-block\">\n        <div className=\"dashboard-toolbar-title d-flex\">\n          <div className=\"financial-dashboard-title\">\n            <span>Dashboard</span>\n          </div>\n          <div className=\"financial-dashboard-toolbar d-flex\">\n            <div className=\"select-option\">\n              <Select\n                value={symbol}\n                onChange={handleSymbolChange}\n                options={optionsSymbol}\n                placeholder=\"Symbol\"\n              />\n            </div>\n            <div className=\"dashboard-navbar\">\n              <ul className=\"nav justify-content-center\">\n                <li\n                  className={`nav-item ${selectedHeaderNav == \"News\" ? \"selected\" : \"\"}`}\n                  onClick={() => handleNavClicked(\"News\")}\n                >\n                  <i className=\"fas fa-inbox\"></i>\n                  <span>News</span>\n                </li>\n                <li\n                  className={`nav-item ${selectedHeaderNav == \"Data Table\" ? \"selected\" : \"\"}`}\n                  onClick={() => handleNavClicked(\"Data Table\")}\n                >\n                  <i className=\"fas fa-image\"></i>\n                  <span>Data Table</span>\n                </li>\n                <li\n                  className={`nav-item ${selectedHeaderNav == \"Chart\" ? \"selected\" : \"\"}`}\n                  onClick={() => handleNavClicked(\"Chart\")}\n                >\n                  <i className=\"fas fa-chart-bar\"></i>\n                  <span>Chart</span>\n                </li>\n                {/* <li\n                  className={`nav-item ${selectedHeaderNav == \"Income Statement\" ? \"selected\" : \"\"}`}\n                  onClick={() => handleNavClicked(\"Income Statement\")}\n                >\n                  <i className=\"fas fa-file-invoice-dollar\"></i>\n                  <span>Income Statement</span>\n                </li>\n                <li\n                  className={`nav-item ${selectedHeaderNav == \"Balance Sheet\" ? \"selected\" : \"\"}`}\n                  onClick={() => handleNavClicked(\"Balance Sheet\")}\n                >\n                  <i className=\"fas fa-money-bill-alt\"></i>\n                  <span>Balance Sheet</span>\n                </li>\n                <li\n                  className={`nav-item ${selectedHeaderNav == \"Cash Flow Statement\" ? \"selected\" : \"\"}`}\n                  onClick={() => handleNavClicked(\"Cash Flow Statement\")}\n                >\n                  <i className=\"fas fa-dollar-sign\"></i>\n                  <span>Cash Flow Statement</span>\n                </li> */}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import { isNotDefined, isDefined } from \"react-stockcharts/lib/utils\";\n\nexport function saveInteractiveNode(chartId) {\n\treturn node => {\n\t\tthis[`node_${chartId}`] = node;\n\t};\n}\n\nexport function handleSelection(type, chartId) {\n\treturn selectionArray => {\n\t\tconst key = `${type}_${chartId}`;\n\t\tconst interactive = this.state[key].map((each, idx) => {\n\t\t\treturn {\n\t\t\t\t...each,\n\t\t\t\tselected: selectionArray[idx]\n\t\t\t};\n\t\t});\n\t\tthis.setState({\n\t\t\t[key]: interactive\n\t\t});\n\t};\n}\n\nexport function saveInteractiveNodes(type, chartId) {\n\treturn node => {\n\t\tif (isNotDefined(this.interactiveNodes)) {\n\t\t\tthis.interactiveNodes = {};\n\t\t}\n\t\tconst key = `${type}_${chartId}`;\n\t\tif (isDefined(node) || isDefined(this.interactiveNodes[key])) {\n\t\t\t// console.error(node, key)\n\t\t\t// console.log(this.interactiveNodes)\n\t\t\tthis.interactiveNodes = {\n\t\t\t\t...this.interactiveNodes,\n\t\t\t\t[key]: { type, chartId, node },\n\t\t\t};\n\t\t}\n\t};\n}\n\nexport function getInteractiveNodes() {\n\treturn this.interactiveNodes;\n}","\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { format } from \"d3-format\";\nimport { timeFormat } from \"d3-time-format\";\nimport dayjs from \"dayjs\";\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\nimport {\n\tBarSeries,\n\tCandlestickSeries,\n\tLineSeries,\n\tMACDSeries,\n} from \"react-stockcharts/lib/series\";\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\nimport {\n\tCrossHairCursor,\n\tEdgeIndicator,\n\tCurrentCoordinate,\n\tMouseCoordinateX,\n\tMouseCoordinateY,\n} from \"react-stockcharts/lib/coordinates\";\n\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\nimport {\n\tOHLCTooltip,\n\tMovingAverageTooltip,\n\tMACDTooltip,\n} from \"react-stockcharts/lib/tooltip\";\nimport { ema, macd } from \"react-stockcharts/lib/indicator\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\nimport { EquidistantChannel, DrawingObjectSelector } from \"react-stockcharts/lib/interactive\";\nimport { last, toObject } from \"react-stockcharts/lib/utils\";\nimport {\n\tsaveInteractiveNodes,\n\tgetInteractiveNodes,\n} from \"./interactiveutils\";\n\nconst macdAppearance = {\n\tstroke: {\n\t\tmacd: \"#FF0000\",\n\t\tsignal: \"#00F300\",\n\t},\n\tfill: {\n\t\tdivergence: \"#4682B4\"\n\t},\n};\n\nclass CandleStickChartWithEquidistantChannel extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.onKeyPress = this.onKeyPress.bind(this);\n\t\tthis.onDrawComplete = this.onDrawComplete.bind(this);\n\t\tthis.saveInteractiveNode = this.saveInteractiveNode.bind(this);\n\t\tthis.saveCanvasNode = this.saveCanvasNode.bind(this);\n\t\tthis.handleSelection = this.handleSelection.bind(this);\n\n\t\tthis.saveInteractiveNodes = saveInteractiveNodes.bind(this);\n\t\tthis.getInteractiveNodes = getInteractiveNodes.bind(this);\n\n\t\tthis.state = {\n\t\t\tenableInteractiveObject: true,\n\t\t\tchannels_1: [],\n\t\t\tchannels_3: [],\n\t\t};\n\t}\n\tsaveInteractiveNode(node) {\n\t\tthis.node = node;\n\t}\n\tsaveCanvasNode(node) {\n\t\tthis.canvasNode = node;\n\t}\n\tcomponentDidMount() {\n\t\tdocument.addEventListener(\"keyup\", this.onKeyPress);\n\t}\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener(\"keyup\", this.onKeyPress);\n\t}\n\thandleSelection(interactives) {\n\t\tconst state = toObject(interactives, each => {\n\t\t\treturn [\n\t\t\t\t`channels_${each.chartId}`,\n\t\t\t\teach.objects,\n\t\t\t];\n\t\t});\n\t\tthis.setState(state);\n\t}\n\tonDrawComplete(channels_1) {\n\t\t// this gets called on\n\t\t// 1. draw complete of drawing object\n\t\t// 2. drag complete of drawing object\n\t\tthis.setState({\n\t\t\tenableInteractiveObject: false,\n\t\t\tchannels_1\n\t\t});\n\t}\n\tonKeyPress(e) {\n\t\tconst keyCode = e.which;\n\t\tconsole.log(keyCode);\n\t\tswitch (keyCode) {\n\t\tcase 46: { // DEL\n\n\t\t\tconst channels_1 = this.state.channels_1\n\t\t\t\t.filter(each => !each.selected);\n\t\t\tconst channels_3 = this.state.channels_3\n\t\t\t\t.filter(each => !each.selected);\n\n\t\t\tthis.canvasNode.cancelDrag();\n\t\t\tthis.setState({\n\t\t\t\tchannels_1,\n\t\t\t\tchannels_3,\n\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t\tcase 27: { // ESC\n\t\t\tthis.node.terminate();\n\t\t\tthis.canvasNode.cancelDrag();\n\n\t\t\tthis.setState({\n\t\t\t\tenableInteractiveObject: false\n\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t\tcase 68:   // D - Draw drawing object\n\t\tcase 69: { // E - Enable drawing object\n\t\t\tthis.setState({\n\t\t\t\tenableInteractiveObject: true\n\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t\t}\n\t}\n\trender() {\n\t\tconst ema26 = ema()\n\t\t\t.id(0)\n\t\t\t.options({ windowSize: 26 })\n\t\t\t.merge((d, c) => { d.ema26 = c; })\n\t\t\t.accessor(d => d.ema26);\n\n\t\tconst ema12 = ema()\n\t\t\t.id(1)\n\t\t\t.options({ windowSize: 12 })\n\t\t\t.merge((d, c) => {d.ema12 = c;})\n\t\t\t.accessor(d => d.ema12);\n\n\t\tconst macdCalculator = macd()\n\t\t\t.options({\n\t\t\t\tfast: 12,\n\t\t\t\tslow: 26,\n\t\t\t\tsignal: 9,\n\t\t\t})\n\t\t\t.merge((d, c) => {d.macd = c;})\n\t\t\t.accessor(d => d.macd);\n\n\t\tconst { type, data: initialData, width, ratio } = this.props;\n    initialData.dataPoints.forEach(line => {\n\t\t\tline.date = dayjs(line.calendarDate).toDate();\n\t\t});\n\t\tconst { channels_1, channels_3 } = this.state;\n\n\t\tconst calculatedData = macdCalculator(ema12(ema26(initialData.dataPoints)));\n\t\tconst xScaleProvider = discontinuousTimeScaleProvider\n\t\t\t.inputDateAccessor(d => d.date);\n\t\tconst {\n\t\t\tdata,\n\t\t\txScale,\n\t\t\txAccessor,\n\t\t\tdisplayXAccessor,\n\t\t} = xScaleProvider(calculatedData);\n\n\t\tconst start = xAccessor(last(data));\n\t\tconst end = xAccessor(data[Math.max(0, data.length - 150)]);\n\t\tconst xExtents = [start, end];\n\n\t\treturn (\n\t\t\t<ChartCanvas ref={this.saveCanvasNode}\n\t\t\t\theight={380}\n\t\t\t\twidth={width}\n\t\t\t\tratio={ratio}\n\t\t\t\tmargin={{ left: 70, right: 70, top: 20, bottom: 30 }}\n\t\t\t\ttype={type}\n\t\t\t\tseriesName=\"MSFT\"\n\t\t\t\tdata={data}\n\t\t\t\txScale={xScale}\n\t\t\t\txAccessor={xAccessor}\n\t\t\t\tdisplayXAccessor={displayXAccessor}\n\t\t\t\txExtents={xExtents}\n\t\t\t>\n\t\t\t\t\n\t\t\t\t<Chart id={3} height={250}\n\t\t\t\t\tyExtents={[d => d.value]}\n\t\t\t\t\torigin={(w, h) => [0, h - 300]}\n\t\t\t\t>\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" ticks={5} tickFormat={format(\".2s\")}/>\n\n          <MouseCoordinateX\n\t\t\t\t\t\tat=\"bottom\"\n\t\t\t\t\t\torient=\"bottom\"\n\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"left\"\n\t\t\t\t\t\torient=\"left\"\n\t\t\t\t\t\tdisplayFormat={format(\".4s\")} />\n\n\t\t\t\t\t<BarSeries yAccessor={d => d.value} fill={d => initialData.color} baseAt={(xScale, yScale, d) => yScale(0)} />\n\t\t\t\t</Chart>\n\t\t\t\t<CrossHairCursor />\n\t\t\t\t<DrawingObjectSelector\n\t\t\t\t\tenabled={!this.state.enableInteractiveObject}\n\t\t\t\t\tgetInteractiveNodes={this.getInteractiveNodes}\n\t\t\t\t\tdrawingObjectMap={{\n\t\t\t\t\t\tEquidistantChannel: \"channels\"\n\t\t\t\t\t}}\n\t\t\t\t\tonSelect={this.handleSelection}\n\t\t\t\t/>\n\t\t\t</ChartCanvas>\n\t\t);\n\t}\n}\n\nCandleStickChartWithEquidistantChannel.propTypes = {\n\tdata: PropTypes.array.isRequired,\n\twidth: PropTypes.number.isRequired,\n\tratio: PropTypes.number.isRequired,\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\n};\n\nCandleStickChartWithEquidistantChannel.defaultProps = {\n\ttype: \"svg\",\n};\n\nCandleStickChartWithEquidistantChannel = fitWidth(CandleStickChartWithEquidistantChannel);\n\nexport default CandleStickChartWithEquidistantChannel;\n","import React from 'react';\n\nconst ChartTools = (props) => {\n  const {\n    aggregationTypeForOne,\n    setAggregrationTypeForOne,\n    color,\n  } = props;\n  \n  const handleAggregationForOneClicked = (aggregationType) => {\n    if (aggregationTypeForOne === aggregationType) {\n      setAggregrationTypeForOne(\"\");\n    } else {\n      setAggregrationTypeForOne(aggregationType);\n    }\n  }\n\n  return (\n    <div className=\"dashboard-chart-tool\">\n      <ul className=\"nav justify-content-center\">\n        <li\n          className=\"nav-item\"\n          style={aggregationTypeForOne === \"YA\" ? { backgroundColor: color, color: \"white\" } : {}}\n          onClick={() => handleAggregationForOneClicked(\"YA\")}\n        >\n          <span>A</span>\n        </li>\n        <li\n          className=\"nav-item\"\n          style={aggregationTypeForOne === \"QA\" ? { backgroundColor: color, color: \"white\" } : {}}\n          onClick={() => handleAggregationForOneClicked(\"QA\")}\n        >\n          <span>Q</span>\n        </li>\n        <li\n          className=\"nav-item\"\n          style={aggregationTypeForOne === \"TA\" ? { backgroundColor: color, color: \"white\" } : {}}\n          onClick={() => handleAggregationForOneClicked(\"TA\")}\n        >\n          <span>T</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default ChartTools;\n","import React, { useState, useEffect } from 'react';\nimport Chart from './Chart';\nimport ChartTools from '../ChartTools';\n\nconst GroupBarChart = (props) => {\n  const { data, chartData, globalAggregationType } = props;\n\n  const [aggregationTypeForOne, setAggregrationTypeForOne] = useState();\n  const [currentData, setCurrentData] = useState();\n\n  const labels = [\n    [\n      'Revenue',\n      'Cost of Revenue',\n      'Gross Profit',\n      'Ebit',\n      'Net Income',\n      'Earnings per Basic Share',\n    ],\n    [\n      'Total Assets',\n      'Total Liabilities',\n      'Total Debt [USD]',\n      'Receivables',\n      'Payables',\n      'Cash & Cash Equivalents [USD]',\n    ],\n    [\n      'Net Cash Flow from Operations',\n      'Net Cash Flow from Investing',\n      'Net Cash Flow from Financing',\n      'Issue/Repayment of Debt Securities',\n      'Issuance/Purchase of Equity Shares',\n      'Payment of Dividends & Other Cash Distributions',\n    ],\n  ];\n\n  const filterByAggregationTyoe = (selectedData) => {\n    if (selectedData) {\n      let filteredData = {...selectedData};\n      const dataPoints = filteredData.dataPoints.filter(\n        (item) => aggregationTypeForOne === \"\" || item.period === aggregationTypeForOne\n      );\n      filteredData['dataPoints'] = dataPoints;\n      return filteredData;\n    }\n    return selectedData;\n  };\n\n  const handleDataTypeChanged = (e) => {\n    const selectedData = chartData.filter(\n      (item) => item.label === e.target.value\n    );\n    const filteredSelectedData = filterByAggregationTyoe(selectedData[0]);\n    setCurrentData(filteredSelectedData);\n  };\n\n  useEffect(() => {\n    setAggregrationTypeForOne(globalAggregationType);\n    const filteredSelectedData = filterByAggregationTyoe(data);\n    setCurrentData(filteredSelectedData);\n  }, [globalAggregationType]);\n\n  useEffect(() => {\n    const filteredSelectedData = filterByAggregationTyoe(data);\n    setCurrentData(filteredSelectedData);\n  }, [aggregationTypeForOne]);\n\n  return (\n    <>\n      {currentData && (\n        <>\n          <div className=\"chart-toolbar\">\n            <div className=\"chart-toolbar-select\">\n              <select\n                className=\"browser-default custom-select\"\n                style={{ borderColor: currentData.color, boxShadow: 'unset' }}\n                onChange={handleDataTypeChanged}\n              >\n                {labels[currentData.group].map((item, index) => (\n                  <option\n                    key={index}\n                    val={item}\n                    selected={item === currentData.label ? true : false}\n                  >\n                    {item}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <ChartTools\n              aggregationTypeForOne={aggregationTypeForOne}\n              setAggregrationTypeForOne={setAggregrationTypeForOne}\n              color={currentData.color}\n            />\n          </div>\n          <div className=\"chart-title-area\">\n            <div style={{ backgroundColor: currentData.color }}></div>\n            <span>{currentData.label}</span>\n          </div>\n          {currentData.dataPoints.length > 0 ? (\n            <Chart type={'svg'} data={currentData} />\n          ) : (\n            <div className=\"no-data\">No data...</div>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default GroupBarChart;\n","import React from 'react';\n\nconst GraphTypes = (props) => {\n  const {\n    selectedAggregationType,\n    setSelectedAggregationType,\n  } = props;\n\n  const handleAggregationTypeClicked = (aggregationType) => {\n    if (selectedAggregationType === aggregationType) {\n      setSelectedAggregationType('');\n    } else {\n      setSelectedAggregationType(aggregationType);\n    }\n  }\n\n  return (\n    <div className=\"dashboard-graph-types\">\n      <ul className=\"nav justify-content-center\">\n        <li\n          className={`nav-item ${selectedAggregationType === \"YA\" ? \"selected\" : \"\"}`}\n          onClick={() => handleAggregationTypeClicked(\"YA\")}\n        >\n          <span>ANN</span>\n        </li>\n        <li\n          className={`nav-item ${selectedAggregationType === \"QA\" ? \"selected\" : \"\"}`}\n          onClick={() => handleAggregationTypeClicked(\"QA\")}\n        >\n          <span>QTR</span>\n        </li>\n        <li\n          className={`nav-item ${selectedAggregationType === \"TA\" ? \"selected\" : \"\"}`}\n          onClick={() => handleAggregationTypeClicked(\"TA\")}\n        >\n          <span>TTM</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default GraphTypes;\n","import React from 'react';\n\nconst StockTypes = (props) => {\n  const {\n    selectedStockType,\n    setSelectedStockType,\n    selectedHeaderNav,\n  } = props;\n\n  const handleStockTypeClicked = (stockType) => {\n    if (selectedHeaderNav === 'Chart') {\n      setSelectedStockType(stockType);\n    } else {\n      if (selectedStockType === stockType) {\n        setSelectedStockType('');\n      } else {\n        setSelectedStockType(stockType);\n      }\n    }\n  }\n\n  return (\n    <div className=\"dashboard-graph-types\">\n      <ul className=\"nav justify-content-center\">\n        <li\n          className={`nav-item ${selectedStockType === \"Income Statement\" ? \"selected\" : \"\"}`}\n          onClick={() => handleStockTypeClicked(\"Income Statement\")}\n        >\n          <span>Income Statement</span>\n        </li>\n        <li\n          className={`nav-item ${selectedStockType === \"Balance Sheet\" ? \"selected\" : \"\"}`}\n          onClick={() => handleStockTypeClicked(\"Balance Sheet\")}\n        >\n          <span>Balance Sheet</span>\n        </li>\n        <li\n          className={`nav-item ${selectedStockType === \"Cash Flow Statement\" ? \"selected\" : \"\"}`}\n          onClick={() => handleStockTypeClicked(\"Cash Flow Statement\")}\n        >\n          <span>Cash Flow Statement</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default StockTypes;\n","import React, { useState, useEffect } from 'react';\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport { useCsvDownloadUpdate } from 'contexts/CsvDownloadContext';\nimport { useDatatableLoading, useDatatable } from \"contexts/DatatableContext\";\nimport Spinner from \"components/Spinner\"\n\nconst FinancialDataTable = (props) => {\n  const { data, selectedStockType, selectedAggregationType } = props;\n\n  const [datatable, setDatatable] = useState();\n  const [sorted, setSorted] = useState(0);\n\n  const [isLoadingData, setLoadingData] = useDatatableLoading()\n  const updateCsvDownload = useCsvDownloadUpdate();\n\n  const wrapSetDatatable = (data) => {\n    setDatatable(data)\n    updateCsvDownload([...data.rows[0]])\n  }\n\n  const handleSortClicked = (label) => {\n    const sort = sorted === 0 || sorted === 2 ? 1 : 2;\n    let rows = datatable.rows;\n    for (let i = 0; i < rows.length; i++) {\n      if (sort === 1) {\n        rows[i].sort(function (a, b) {\n          let valueA = a[label];\n          let valueB = b[label];\n          if (typeof a[label] != 'string') {\n            valueA = valueA.toString();\n          }\n          if (typeof b[label] != 'string') {\n            valueB = valueB.toString();\n          }\n          return valueB.localeCompare(valueA);\n        });\n      } else if (sort === 2) {\n        rows[i].sort(function (a, b) {\n          let valueA = a[label];\n          let valueB = b[label];\n          if (typeof a[label] != 'string') {\n            valueA = valueA.toString();\n          }\n          if (typeof b[label] != 'string') {\n            valueB = valueB.toString();\n          }\n          return valueA.localeCompare(valueB);\n        });\n      }\n    }\n    setSorted(sort);\n    wrapSetDatatable({\n      columns: datatable.columns,\n      rows,\n    });\n  };\n\n\n\n  useEffect(() => {\n    if (data) {\n      let columns = [\n        {\n          label: 'BreakDown',\n          field: 'BreakDown',\n        },\n        {\n          label: 'TTM',\n          field: 'TTM',\n        },\n      ];\n      let rows = [];\n      data.map((item) => {\n        if (selectedAggregationType === '' || selectedAggregationType === item.period) {\n          const calendarDateKey = item['calendarDate'];\n          if (!columns.includes(calendarDateKey)) {\n            columns.push({\n              label: calendarDateKey,\n              field: calendarDateKey,\n            });\n          }\n\n          const keys = Object.keys(item);\n          keys.map((key, index) => {\n            if (!(index in rows)) {\n              rows[index] = {};\n            }\n            rows[index]['BreakDown'] = key;\n            rows[index]['TTM'] = '1000000';\n            rows[index][calendarDateKey] = item[key];\n          });\n        }\n      });\n\n      if (selectedStockType === '') {\n        rows = [rows, rows, rows];\n      } else {\n        rows = [rows];\n      }\n      wrapSetDatatable({\n        columns,\n        rows,\n      });\n    }\n  }, [data, selectedAggregationType, selectedStockType]);\n\n  const formatNumber = (num) => {\n    let number = parseInt(num)\n    if (number > 0) {\n      if ( number / 1000 < 999 ) {\n        return `${number / 1000} Th`\n      } else if ( number / 1000000 < 999 ) {\n        return `${number / 1000000} M`\n      } else if ( number / 1000000000 < 999 ) {\n        return `${number / 1000000000} B`\n      } else if ( number / 1000000000000 < 999 ) {\n        return `${number / 1000000000000} Tr`\n      } else if ( number / 1000000000000000 < 999 ) {\n        return `${number / 1000000000000000} Q`\n      }\n    } else if (number < 0) {\n      number = -number;\n      if ( number < 1000 ) {\n        return `-${number}`\n      }\n      else if ( number / 1000 < 999 ) {\n        return `-${number / 1000} Th`\n      } else if ( number / 1000000 < 999 ) {\n        return `-${number / 1000000} M`\n      } else if ( number / 1000000000 < 999 ) {\n        return `-${number / 1000000000} B`\n      } else if ( number / 1000000000000 < 999 ) {\n        return `-${number / 1000000000000} Tr`\n      } else if ( number / 1000000000000000 < 999 ) {\n        return `-${number / 1000000000000000} Q`\n      }\n    }\n\n    return number\n  }\n\n  const formatData = (rows) => {\n    const newRows = []\n    rows.map((row) => {\n      let newObject = {}\n      Object.keys(row).map(key => {\n        if ((key === 'TTM') || (typeof(row[key]) !== 'string') && parseInt(row[key]) !== NaN) {\n          newObject[key] = formatNumber(row[key])\n        } else {\n          newObject[key] = row[key]\n        }\n      })\n      newRows.push(newObject)\n    })\n    return newRows\n  }\n\n  return (\n    <div className=\"hunter-chart-container\">\n      <div className=\"col-sm-12 hunter-data-table-container financial-data-table\">\n        {isLoadingData && <div className=\"hunter-spinner-area\"><span className=\"mr-30\">Loading ...</span>    <Spinner>Loading</Spinner></div>}\n        {!isLoadingData && datatable && (\n          <MDBTable\n            hover\n            dark={true}\n            maxHeight=\"80vh\"\n            noBottomColumns={true}\n            striped={true}\n            scrollX={true}\n            scrollY={true}\n            paging={false}\n          >\n            <MDBTableHead class={'financial-table-head'}>\n              <tr>\n                {datatable.columns.map((item) => (\n                  <th\n                    key={item.label}\n                    onClick={() => handleSortClicked(item.label)}\n                  >\n                    {item.label}{' '}\n                    <span>\n                      <i className=\"fa fa-sort\" />\n                    </span>\n                  </th>\n                ))}\n              </tr>\n            </MDBTableHead>\n            {datatable.rows.length === 3 ? (\n              <>\n                <MDBTableBody\n                  class={'financial-table-body-1'}\n                  rows={datatable.rows[0]}\n                />\n                <MDBTableBody\n                  rows={datatable.rows[1]}\n                  class=\"financial-table-body-2\"\n                />\n                <MDBTableBody\n                  rows={datatable.rows[2]}\n                  class=\"financial-table-body-3\"\n                />\n              </>\n            ) : (\n              <MDBTableBody\n                rows={formatData(datatable.rows[0])}\n                class={\n                  selectedStockType === 'Income Statement'\n                    ? 'financial-table-body-1'\n                    : selectedStockType === 'Balance Sheet'\n                    ? 'financial-table-body-2'\n                    : 'financial-table-body-3'\n                }\n              />\n            )}\n          </MDBTable>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FinancialDataTable;\n","import React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport Pagination from 'react-bootstrap/Pagination'\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport { Collapse, CardBody, Card } from 'reactstrap';\nimport moment from 'moment'\n\nconst FinancialStatementsDataTable = (props) => {\n  const [currentPage, setCurrentPage] = useState(0);\n  const [wholeRows, setWholeRows] = useState(0);\n  const [currentData, setCurrentData] = useState({\n    columns: [\n      {\n        label: 'Id',\n        field: 'id',\n        width: 100,\n      },\n      {\n        label: 'Time',\n        field: 'time',\n        width: 300,\n      },\n      {\n        label: 'Title',\n        field: 'title',\n        width: 300,\n      }\n    ],\n    rows: [],\n  });\n  const { data } = props;\n  const [selectedRow, setSelectedRow] = useState('no select');\n  const [isOpened, setIsOpened] = useState(false);\n\n  const [symbol, setSymbol] = useState({ value: 'GOOG', label: 'GOOG' });\n  const [optionsSymbol, setOptionsSymbol] = useState([]);\n  // const [datatable, setDatatable] = useState();\n  const columns = data.columns.map((item, index) => {\n    if (index === 0) {\n      return {\n        label: item,\n        field: item,\n        width: 100,\n      };  \n    } else if (index === 1){\n      return {\n        label: item,\n        field: item,\n        width: 300,\n      };\n    } else {\n      return {\n        label: item,\n        field: item,\n      };\n    }\n  });\n\n  useEffect(() => {\n    if (data.rows.length) {\n      setWholeRows(data.rows.length)\n      const realData = data.rows.slice(currentPage * 10, 10);\n      setCurrentData({\n        columns: columns,\n        rows: realData.map((row, index) => {\n          return {\n            author: row.author,\n            amp_url: row.amp_url,\n            article_url: row.article_url,\n            published_utc: row.published_utc,\n            dataId: row.id,\n            description: row.description,\n            id: index,\n            time: moment(row.published_utc).format(\"YYYY-MM-DD h:mm:ss\"),\n            title: row.title,\n            publisher: row.publisher,\n          }\n        })\n      })\n    }\n\n  }, [data]);\n\n  const handlePrevClick = () => {\n    const realData = data.rows.slice((currentPage - 1) * 10, (currentPage) * 10);\n    setCurrentData({\n      columns: columns,\n      rows: realData.map((row, index) => {\n        return {\n          author: row.author,\n          amp_url: row.amp_url,\n          article_url: row.article_url,\n          published_utc: row.published_utc,\n          dataId: row.id,\n          description: row.description,\n          id: (currentPage-1) * 10 + index,\n          time: moment(row.published_utc).format(\"YYYY-MM-DD h:mm:ss\"),\n          title: row.title,\n          publisher: row.publisher,\n        }\n      })\n    })  \n    \n    setCurrentPage(currentPage - 1)\n  }\n  \n  const handleNextClick = () => {\n    const realData = data.rows.slice((currentPage + 1) * 10, (currentPage + 2) * 10);\n    setCurrentData({\n      columns: columns,\n      rows: realData.map((row, index) => {\n        return {\n          author: row.author,\n          amp_url: row.amp_url,\n          article_url: row.article_url,\n          published_utc: row.published_utc,\n          dataId: row.id,\n          description: row.description,\n          id: (currentPage+1) * 10 + index,\n          time: moment(row.published_utc).format(\"YYYY-MM-DD h:mm:ss\"),\n          title: row.title,\n          publisher: row.publisher,\n        }\n      })\n    })\n    setCurrentPage(currentPage + 1)\n  }\n\n  const handleRowSelect = (dataId) => {\n      setIsOpened(!isOpened)\n      setSelectedRow(dataId)\n  }\n\n  return (\n    <div className=\"hunter-chart-container\">\n      <div className=\"col-sm-12 hunter-data-table-container financial-data-table mt-30 pt-100\">\n        {/* <div className=\"hunter-search-filter-area\">\n          <div className=\"select-option\">\n            <Select\n              value={symbol}\n              onChange={handleSymbolChange}\n              options={optionsSymbol}\n              placeholder=\"Symbol\"\n            />\n          </div>\n        </div> */}\n        {currentData && (\n          <MDBTable\n            hover\n            dark={true}\n            maxHeight='80vh'\n            noBottomColumns={true}\n            striped={true}\n            scrollX={true}\n            scrollY={true}\n            pagination\n          >\n            <MDBTableHead\n              class={\"financial-table-head\"}\n            >\n              <tr>\n                {currentData.columns.map((item) => (\n                  <th key={item.label}>{item.label}</th>\n                ))}\n              </tr>\n            </MDBTableHead>\n            <MDBTableBody\n              className={\"financial-table-body-1\"}\n            >\n              {currentData.rows.map((item) => (\n                <tr onClick={() => {\n                  handleRowSelect(item.dataId)\n                }}>\n                  <td key={item.id} className=\"hunter-financial-table-column1\">{item.id}</td>\n                  <td key={item.time} className=\"hunter-financial-table-column2\">{item.time}</td>\n                  <td key={item.title} className=\"hunter-financial-table-column3\">\n                    <p>{item.title}</p>\n                    <Collapse isOpen={isOpened === false && item.dataId === selectedRow}>\n                      <Card>\n                        <CardBody className=\"hunter-card-body\">\n                        <div className=\"hunter-data-table-details-area\">\n                          <div className=\"hunter-data-table-details-area-title\">\n                            {moment(item.date).format(\"YYYY-MM-DD h:mm:ss\")} : {item.title}\n                          </div>\n                          <div className=\"hunter-data-table-details-area-content\">\n                            <p>{item.description}</p>\n                            <div className=\"hunter-data-table-details-area-row\"><div className=\"hunter-data-table-details-area-key\">author:</div> {item.author}</div>\n                            <div className=\"hunter-data-table-details-area-row\"><div className=\"hunter-data-table-details-area-key\">publisher:</div> {item.publisher.name}</div>\n                            <div className=\"hunter-data-table-details-area-row\"><div className=\"hunter-data-table-details-area-key\">published_utc:</div> {item.published_utc}</div>\n                            <div className=\"hunter-data-table-details-area-row\"><div className=\"hunter-data-table-details-area-key\">amp_url:</div> {item.amp_url}</div>\n                            <div className=\"hunter-data-table-details-area-row\"><div className=\"hunter-data-table-details-area-key\">article_url:</div> {item.article_url}</div>\n                          </div>\n                        </div>\n                        </CardBody>\n                      </Card>\n                    </Collapse>\n                  </td>\n                </tr>\n              ))}\n            </MDBTableBody>\n          </MDBTable>\n        )}\n        <Pagination>\n          <Pagination.Item>{currentPage*10}</Pagination.Item>\n          <Pagination.Item>{(currentPage) * 10 + 9}</Pagination.Item>\n          <Pagination.Item> of </Pagination.Item>\n          <Pagination.Item> { wholeRows } </Pagination.Item>\n          <Pagination.Prev disabled={currentPage <= 0} onClick={() => { handlePrevClick() }}/>\n          <Pagination.Next disabled={(currentPage + 1) >= wholeRows / 10} onClick={() => { handleNextClick() }}/>\n        </Pagination>\n      </div>\n    </div>\n  );\n};\n\nexport default FinancialStatementsDataTable;","import React, { useState, useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\n// javascript plugin used to create scrollbars on windows\nimport disableScroll from 'disable-scroll';\nimport '../../assets/css/financialDashboardStyles.css';\n\nimport { Button } from 'reactstrap';\nimport { routes } from 'routes.js';\n\nimport Sidebar from 'components/Sidebar/Sidebar.js';\nimport Header from 'components/FinancialDashboard/Header';\nimport BarChart from 'components/FinancialDashboard/BarChart';\nimport GraphTypes from 'components/FinancialDashboard/GraphTypes';\nimport StockTypes from 'components/FinancialDashboard/StockTypes';\nimport FinancialDataTable from 'components/FinancialDashboard/FinancialDataTable';\nimport FinancialStatementsDataTable from 'components/FinancialDashboard/FinancialStatementsDataTable';\n\nimport { CsvDownloadProvider } from 'contexts/CsvDownloadContext';\nimport ButtonCsvDownload from 'components/ButtonCsvDownload'\n\nimport { getNewsFinancialData } from 'api/Api';\nimport { useDatatableLoading, useDatatable } from \"contexts/DatatableContext\";\nimport Spinner from 'components/Spinner'\n\nimport {\n  getAllSymbols,\n  getIncomeStatement,\n  getBalanceSheet,\n  getCashStatement,\n  getFinancialTotalData,\n} from 'api/Api';\n\nconst FinancialDashboard = () => {\n  const [symbol, setSymbol] = useState({ value: 'AAPL', label: 'AAPL' });\n  const [optionsSymbol, setOptionsSymbol] = useState([]);\n  const [isShowSidebar, setShowSidebar] = useState(false);\n  const [selectedInstance, setSelectedInstance] = useState('financial_data');\n  const [selectedHeaderNav, setSelectedHeaderNav] = useState('Chart');\n  const [selectedAggregationType, setSelectedAggregationType] = useState('QA');\n  const [selectedStockType, setSelectedStockType] =\n    useState('Income Statement');\n\n  const [isLoadingData, setLoadingData] = useDatatableLoading()\n\n  const [chartData, setChartData] = useState(null);\n  const [datatable, setDataTable] = useState();\n  const [isLoading, setIsLoading] = useState(0);\n\n  const handleSidebarChange = () => {\n    setShowSidebar(!isShowSidebar);\n  };\n\n  const handleInstanceChange = (instance) => {\n    setSelectedInstance(instance);\n  };\n\n  const [financialStatements, setFinancialStatements] = useState({\n    columns: ['id', 'time', 'title'],\n    rows: [],\n  });\n\n  const sortDataPointsByDate = (data) => {\n    let sortedData = { ...data };\n    if (sortedData.dataPoints.length > 0) {\n      sortedData.dataPoints.sort(function (a, b) {\n        let valueA = a['calendarDate'];\n        let valueB = b['calendarDate'];\n        if (typeof a['calendarDate'] != 'string') {\n          valueA = valueA.toString();\n        }\n        if (typeof b['calendarDate'] != 'string') {\n          valueB = valueB.toString();\n        }\n        return valueA.localeCompare(valueB);\n      });\n    }\n    return sortedData;\n  };\n\n  useEffect(() => {\n    setLoadingData(true)\n    disableScroll.on();\n    const getSymbols = async () => {\n      const res = await getAllSymbols();\n      setOptionsSymbol(res);\n    };\n    getSymbols();\n    setLoadingData(false)\n\n    return () => {\n      disableScroll.off();\n    };\n  }, []);\n\n  useEffect(() => {\n    setIsLoading(1);\n    setChartData();\n    setLoadingData(true)\n    const getNewsFinancials = async () => {\n      setLoadingData(true)\n      const res = await getNewsFinancialData(symbol.value);\n      setFinancialStatements({\n        columns: ['id', 'time', 'title'],\n        rows: res.results,\n      });\n      setLoadingData(false)\n    };\n\n    const getTotalData = async () => {\n      setLoadingData(true)\n      const res = await getFinancialTotalData(symbol.value);\n      setDataTable(res.results);\n      setIsLoading(2);\n      setLoadingData(false)\n    };\n\n    const getIncomeForDataTable = async () => {\n      setLoadingData(true)\n      const res = await getFinancialTotalData(symbol.value);\n      setDataTable(res.results);\n      setIsLoading(2);\n      setLoadingData(false)\n    };\n\n    const getBalanceForDataTable = async () => {\n      setLoadingData(true)\n      const res = await getFinancialTotalData(symbol.value);\n      setDataTable(res.results);\n      setIsLoading(2);\n      setLoadingData(false)\n    };\n\n    const getCashForDataTable = async () => {\n      setLoadingData(true)\n      const res = await getFinancialTotalData(symbol.value);\n      setDataTable(res.results);\n      setIsLoading(2);\n      setLoadingData(false)\n    };\n\n    const getIncome = async () => {\n      setLoadingData(true)\n      const res = await getIncomeStatement(symbol.value);\n      let revenus = {\n        label: 'Revenue',\n        group: 0,\n        color: 'rgb(25, 185, 154)',\n        dataPoints: [],\n      };\n      let costOfRevenue = {\n        label: 'Cost of Revenue',\n        group: 0,\n        color: 'rgb(8, 64, 129)',\n        dataPoints: [],\n      };\n      let grossProfit = {\n        label: 'Gross Profit',\n        group: 0,\n        color: 'rgb(127, 0, 0)',\n        dataPoints: [],\n      };\n      let EBITDAMargin = {\n        label: 'Ebit',\n        group: 0,\n        color: 'rgb(89, 201, 108)',\n        dataPoints: [],\n      };\n      let NetIncome = {\n        label: 'Net Income',\n        group: 0,\n        color: 'rgb(75, 87, 74)',\n        dataPoints: [],\n      };\n      let earningsPerBasicShare = {\n        label: 'Earnings per Basic Share',\n        group: 0,\n        color: 'rgb(226, 71, 130)',\n        dataPoints: [],\n      };\n      if (res && res.results) {\n        res.results.map((item) => {\n          revenus.dataPoints.push({\n            calendarDate: item.calendarDate,\n            period: item.period,\n            value: item.revenues,\n          });\n          costOfRevenue.dataPoints.push({\n            calendarDate: item.calendarDate,\n            period: item.period,\n            value: item.costOfRevenue,\n          });\n          grossProfit.dataPoints.push({\n            calendarDate: item.calendarDate,\n            period: item.period,\n            value: item.grossProfit,\n          });\n          EBITDAMargin.dataPoints.push({\n            calendarDate: item.calendarDate,\n            period: item.period,\n            value: item.EBITDAMargin,\n          });\n          NetIncome.dataPoints.push({\n            calendarDate: item.calendarDate,\n            period: item.period,\n            value: item.netIncome,\n          });\n          earningsPerBasicShare.dataPoints.push({\n            calendarDate: item.calendarDate,\n            period: item.period,\n            value: item.earningsPerBasicShare,\n          });\n        });\n      }\n      setChartData([\n        sortDataPointsByDate(revenus),\n        sortDataPointsByDate(costOfRevenue),\n        sortDataPointsByDate(grossProfit),\n        sortDataPointsByDate(EBITDAMargin),\n        sortDataPointsByDate(NetIncome),\n        sortDataPointsByDate(earningsPerBasicShare),\n      ]);\n      setIsLoading(2);\n      setLoadingData(false)\n    };\n\n    const getBalance = async () => {\n      setLoadingData(true)\n      const res = await getBalanceSheet(symbol.value);\n      let assets = {\n        label: 'Total Assets',\n        group: 1,\n        color: 'rgb(182, 116, 194)',\n        dataPoints: [],\n      };\n      let liabilitiesNonCurrent = {\n        label: 'Total Liabilities',\n        group: 1,\n        color: 'rgb(186, 56, 58)',\n        dataPoints: [],\n      };\n      let debt = {\n        label: 'Total Debt [USD]',\n        group: 1,\n        color: 'rgb(172, 114, 47)',\n        dataPoints: [],\n      };\n      let tradeAndNonTradeReceivables = {\n        label: 'Receivables',\n        group: 1,\n        color: 'rgb(99, 89, 135)',\n        dataPoints: [],\n      };\n      let tradeAndNonTradePayables = {\n        label: 'Payables',\n        group: 1,\n        color: 'rgb(179, 8, 167)',\n        dataPoints: [],\n      };\n      let cashAndEquivalents = {\n        label: 'Cash & Cash Equivalents [USD]',\n        group: 1,\n        color: 'rgb(46, 149, 187)',\n        dataPoints: [],\n      };\n      if (res && res.results) {\n        res.results.map((item) => {\n          assets.dataPoints.push({\n            calendarDate: item.calendarDate,\n            period: item.period,\n            value: item.assets,\n          });\n          liabilitiesNonCurrent.dataPoints.push({\n            calendarDate: item.calendarDate,\n            period: item.period,\n            value: item.liabilitiesNonCurrent,\n          });\n          debt.dataPoints.push({\n            calendarDate: item.calendarDate,\n            period: item.period,\n            value: item.debt,\n          });\n          tradeAndNonTradeReceivables.dataPoints.push({\n            calendarDate: item.calendarDate,\n            period: item.period,\n            value: item.tradeAndNonTradeReceivables,\n          });\n          tradeAndNonTradePayables.dataPoints.push({\n            calendarDate: item.calendarDate,\n            period: item.period,\n            value: item.tradeAndNonTradePayables,\n          });\n          cashAndEquivalents.dataPoints.push({\n            calendarDate: item.calendarDate,\n            period: item.period,\n            value: item.cashAndEquivalents,\n          });\n        });\n      }\n\n      setChartData([\n        sortDataPointsByDate(assets),\n        sortDataPointsByDate(liabilitiesNonCurrent),\n        sortDataPointsByDate(debt),\n        sortDataPointsByDate(tradeAndNonTradeReceivables),\n        sortDataPointsByDate(tradeAndNonTradePayables),\n        sortDataPointsByDate(cashAndEquivalents),\n      ]);\n      setIsLoading(2);\n      setLoadingData(false)\n    };\n\n    const getCash = async () => {\n      setLoadingData(true)\n      const res = await getCashStatement(symbol.value);\n      let netCashFlowFromOperations = {\n        label: 'Net Cash Flow from Operations',\n        group: 2,\n        color: 'rgb(230, 195, 176)',\n        dataPoints: [],\n      };\n      let netCashFlowFromInvesting = {\n        label: 'Net Cash Flow from Investing',\n        group: 2,\n        color: 'rgb(182, 102, 232)',\n        dataPoints: [],\n      };\n      let netCashFlowFromFinancing = {\n        label: 'Net Cash Flow from Financing',\n        group: 2,\n        color: 'rgb(221, 171, 219)',\n        dataPoints: [],\n      };\n      let issuanceDebtSecurities = {\n        label: 'Issue/Repayment of Debt Securities',\n        group: 2,\n        color: 'rgb(90, 125, 16)',\n        dataPoints: [],\n      };\n      let issuanceEquityShares = {\n        label: 'Issuance/Purchase of Equity Shares',\n        group: 2,\n        color: 'rgb(241, 76, 34)',\n        dataPoints: [],\n      };\n      let paymentDividendsOtherCashDistributions = {\n        label: 'Payment of Dividends & Other Cash Distributions',\n        group: 2,\n        color: 'rgb(96, 54, 217)',\n        dataPoints: [],\n      };\n      if (res && res.results) {\n        res.results.map((item) => {\n          netCashFlowFromOperations.dataPoints.push({\n            calendarDate: item.calendarDate,\n            period: item.period,\n            value: item.netCashFlowFromOperations,\n          });\n          netCashFlowFromInvesting.dataPoints.push({\n            calendarDate: item.calendarDate,\n            period: item.period,\n            value: item.netCashFlowFromInvesting,\n          });\n          netCashFlowFromFinancing.dataPoints.push({\n            calendarDate: item.calendarDate,\n            period: item.period,\n            value: item.netCashFlowFromFinancing,\n          });\n          issuanceDebtSecurities.dataPoints.push({\n            calendarDate: item.calendarDate,\n            period: item.period,\n            value: item.issuanceDebtSecurities,\n          });\n          issuanceEquityShares.dataPoints.push({\n            calendarDate: item.calendarDate,\n            period: item.period,\n            value: item.issuanceEquityShares,\n          });\n          paymentDividendsOtherCashDistributions.dataPoints.push({\n            calendarDate: item.calendarDate,\n            period: item.period,\n            value: item.paymentDividendsOtherCashDistributions,\n          });\n        });\n      }\n\n      setChartData([\n        sortDataPointsByDate(netCashFlowFromOperations),\n        sortDataPointsByDate(netCashFlowFromInvesting),\n        sortDataPointsByDate(netCashFlowFromFinancing),\n        sortDataPointsByDate(issuanceDebtSecurities),\n        sortDataPointsByDate(issuanceEquityShares),\n        sortDataPointsByDate(paymentDividendsOtherCashDistributions),\n      ]);\n      setIsLoading(2);\n      setLoadingData(false)\n    };\n\n    if (selectedHeaderNav === 'News') {\n      setLoadingData(true)\n      getNewsFinancials();\n    } else if (selectedHeaderNav === 'Data Table') {\n      setLoadingData(true)\n      if (selectedStockType === '') {\n        getTotalData();\n      } else if (selectedStockType === 'Income Statement') {\n        getIncomeForDataTable();\n      } else if (selectedStockType === 'Balance Sheet') {\n        getBalanceForDataTable();\n      } else if (selectedStockType === 'Cash Flow Statement') {\n        getCashForDataTable();\n      }\n\n      // update database for csv download\n      // setLoadingData(false)\n\n    } else if (selectedHeaderNav === 'Chart') {\n      if (selectedStockType === 'Income Statement') {\n        getIncome();\n      } else if (selectedStockType === 'Balance Sheet') {\n        getBalance();\n      } else if (selectedStockType === 'Cash Flow Statement') {\n        getCash();\n      }\n\n    }\n    // setLoadingData(false)\n  }, [selectedHeaderNav, selectedStockType, symbol]);\n\n  return (\n      <CsvDownloadProvider>\n        <div className=\"financial-dashboard-container\">\n          {!isShowSidebar && (\n            <Button\n              className={'show-sidebar-toggle-area show-sidebar-icon'}\n              onClick={handleSidebarChange}\n            >\n              <i className=\"tim-icons icon-align-left-2\" />\n            </Button>\n          )}\n          {isShowSidebar && (\n            <Sidebar\n              isAdminPage={false}\n              routes={routes}\n              subInstance={'tradedatatable'}\n              selectedInstance={selectedInstance}\n              handleSidebarChange={handleSidebarChange}\n              handleInstanceChange={handleInstanceChange}\n            />\n          )}\n          <Header\n            selectedHeaderNav={selectedHeaderNav}\n            setSelectedHeaderNav={setSelectedHeaderNav}\n            symbol={symbol}\n            setSymbol={setSymbol}\n            optionsSymbol={optionsSymbol}\n          />\n          {selectedHeaderNav !== 'News' && (\n            <div className=\"filter-types-section\">\n              <GraphTypes\n                selectedAggregationType={selectedAggregationType}\n                setSelectedAggregationType={setSelectedAggregationType}\n              />\n              <StockTypes\n                selectedStockType={selectedStockType}\n                setSelectedStockType={setSelectedStockType}\n                selectedHeaderNav={selectedHeaderNav}\n              />\n              {selectedHeaderNav == 'Data Table' && (<ButtonCsvDownload filename={\"financial.csv\"}>Csv Download</ButtonCsvDownload>)}\n            </div>\n          )}\n          {selectedHeaderNav === 'Data Table' ? (\n            <>\n              {isLoadingData && <div className=\"hunter-spinner-area\"><span className=\"mr-30\">Loading ...</span>    <Spinner>Loading</Spinner></div>}\n              {!isLoadingData &&\n              <FinancialDataTable\n                data={datatable}\n                selectedStockType={selectedStockType}\n                selectedAggregationType={selectedAggregationType}\n              />}\n            </>\n          ) : selectedHeaderNav === 'News' ? (\n            <>\n              {isLoadingData && <div className=\"hunter-spinner-area\"><span className=\"mr-30\">Loading ...</span>    <Spinner>Loading</Spinner></div>}\n              {!isLoadingData &&\n              <FinancialStatementsDataTable\n                data={financialStatements}\n              />}\n            </>\n          ) : (\n            <div className=\"container custom-container chart-area\">\n              <div className=\"row justify-content-center\">\n                {chartData ? (\n                  chartData.map((data) => (\n                    <div\n                      key={data.label}\n                      className=\"col-lg-4 col-md-4 col-sm-6 col-xs-12 group-bar-chart\"\n                    >\n                      <BarChart\n                        data={data}\n                        chartData={chartData}\n                        globalAggregationType={selectedAggregationType}\n                      />\n                    </div>\n                  ))\n                ) : isLoading === 2 ? (\n                  <div className=\"no-data\">No data</div>\n                ) : (\n                  <div className=\"no-data\">Fetching...</div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n      </CsvDownloadProvider>\n  );\n};\n\nexport default FinancialDashboard;\n","import React, { Component } from \"react\"\r\nimport Select from 'react-select'\r\n\r\nclass CustomSelect extends React.Component {\r\n  render() {\r\n    const {\r\n      isValid\r\n    } = this.props\r\n\r\n    const customStyles = {\r\n      control: (base, state) => ({\r\n        ...base,\r\n        // state.isFocused can display different borderColor if you need it\r\n        borderColor: state.isFocused ?\r\n          '#ddd' : isValid ?\r\n          '#ddd' : 'red',\r\n        // overwrittes hover style\r\n        '&:hover': {\r\n          borderColor: state.isFocused ?\r\n            '#ddd' : isValid ?\r\n            '#ddd' : 'red'\r\n        }\r\n      })\r\n    }\r\n    return <Select styles={ customStyles } {...this.props}/>\r\n  }\r\n}\r\n\r\nexport default CustomSelect;","import React, { Component } from \"react\";\nimport BaseSelect from 'react-select'\n// import { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw ,convertFromHTML,ContentState} from \"draft-js\";\nimport {\n  getBotStatusList,\n  getConfigFileDetail,\n  getModuleTypeNames,\n  getFileTypeNames,\n  saveConfigFile,\n  saveScriptFile,\n  getConfigFileList,\n  getBotConfigList,\n  getBotConfigFileList,\n  updateBotStatus,\n  getIndicatorSignallingList,\n} from \"api/Api\";\nimport {\n  Button\n} from \"reactstrap\";\nimport { MDBBtn } from \"mdbreact\";\n\nimport Editor from 'react-simple-code-editor';\nimport { highlight, languages } from 'prismjs/components/prism-core';\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-javascript';\n\nimport Modal from 'react-bootstrap/Modal'\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\nimport { MDBDataTableV5 } from 'mdbreact';\nimport moment from 'moment'\nimport \"./Editor.css\"\nimport Select from \"components/CustomSelect\"\n\nexport default class TextEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: '',\n      key: 'parameter',\n      editorState: EditorState.createEmpty(),\n      textdata:[\"hello\"],\n      scriptfiles: [],\n      scriptfile: null,\n      selectedFileType: null,\n      selectedModuleType: null,\n      selectedModule1Type: null,\n      module1TypeOptions: [\n        { value: 'watchlists', label: 'watchlists' },\n        { value: 'indicator_signaling', label: 'indicator_signaling' },\n        { value: 'order_signalling', label: 'order_signalling' },\n        { value: 'order_routing', label: 'order_routing' },\n        { value: 'indicators', label: 'pass in processed data into indicators' },\n        { value: 'core', label: 'core' },\n      ],\n      processConfigOptions: {\n        name: '',\n\n        indicator: [\n          {\n            value: 'heik_diff',\n            label: 'heik_diff'\n          },\n          {\n            value: 'heik',\n            label: 'heik'\n          },\n          {\n            value: 'rsi1',\n            label: 'rsi1'\n          },\n          {\n            value: 'rsi2',\n            label: 'rsi2'\n          },\n          {\n            value: 'rsi3',\n            label: 'rsi3'\n          },\n        ],\n        watchlist: [\n          {\n            value: 'tech',\n            label: 'tech'\n          },\n          {\n            value: 'buffett',\n            label: 'buffett'\n          },\n        ],\n        position_sizing: [{value: 'equal', label: 'equal'}],\n        order_routing: [\n          {\n            value: 'alphaca',\n            label: 'alphaca'\n          },\n        ],\n        data_source: [{\n          label: \"polygon\",\n          value: \"polygon\"\n        }],\n        live_trading: [\n          {\n            value: true,\n            label: 'true'\n          },\n          {\n            value: false,\n            label: 'false'\n          },\n        ],\n        starting_cash: 10000,\n        extended_hours: [\n          {value: true, label: 'true'},\n          {value: false, label: 'false'}\n        ],\n        macro_strategy: [{value: 'tsrh_dc', label: 'tsrh_dc'}],\n        indicator_signalling: [\n          {\n            label: \"alternative\",\n            value: \"alternative\"\n          },\n          {\n            value: 'default',\n            label: 'default'\n          }\n        ],\n        asset_class: [\n          {\n            label: \"crypto\",\n            value: \"crypto\"\n          },\n          {\n            label: \"equities\",\n            value: \"equities\"\n          }\n        ],\n      },\n      botConfigOptions: {\n        bot_name_config: '',\n        extended_hours_config: [\n          {value: true, label: 'true'},\n          {value: false, label: 'false'}\n        ],\n        macro_strategy_config: [],\n        start_date_config: ''\n      },\n      processConfigSetting: {\n        name: '',\n        indicator: null,\n        watchlist: null,\n        position_sizing: null,\n        order_routing: null,\n        data_source: null,\n        live_trading: null,\n        starting_cash: 10000,\n        extended_hours: null,\n        macro_strategy: null,\n        indicator_signalling: null,\n        asset_class: null,\n      },\n      botConfigSetting: {\n        bot_name_config: '',\n        extended_hours_config: null,\n        macro_strategy_config: null,\n        start_date_config: ''\n      },\n      selectedConfigFile: null,\n      selectedBotConfigFile: null,\n      selectedModuleContents: [],\n      filename: '',\n      file:[],\n      content: null,\n      isUpdate: false,\n      isShowOpenModal: false,\n      isShowAddIndicatorModal: false,\n      isShowSaveModal: false,\n      isCheckedStrategy: false,\n      isShowConfigOpenModal: false,\n      isShowBotConfigOpenModal: false,\n      strategyIndicators: [],\n      headerColumnsBotStatus: [\n        {\n          label: 'ID',\n          field: 'id',\n          width: 100,\n          attributes: {\n            'aria-controls': 'DataTable',\n            'aria-label': 'symbol',\n          },\n        },\n        {\n          label: 'BOT NAME',\n          field: 'name',\n          width: 200,\n        },\n        {\n          label: 'STATUS',\n          field: 'status',\n          width: 150,\n        },\n        {\n          label: 'UPDATED',\n          field: 'updated',\n          width: 150,\n        },\n        {\n          label: 'Action',\n          field: 'action',\n          sort: false,\n          width: 100,\n        }\n      ],\n      headerColumnsBotConfig: [\n        {\n          label: 'ID',\n          field: 'id',\n          wdith: 100,\n          attributes: {\n            'aria-controls': 'DataTable',\n            'aria-label': 'ID',\n          },\n        },\n        {\n          label: 'BOT NAME',\n          field: 'name',\n          width: 200,\n        },\n        {\n          label: 'Time Frame',\n          field: 'timeframe',\n          with: 200,\n        },\n        {\n          label: 'Indicator',\n          field: 'indicator',\n          with: 500,\n        },\n        {\n          label: 'Watch List',\n          field: 'watchlist',\n          with: 100,\n        },\n        {\n          label: 'Position Sizing',\n          field: 'position_sizing',\n          sort: false,\n          with: 100,\n        },\n        {\n          label: 'Order Routing',\n          field: 'order_routing',\n          sort: false,\n          with: 100,\n        },\n        {\n          label: 'Data Source',\n          field: 'data_source',\n          sort: false,\n          with: 100,\n        },\n        {\n          label: 'Live Trading',\n          field: 'live_trading',\n          sort: false,\n          with: 100,\n        },\n        {\n          label: 'Starting Cash',\n          field: 'starting_cash',\n          sort: false,\n          with: 100,\n        },\n        {\n          label: 'Hours',\n          field: 'hours',\n          sort: false,\n          with: 100,\n        },\n        {\n          label: 'Macro Strategy',\n          field: 'macro_strategy',\n          sort: false,\n          with: 100,\n        },\n        {\n          label: 'Indicator Signalling',\n          field: 'indicator_signalling',\n          sort: false,\n          with: 100,\n        },\n        {\n          label: 'Asset Class',\n          field: 'asset_class',\n          sort: false,\n          with: 100,\n        }\n      ],\n      headerColumnsSmallBotConfig: [\n        {\n          label: 'ID',\n          field: 'id',\n          wdith: 100,\n          attributes: {\n            'aria-controls': 'DataTable',\n            'aria-label': 'ID',\n          },\n        },\n        {\n          label: 'BOT NAME',\n          field: 'name',\n          width: 200,\n        },\n        {\n          label: 'Macro Strategy',\n          field: 'macro_strategy',\n          sort: false,\n          with: 100,\n        },\n        {\n          label: 'Extended Hours',\n          field: 'hours',\n          sort: false,\n          with: 100,\n        },\n        {\n          label: 'Start Date',\n          field: 'start_date',\n          sort: false,\n          with: 100,\n        }\n      ],\n      botStatusDatatable: {\n        columns: [],\n        rows: [],\n      },\n      botConfigDatatable: {\n        columns: [],\n        rows: [],\n      },\n      botConfigSmallDatatable: {\n        columns: [],\n        rows: [],\n      },\n      selectValidations: {\n        name: true,\n        indicator: true,\n        watchlist: true,\n        position_sizing: true,\n        order_routing: true,\n        data_source: true,\n        live_trading: true,\n        starting_cash: true,\n        extended_hours: true,\n        macro_strategy: true,\n        indicator_signalling: true,\n        asset_class: true,\n      },\n    };\n\n\n  }\n\n  openAddIndicatorModal = () => {\n    this.setState({ isShowAddIndicatorModal: true });\n  }\n\n  handleChange = (checked) => {\n    this.setState({ isCheckedStrategy: checked });\n  }\n\n\n  async componentDidMount () {\n    // loading indicator signalling options\n    await this.loadIndicatorSignallingOptions()\n\n    this.loadModuleTypes()\n    this.loadConfigFiles()\n    this.loadBotConfigFiles()\n    this.loadBotStatusList()\n    this.loadBotConfigList()\n  }\n\n\n  async loadIndicatorSignallingOptions() {\n    const res = await getIndicatorSignallingList();\n\n    if (res.success) {\n      //this.state.processConfigOptions.\n      let updatedState = this.state\n      updatedState.processConfigOptions.indicator_signalling = res.data\n\n      this.setState((state, props) => (updatedState));\n    }\n  }\n\n  loadConfigFiles = async () => {\n    const res = await getConfigFileList('bot_configs');\n    if (res.success) {\n      const configFiles = res.result.map(value => {\n        return {\n          value: value,\n          label: value\n        }\n      })\n\n      this.setState({\n        configFileOptions: configFiles,\n        selectedConfigFile: configFiles[0],\n        isUpdate: true,\n      })\n    }\n  }\n\n  loadBotConfigFiles = async () => {\n    const res = await getBotConfigFileList('bot_configs');\n    if (res.success) {\n      const configFiles = res.result.map(value => {\n        return {\n          value: value,\n          label: value\n        }\n      })\n\n      this.setState({\n        botConfigFileOptions: configFiles,\n        selectedBotConfigFile: configFiles[0],\n        isUpdate: true,\n      })\n    }\n  }\n\n  updateBotStatus = async (bot, action) => {\n    const res = await updateBotStatus(bot.name, action)\n    alert(res.message)\n    await this.loadBotStatusList()\n  }\n\n  loadBotStatusList = async () => {\n    const res = await getBotStatusList();\n    if (res.success) {\n      const botStatusList = res.result.map((bot, index) => ({\n        id: index + 1,\n        name: bot.name,\n        status: bot.status,\n        updated: moment(bot.updated).format(\"YYYY-MM-DD h:mm:ss\"),\n        action: <>\n          <MDBBtn className=\"mr-10\" color=\"blue\" size=\"sm\" onClick={\n            () => {\n              this.updateBotStatus(bot, bot.status === 'live' ? 'pause' : 'start');\n            }}\n          >\n            {bot.status === 'live' ? 'pause' : 'start'}\n          </MDBBtn>\n          <MDBBtn color=\"blue\" size=\"sm\" onClick={\n            () => {\n              this.updateBotStatus(bot, 'kill');\n            }}\n          >\n            kill\n          </MDBBtn>\n        </>\n      }))\n      const data = {\n        columns: this.state.headerColumnsBotStatus,\n        rows: botStatusList\n      }\n      this.setState({\n        botStatusDatatable: data\n      })\n    } else {\n      const data = {\n        columns: this.state.headerColumnsBotStatus,\n        rows: []\n      }\n      this.setState({\n        botStatusDatatable: data\n      })\n    }\n  }\n\n  loadBotConfigList = async () => {\n    const res = await getBotConfigList();\n    if (res.result) {\n      const botConfigList = res.result.map((bot, index) => ({\n        id: index + 1,\n        name: bot.name,\n        indicator: bot.indicator,\n        watchlist: bot.watchlist,\n        position_sizing: bot.position_sizing,\n        order_routing: bot.order_routing,\n        data_source: bot.data_source,\n        live_trading: bot.live_trading,\n        starting_cash: bot.starting_cash,\n        hours: bot.extended_hours,\n        macro_strategy: bot.macro_strategy,\n        indicator_signalling: bot.indicator_signalling,\n        asset_class: bot.asset_class,\n      }))\n      const data = {\n        columns: this.state.headerColumnsBotConfig.map((col, index) => {\n          if (index === 0) {\n            col.width = 50;\n          } else if (index === 1) {\n            col.width = 150;\n          } else if (index === 3) {\n            col.width = 300;\n          } else if ((index === 4) || (index === 5) || (index === 6) || (index === 7) || (index === 8) || (index === 9)) {\n            col.width = 150;\n          } else if ((index === 10) || (index === 11) || (index === 12) || (index === 13)) {\n            col.width = 200;\n          }\n          return col;\n        }),\n        rows: botConfigList\n      }\n      const data1 = {\n        columns: this.state.headerColumnsSmallBotConfig.map((col, index) => {\n          if (index === 0) {\n            col.width = 50;\n          } else if (index === 1) {\n            col.width = 150;\n          } else if (index === 3) {\n            col.width = 300;\n          } else if ((index === 4) || (index === 5) || (index === 6) || (index === 7) || (index === 8) || (index === 9)) {\n            col.width = 150;\n          } else if ((index === 10) || (index === 11) || (index === 12) || (index === 13)) {\n            col.width = 200;\n          }\n          return col;\n        }),\n        rows: botConfigList\n      }\n      this.setState({\n        botConfigDatatable: data,\n        botConfigSmallDatatable: data1\n      })\n    }\n  }\n\n  loadModuleTypes = async () => {\n    const res = await getModuleTypeNames();\n    if (res.success) {\n      const moduleTypes = res.result.map(value => {\n        return {\n          value: value,\n          label: value\n        }\n      })\n\n      this.setState({\n        moduleTypeOptions: moduleTypes,\n        selectedModuleType: moduleTypes[0],\n        isUpdate: true,\n      })\n    }\n  }\n\n  handleScriptFileChange = (e) => {\n    this.setState({\n      selectedFileType: e,\n      filename: e.value,\n    });\n  }\n\n  handleScriptFileSave = async () => {\n    if (!this.state.filename) {\n      alert(\"Please input the file name!\")\n      return;\n    }\n\n    if (!this.state.code.length) {\n      alert(\"File content is empty!\")\n      return;\n    }\n\n\n\n    if (!this.state.isSelectedStrategyFile) {\n      if (this.state.isCheckedStrategy) {\n        alert(\"content is empty!\")\n        return;\n      }\n    }\n\n    let res;\n    if (this.state.isSelectedStrategyFile) {\n      res = await saveScriptFile(\n        this.state.filename,\n        this.state.code,\n        this.state.isUpdate,\n        this.state.isCheckedStrategy\n      )\n    } else {\n      res = await saveConfigFile(\n        this.state.isUpdate ? this.state.selectedFileType.value : this.state.filename,\n        this.state.processConfigSetting,\n        this.state.isUpdate,\n      )\n    }\n\n    if (res.success) {\n      this.SaveScriptModalClose()\n      return;\n    }\n    alert(res.message);\n  }\n\n  handleScriptFileNameChange = (e) => {\n    this.setState({\n      filename: e.target.value\n    })\n  }\n\n  onEditorStateChange = (editorState) => {\n    this.setState({\n      editorState,\n    });\n  };\n\n  handleScriptFileCreate = async () => {\n    this.setState({\n      isUpdate: false,\n      scriptfiles: null,\n      filename: '',\n      selectedFileType: null,\n      editorState: EditorState.createEmpty(),\n    })\n  }\n\n  handleOpenScriptFile = async () => {\n    this.setState({\n      isShowOpenModal: true,\n      isUpdate: true,\n    })\n  }\n\n  handleOpenProcessConfigModal = async () => {\n    this.setState({\n      isShowConfigOpenModal: true,\n      isUpdate: true\n    })\n  }\n\n  handleFileTypeChange = async (e) => {\n    this.setState({\n      selectedFileType: e,\n      isUpdate: true,\n    })\n  }\n\n  handleFile1TypeChange = async (e) => {\n    this.setState({\n      selectedFile1Type: e,\n      isUpdate: true,\n    })\n  }\n\n  handleConfigFileChange = async (e) => {\n    this.setState({\n      selectedConfigFile: e,\n      isUpdate: true,\n    })\n  }\n\n  handleBotConfigFileChange = async (e) => {\n    this.setState({\n      selectedBotConfigFile: e,\n      isUpdate: true,\n    })\n  }\n\n  handleModuleTypeChange = async (e) => {\n    this.setState({\n      selectedModuleType: e,\n      isUpdate: true,\n    })\n\n    const res = await getFileTypeNames(e.value);\n    if (res.success) {\n      const fileTypes = res.result.map(value => {\n        return {\n          value: value.name,\n          label: value.name\n        }\n      })\n\n      this.setState({\n        selectedModuleContents: res.result,\n        fileTypeOptions: fileTypes,\n        selectedFileType: fileTypes[0],\n        isUpdate: true,\n      })\n    }\n  }\n\n  handleModule1TypeChange = async (e) => {\n    this.setState({\n      selectedModule1Type: e,\n      isUpdate: true,\n    })\n\n    const res = await getFileTypeNames(e.value);\n    if (res.success) {\n      const fileTypes = !res.result.length ? null :\n      res.result.map(value => {\n        return {\n          value: value.name,\n          label: value.name\n        }\n      })\n\n      this.setState({\n        selectedModuleContents: res.result,\n        file1TypeOptions: fileTypes,\n        selectedFile1Type: fileTypes ? fileTypes[0] : null,\n        isUpdate: true,\n      })\n    }\n  }\n\n  handleSaveModalShow = async () => {\n    this.setState({isShowSaveModal: true})\n  }\n\n  processConfigModalClose = () => {\n    this.setState({isShowConfigOpenModal: false})\n  }\n\n  botConfigModalClose = () => {\n    this.setState({isShowBotConfigOpenModal: false})\n  }\n\n  OpenScriptModalClose = () => {\n    this.setState({isShowOpenModal: false})\n  }\n\n  AddIndicatorModalClose = () => {\n    this.setState({ isShowAddIndicatorModal: false })\n  }\n\n  SaveScriptModalClose = () => {\n    this.setState({isShowSaveModal: false})\n  }\n\n  handleScriptFileOpen = async () => {\n    const selectedFile = this.state.selectedModuleContents.filter((file) => file.name === this.state.selectedFileType.value)\n    const blocksFromHTML = convertFromHTML(selectedFile[0] ? `<pre>${selectedFile[0].contents}</pre>` : '');\n    const blockContent= ContentState.createFromBlockArray(\n      blocksFromHTML.contentBlocks,\n      blocksFromHTML.entityMap,\n    );\n\n    this.setState({\n      code: selectedFile[0].contents,\n      editorState: EditorState.createWithContent(blockContent),\n      scriptfile: selectedFile,\n    })\n\n    this.OpenScriptModalClose();\n\n  }\n\n  handleConfigFileOpen = async () => {\n    const res = await getConfigFileDetail('bot_configs', this.state.selectedConfigFile.value)\n\n    this.setState({\n      processConfigSetting: res,\n      isUpdate: true\n    })\n    this.processConfigModalClose()\n  }\n\n  handleBotConfigFileOpen = async () => {\n    const res = await getConfigFileDetail('bot_configs', this.state.selectedConfigFile.value)\n\n    this.setState({\n      botConfigSetting: {\n        bot_name_config: res.name,\n        macro_strategy_config: res.macro_strategy,\n        start_date_config: res.start_date_config,\n        extended_hours_config: res.extended_hours,\n      },\n      isUpdate: true\n    })\n\n    this.botConfigModalClose()\n  }\n\n  handleSave = (editorState) => {\n    let content = convertToRaw(editorState.getCurrentContent())\n    this.setState({\n      content: content.blocks[0].text,\n      isSelectedStrategyFile: true\n    })\n    this.handleSaveModalShow()\n  }\n\n  handleProcessConfigSettingSave = async () => {\n    const form = document.querySelector('#controlled-tab-example-tabpane-process form')\n    if (!form.checkValidity()) {\n      form.classList.add('was-validated');\n    }\n\n    let isFormValid = true\n\n    let validations = {}\n    for (const config in this.state.processConfigSetting) {\n      validations[config] = true\n      if (!this.state.processConfigSetting[config] || this.state.processConfigSetting[config]=='' || this.state.processConfigSetting[config].length == 0) {\n\n        validations[config] = false\n        isFormValid = false\n      }\n    }\n    this.setState({selectValidations: validations})\n\n    if (!isFormValid) {\n      return\n    }\n\n\n    const res = await saveConfigFile(\n      this.state.processConfigSetting,\n      this.state.isUpdate,\n    )\n\n    if (res.success) {\n      alert(res.message)\n    } else {\n      alert('The config is not saved')\n    }\n\n    this.loadConfigFiles()\n    this.loadBotConfigList()\n  }\n\n  showFile = async (e) => {\n    e.preventDefault()\n    let currFile=e.target.files[0]\n    const reader = new FileReader()\n    reader.onload = async (e) => {\n      const text = (e.target.result)\n      const blocksFromHTML = convertFromHTML(text);\n      const state= ContentState.createFromBlockArray(\n        blocksFromHTML.contentBlocks,\n        blocksFromHTML.entityMap,\n      );\n      this.setState({editorState: EditorState.createWithContent(state),file:currFile})\n    };\n    reader.readAsText(e.target.files[0])\n  }\n\n  handleModuleAndTypeSelect = () => {\n    const indicators = this.state.strategyIndicators;\n    indicators.push(`${this.state.selectedModule1Type.value}-${this.state.selectedFile1Type.value}`)\n    this.setState( { strategyIndicators: indicators} )\n  }\n\n  handleIndicatorDelete = (indicator) => {\n    let indicators = this.state.strategyIndicators;\n    indicators = indicators.filter( (o) => o !== indicator )\n    this.setState( { strategyIndicators: indicators} )\n  }\n\n  handleBotNameChange = (e, key) => {\n    this.state.processConfigSetting[key] = e.target.value\n    this.setState({processConfigSetting: this.state.processConfigSetting})\n  }\n\n\n  handleProcessChange = (e, key) => {\n    this.state.selectValidations[key] = (e.length > 0)\n    this.state.processConfigSetting[key] = e\n    this.setState({processConfigSetting: this.state.processConfigSetting})\n  }\n\n  handleBotConfigBotNameChange = (e, key) => {\n    this.state.botConfigSetting[key] = e.target.value\n    this.setState({botConfigSetting: this.state.botConfigSetting})\n  }\n\n  handleBotConfigInputChange = (e, key) => {\n    this.state.botConfigSetting[key] = e.target.value\n    this.setState({botConfigSetting: this.state.botConfigSetting})\n  }\n\n  displayProcessEditor = () => {\n    let keys = Object.keys(this.state.processConfigOptions);\n\n    return keys.map((key, index) => {\n      return (\n        <li key={key} className=\"list-group-item strategy-indicator-edit-list\">\n          <div className=\"strategy-indicator-edit-list-no display-flex-j-c\">\n            <MDBBtn tag=\"a\" size=\"sm\">\n              {index}\n            </MDBBtn>\n          </div>\n          <div className=\"strategy-indicator-edit-list-content ml-30\">\n            <MDBBtn tag=\"a\" size=\"sm\"  className=\"hunter-process-mdb-btn\">\n              {key}\n            </MDBBtn>\n          </div>\n          <div className=\"strategy-indicator-edit-list-action\">\n          { key === 'name' || key === 'starting_cash'\n            ?\n            (\n              <input\n                  type=\"name\"\n                  className=\"form-control hunter-bot-name-input\"\n                  placeholder= {\n                    key === 'name' ? \"Enter name\" : \"Enter starting cash\"\n                  }\n                  value={this.state.processConfigSetting[key]}\n                  onChange={(e) => { this.handleBotNameChange(e, key)}}\n                  required\n              />\n            )\n            :\n            (<Select\n              value={this.state.processConfigSetting[key]}\n              onChange={(e) => { this.handleProcessChange(e, key) }}\n              options={this.state.processConfigOptions[key]}\n              placeholder=\"select\"\n              isMulti\n              required=\"true\"\n              isValid={this.state.selectValidations[key]}\n            />)\n          }\n          </div>\n        </li>\n      )\n    })\n  }\n\n  handleIndicatorReset = () => {\n    this.setState(\n      {\n        processConfigSetting: {\n          name: '',\n          indicator: null,\n          watchlist: null,\n          position_sizing: null,\n          order_routing: null,\n          data_source: null,\n          live_trading: null,\n          starting_cash: 10000,\n          hours: null,\n          macro_strategy: null,\n          indicator_signalling: null,\n          asset_class: null,\n        }\n      }\n    )\n  }\n\n  render() {\n    const { editorState } = this.state;\n    return (\n      <React.Fragment>\n        <div className=\"hunter-textedit-container\" >\n          <Tabs\n            id=\"controlled-tab-example\"\n            activeKey={this.state.key}\n            onSelect={(k) => this.setState({ key: k })}\n            className=\"mb-3\"\n          >\n            <Tab eventKey=\"parameter\" title=\"Parameter Editor\">\n              <div className=\"hunter-code-editor-area\">\n                <Editor\n                  value={this.state.code}\n                  onValueChange={code => this.setState({ code })}\n                  highlight={code => highlight(code, languages.plaintext)}\n                  padding={10}\n                  style={{\n                    fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n                    fontSize: 12,\n                    minHeight: \"500px\",\n                    backgroundColor: \"#FFFFFF\",\n                  }}\n                />\n              </div>\n              <div className=\"hunter-editor-button-area\">\n                <div className=\"display-flex-left\">\n                  <button className=\"btn btn-md btn-secondary\" onClick={()=>this.handleScriptFileCreate()}>New</button>\n                  <button className=\"btn btn-md btn-secondary\" onClick={()=>this.handleOpenScriptFile()}>Open</button>\n                  {/* <button className=\"btn btn-md btn-secondary\" onClick={()=>this.handleSave(draftToHtml(convertToRaw(editorState.getCurrentContent())))}>Save</button> */}\n                  <button className=\"btn btn-md btn-secondary\" onClick={()=>this.handleSave(editorState)}>Save</button>\n                </div>\n              </div>\n            </Tab>\n            <Tab eventKey=\"process\" title=\"Process Config Editor\">\n              <div className={\"strategy-indicator-edit-area\"}>\n                <form class=\"needs-validation\" noValidate>\n                  <ul className=\"list-group\">\n                    {this.displayProcessEditor()}\n                  </ul>\n                </form>\n\n                <div className=\"strategy-edit-icon-area\">\n                  <button className=\"btn btn-md btn-secondary mr-10\" onClick={()=>this.handleIndicatorReset()}>Reset</button>\n                  <button className=\"btn btn-md btn-secondary mr-10\" onClick={()=>this.handleOpenProcessConfigModal()}>Open</button>\n                  <button className=\"btn btn-md btn-secondary mr-10\" onClick={()=>this.handleProcessConfigSettingSave()}>Save</button>\n                </div>\n              </div>\n            </Tab>\n            <Tab eventKey=\"bot-status-manager\" title=\"Bot Status Manager\">\n            <MDBDataTableV5\n              hover\n              maxHeight=\"500px\"\n              data={this.state.botStatusDatatable}\n              dark={true}\n              noBottomColumns={true}\n              small={true}\n              striped={true}\n              scrollY={true}\n            />;\n            </Tab>\n            {/* <Tab eventKey=\"bot-config-manager-small\" title=\"Bot Config Manager1\">\n              <MDBDataTableV5\n                hover\n                maxHeight=\"500px\"\n                data={this.state.botConfigSmallDatatable}\n                noBottomColumns={true}\n                small={true}\n                sortable={false}\n                striped={true}\n                scrollX\n              />;\n            </Tab> */}\n            <Tab eventKey=\"bot-config-manager\" title=\"Bot Config Manager\">\n              <MDBDataTableV5\n                hover\n                maxHeight=\"500px\"\n                data={this.state.botConfigDatatable}\n                noBottomColumns={true}\n                small={true}\n                sortable={false}\n                striped={true}\n                scrollX\n              />;\n            </Tab>\n          </Tabs>\n          <Modal show={this.state.isShowOpenModal} className=\"hunter-modal\" onHide={this.OpenScriptModalClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Open Script File</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div className=\"hunter-select-module-area\">\n                <div className=\"select-multi-option\">\n                  <label>Select module type</label>\n                  <Select\n                    className=\"hunter-module-type-select\"\n                    name=\"select-module-type\"\n                    placeholder=\"Module Type\"\n                    value={this.state.selectedModuleType}\n                    onChange={this.handleModuleTypeChange}\n                    options={this.state.moduleTypeOptions}\n                  />\n                </div>\n                <div className=\"select-multi-option\">\n                  <label>Select file type</label>\n                  <Select\n                    name=\"select-file-type\"\n                    placeholder=\"File Type\"\n                    value={this.state.selectedFileType}\n                    onChange={this.handleFileTypeChange}\n                    options={this.state.fileTypeOptions}\n                  />\n                </div>\n              </div>\n            </Modal.Body>\n            <Modal.Footer className=\"hunter-modal-footer\">\n              <Button\n                variant=\"primary\"\n                className=\"btn-md\"\n                onClick = {() => {\n                  this.handleScriptFileOpen(this.state.selectedFileType)\n                }}\n              >\n                Open\n              </Button>\n            </Modal.Footer>\n          </Modal>\n          <Modal show={this.state.isShowConfigOpenModal} className=\"hunter-modal\" onHide={this.processConfigModalClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Open Script File</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div className=\"hunter-select-module-area\">\n                <div className=\"select-multi-option\">\n                  <label>Select Config File</label>\n                  <Select\n                    className=\"hunter-module-type-select\"\n                    name=\"select-config-file\"\n                    placeholder=\"Config File\"\n                    value={this.state.selectedConfigFile}\n                    onChange={this.handleConfigFileChange}\n                    options={this.state.configFileOptions}\n                  />\n                </div>\n              </div>\n            </Modal.Body>\n            <Modal.Footer className=\"hunter-modal-footer\">\n              <Button\n                variant=\"primary\"\n                className=\"btn-md\"\n                onClick = {() => {\n                  this.handleConfigFileOpen()\n                }}\n              >\n                Open\n              </Button>\n            </Modal.Footer>\n          </Modal>\n          <Modal show={this.state.isShowBotConfigOpenModal} className=\"hunter-modal\" onHide={this.botConfigModalClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Open Bot Config File</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div className=\"hunter-select-module-area\">\n                <div className=\"select-multi-option\">\n                  <label>Select Bot Config File</label>\n                  <Select\n                    className=\"hunter-module-type-select\"\n                    name=\"select-config-file\"\n                    placeholder=\"Config File\"\n                    value={this.state.selectedBotConfigFile}\n                    onChange={this.handleBotConfigFileChange}\n                    options={this.state.botConfigFileOptions}\n                  />\n                </div>\n              </div>\n            </Modal.Body>\n            <Modal.Footer className=\"hunter-modal-footer\">\n              <Button\n                variant=\"primary\"\n                className=\"btn-md\"\n                onClick = {() => {\n                  this.handleBotConfigFileOpen()\n                }}\n              >\n                Open\n              </Button>\n            </Modal.Footer>\n          </Modal>\n          <Modal show={this.state.isShowSaveModal} className=\"hunter-modal\" onHide={this.SaveScriptModalClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Save Script File</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div className=\"hunter-form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control hunter-form-control\"\n                  placeholder=\"script file name\"\n                  value={\n                    this.state.filename\n                  }\n                  onChange={(e) => { this.handleScriptFileNameChange(e)}}\n                />\n              </div>\n            </Modal.Body>\n            <Modal.Footer className=\"hunter-modal-footer\">\n              <Button variant=\"primary\" onClick={this.handleScriptFileSave} className=\"btn-md\">\n                Save\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </div>\n      </React.Fragment>\n    );\n  }\n}","import React, { useState, useEffect } from 'react'\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\nimport { routes } from \"routes.js\";\nimport Sidebar from \"components/Sidebar/Sidebar\";\nimport TextEditor from 'components/TextEditor/Editor';\nimport {\n  Button\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function FileManager(){\n  const history = useHistory();\n  const [isShowSidebar, setShowSidebar] = React.useState(true);\n  const [selectedInstance, setSelectedInstance] = React.useState('admin_tab');\n  const [user] = useState(JSON.parse(localStorage.getItem('user-info')));\n\n  const handleSidebarChange = () => {\n    setShowSidebar(!isShowSidebar);\n  };\n  \n  const handleInstanceChange = (instance) => {\n    setSelectedInstance(instance)\n  }\n\n  useEffect (() => {\n    console.log('user.is_admin???', user.is_admin)\n    if (!user.is_admin) {\n      history.pushState('/')\n    }\n  }, [user, history])\n\n  return(\n    <React.Fragment>        \n      <AdminNavbar/>\n      <div className=\"wrapper hunter-wrapper\">\n          {!isShowSidebar && (\n            <Button\n              className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\n              onClick={handleSidebarChange}\n            >\n              <i className=\"tim-icons icon-align-left-2\"/>\n            </Button>\n          )}\n          {isShowSidebar && (\n            <Sidebar\n              isAdminPage={false}\n              routes={routes}\n              subInstance={'systemfilemanager'}\n              handleSidebarChange={handleSidebarChange}\n              selectedInstance={selectedInstance}\n              handleInstanceChange={handleInstanceChange}\n            />\n          )}\n          <TextEditor/>\n        </div>\n    </React.Fragment>\n  );  \n}","import { createContext, useContext } from \"react\";\n\nexport const themes = {\n  dark: {\n    colors: {\n      white: '#ffffff',\n      red: '#951a1a',\n      darkBlue: '#343a40',\n      lightBlue: '#6c757d',\n      textColor: 'white',\n      borderColor: '#cccccc',\n      actionButtonColor: '#000',\n      actionButtonBg: 'transparent',\n      tableTextColor: '#000',\n    },\n  },\n  light: \"white-content\",\n};\n\nexport const useThemeColors = () => {\n  const context = useContext(ThemeContext)\n  return context.theme.colors\n}\n\nexport const ThemeContext = createContext({\n  theme: themes.dark,\n  changeTheme: () => {},\n});\n","import React, { useState, useEffect } from \"react\";\nimport { ThemeContext, themes } from \"contexts/ThemeContext\";\n\nexport default function ThemeContextWrapper(props) {\n  const [theme, setTheme] = useState(themes.dark);\n\n  function changeTheme(theme) {\n    setTheme(theme);\n  }\n\n  useEffect(() => {\n    switch (theme) {\n      case themes.light:\n        document.body.classList.add(\"white-content\");\n        break;\n      case themes.dark:\n      default:\n        document.body.classList.remove(\"white-content\");\n        break;\n    }\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={{ theme: theme, changeTheme: changeTheme }}>\n      {props.children}\n    </ThemeContext.Provider>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  BackgroundColorContext,\n  backgroundColors,\n} from \"contexts/BackgroundColorContext\";\n\nexport default function BackgroundColorWrapper(props) {\n  const [color, setColor] = useState(backgroundColors.blue);\n\n  function changeColor(color) {\n    setColor(color);\n  }\n\n  return (\n    <BackgroundColorContext.Provider\n      value={{ color: color, changeColor: changeColor }}\n    >\n      {props.children}\n    </BackgroundColorContext.Provider>\n  );\n}\n","import {\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { useAuth } from 'contexts/authContext';\n\nexport default function PrivateRoute({ children, ...rest }) {\n  let auth = useAuth();\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth.authUser.isAuthenticated ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n  ","import React, { useState, useEffect } from \"react\";\nimport { useAuth } from 'contexts/authContext'\nimport { validateEmail } from 'utils/helper'\nimport { useHistory } from \"react-router-dom\";\n\nconst SignUp = () => {\n    let history = useHistory();\n\n    let auth = useAuth();\n    const [isLoading, setIsLoading] = useState(false)\n    const [username, setUserName] = useState('')\n    const [email, setEmail] = useState('')\n    const [error, setError] = useState(-1)\n    const [message, setMessage] = useState()\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [pathname] = useState(history.location.pathname)\n\n    useEffect(() => {\n        const listener = event => {\n            if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n                event.preventDefault();\n                signup()\n            }\n        };\n        document.addEventListener(\"keydown\", listener);\n        return () => {\n            document.removeEventListener(\"keydown\", listener);\n        };\n    }, []);   \n    \n    const handleEmailChange = (e) => {\n        setEmail(e.target.value)\n    }\n    \n    const handlePasswordChange = (e) => {\n        setPassword(e.target.value)\n    }\n    \n    const handleConfirmPasswordChange = (e) => {\n        setConfirmPassword(e.target.value)\n    }\n    \n    const handleUserNameChange = (e) => {\n        setUserName(e.target.value)\n    }\n\n    const signup = async () => {\n        if (!username.length) {\n            setError(1)\n            setMessage('user name is wrong')\n            return\n        }\n        if (!email.length) {\n            setError(1)\n            setMessage('user email is wrong')\n            return\n        }\n        if (!password.length || !confirmPassword.length) {\n            setError(1)\n            setMessage('password or confirm password is wrong')\n            return\n        }\n        if (password !== confirmPassword) {\n            setError(1)\n            setMessage('password and confirm password is not matched')\n            return\n        }\n        if (!validateEmail(email)){\n            setError(1)\n            setMessage('Invalid email')\n            return\n        }\n        \n        setIsLoading(true)\n        const res = await auth.authUser.signup(username, email, password, confirmPassword, pathname)\n        setIsLoading(false)\n\n        if (res.success) {\n            // setError(0)\n            // setMessage('Sign Up is successed')\n            history.push('/login')\n        } else {\n            setError(1)\n            setMessage(res.error)\n            return\n        }\n    }\n\n    const handleModalClose = () => {\n        setError(-1);\n        setMessage('');\n    }\n\n    return (\n        <div className={\"login-form\"}>\n            <div>\n\n                <h3>Sign Up</h3>\n\n                <div className=\"form-group\">\n                    <label>Name</label>\n                    <input\n                        type=\"name\"\n                        className=\"form-control hunter-form-control\"\n                        placeholder=\"Enter user name\"\n                        value={username}\n                        onChange={(e) => { handleUserNameChange(e)}}\n                    />\n                </div>\n                \n                <div className=\"form-group\">\n                    <label>Email</label>\n                    <input\n                        type=\"email\"\n                        className=\"form-control hunter-form-control\"\n                        placeholder=\"Enter email\"\n                        value={email}\n                        onChange={(e) => { handleEmailChange(e)}}\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input\n                        type=\"password\"\n                        className=\"form-control hunter-form-control\"\n                        placeholder=\"Enter password\"\n                        value={password}\n                        onChange={(e) => { handlePasswordChange(e)}}\n                    />\n                </div>\n                \n                <div className=\"form-group\">\n                    <label>Confirm Password</label>\n                    <input\n                        type=\"password\"\n                        className=\"form-control hunter-form-control\"\n                        placeholder=\"Enter confirm password\"\n                        value={confirmPassword}\n                        onChange={(e) => { handleConfirmPasswordChange(e)}}\n                    />\n                </div>\n\n                <button\n                    className=\"btn btn-dark btn-lg btn-block hunter-signin-button\"\n                    onClick={signup}\n                >\n                    {isLoading && (\n                        <span className=\"spinner-border spinner-border-sm hunter-spinner-button\" role=\"status\" aria-hidden=\"true\"></span>\n                    )}\n                    Sign up\n                    \n                </button>\n                <div className=\"form-group\">\n                    <p className=\"sign-up-area text-right\">\n                        <a href=\"/signin\">Sign In?</a>\n                    </p>\n                </div>\n            </div>\n            {error !== -1 && \n                <div className=\"alert alert-primary\" role=\"alert\">\n                    <div className=\"alert-container\">\n                        <div className=\"alert-content\">\n                            {message}\n                        </div>\n                        <button type=\"button\" className=\"btn btn-primary modal-close-button hunter-modal-small-button\" onClick={() => { handleModalClose() }}>Close</button>\n                    </div>\n                </div>   \n            }\n        </div>\n    );\n}\n\nexport default SignUp","import React, { useEffect, useState } from \"react\";\nimport {\n    useHistory,\n} from \"react-router-dom\";\nimport { useAuth } from 'contexts/authContext'\n\nconst Verify = () => {\n    let auth = useAuth();\n    let history = useHistory();\n    const [code, setCode] = useState('')\n    const [error, setError] = useState(-1)\n    const [isLoading, setIsLoading] = useState(false)\n    const [message, setMessage] = useState('')\n    const userId = history.location.state ? history.location.state.userId : null\n\n    const handleCodeChange = (e) => {\n        setCode(e.target.value)\n    }\n\n    useEffect(() => {\n        const listener = event => {\n            if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n                event.preventDefault();\n                verify();\n            }\n        };\n        document.addEventListener(\"keydown\", listener);\n\n        if (!userId) {\n            history.push('/login')\n        }\n\n        return () => {\n            document.removeEventListener(\"keydown\", listener);\n        };\n    }, [userId, history])\n\n    const verify = async () => {\n        if (!code.length) {\n            setError(1)\n            setMessage('confirmation code is empty')\n            return\n        }\n        setIsLoading(true)\n        const res = await auth.authUser.verify(userId, code)\n        setIsLoading(false)\n        if (res.verify) {\n            const userInfo = {\n                email: res.user_email,\n                role: res.is_admin ? 'forward_test,stress_test,optimization,live_trade,market_watch,trade_data' : res.role,\n                is_admin: res.is_admin,\n            }\n            localStorage.setItem('user-info', JSON.stringify(userInfo))\n            localStorage.setItem('auth-token', JSON.stringify(res.token))\n            history.push('/');\n        } else {\n            setError(1)\n            setMessage(res.error)\n            return\n        }\n    }\n\n    const handleModalClose = () => {\n        setError(-1);\n        setMessage('');\n    }\n\n    return (\n        <div className={\"login-form\"}>\n            <div>\n\n                <h3>Verify</h3>\n\n                <div className=\"form-group\">\n                    <label>Verify Code</label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control hunter-form-control\"\n                        placeholder=\"Enter verify code\"\n                        value={code}\n                        onChange={(e) => { handleCodeChange(e)}}\n                    />\n                </div>\n\n                <button\n                    className=\"btn btn-dark btn-lg btn-block hunter-signin-button\"\n                    onClick={verify}\n                >\n                    {isLoading && (\n                        <span className=\"spinner-border spinner-border-sm hunter-spinner-button\" role=\"status\" aria-hidden=\"true\"></span>\n                    )}\n                    Verify\n                </button>\n            </div>\n            {error !== -1 &&\n                <div class=\"alert alert-primary\" role=\"alert\">\n                    <div className=\"alert-container\">\n                        <div className=\"alert-content\">\n                            {message}\n                        </div>\n                        <button type=\"button\" className=\"btn btn-primary modal-close-button hunter-modal-small-button\" onClick={() => { handleModalClose() }}>Close</button>\n                    </div>\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default Verify","import React, { useState, useEffect, useMemo } from \"react\";\nimport Select from 'react-select'\nimport { Link } from \"react-router-dom\";\nimport \"react-datetime/css/react-datetime.css\";\nimport {\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  NavLink,\n  Nav,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport Pagination from 'react-bootstrap/Pagination'\nimport { useAuth } from 'contexts/authContext';\nimport { getFloatsDetails, getFloatsFilterOptions } from 'api/Api'\nimport \"./FloatsComponent.css\"\n\nimport { useCsvDownloadUpdate } from \"contexts/CsvDownloadContext\";\nimport ButtonCsvDownload from 'components/ButtonCsvDownload'\nimport { useDatatable, useDatatableLoading } from \"contexts/DatatableContext\";\nimport Spinner from \"components/Spinner\";\n\nconst FloatsComponent = () => {\n  const auth = useAuth();\n  const history = useHistory();\n  const [collapseOpen,] = React.useState(false)\n  const [exchange, setExchange] = React.useState(null)\n  const [sector, setSector] = useState(null);\n  const [industry, setIndustry] = useState(null);\n  const [pageAmount, setPageAmount] = useState(10)\n  const [currentPage, setCurrentPage] = useState(1);\n  const [wholeRows, setWholeRows] = useState(0);\n  const [optionsExchange, setOptionsExchanges] = useState([])\n  const [optionsSector, setOptionsSector] = useState([])\n  const [optionsIndustry, setOptionsIndustry] = useState([])\n  const [isLoadingData, setLoadingData] = useDatatableLoading()\n\n  const hearder_columns = useMemo(() => {\n    return [\n    {\n      label: 'Industry',\n      field: 'Industry',\n      attributes: {\n        'aria-controls': 'DataTable',\n        'aria-label': 'symbol',\n      },\n    },\n    {\n      label: 'Symbol',\n      field: 'Symbol',\n    },\n    {\n      label: 'AssetType',\n      field: 'AssetType',\n    },\n    {\n      label: 'Name',\n      field: 'Name',\n    },\n    {\n      label: 'SharesFloat',\n      field: 'SharesFloat',\n    },\n    {\n      label: 'ShortPercentFloat',\n      field: 'ShortPercentFloat',\n    },\n    {\n      label: 'Description',\n      field: 'Description',\n    },\n    {\n      label: 'CIK',\n      field: 'CIK',\n    },\n    {\n      label: 'Exchange',\n      field: 'Exchange',\n    },\n    {\n      label: 'Currency',\n      field: 'Currency',\n    },\n    {\n      label: 'Country',\n      field: 'Country',\n    },\n    {\n      label: 'Sector',\n      field: 'Sector',\n    },\n    {\n      label: 'Address',\n      field: 'Address',\n    },\n    {\n      label: 'FiscalYearEnd',\n      field: 'FiscalYearEnd',\n    },\n    {\n      label: 'LatestQuarter',\n      field: 'LatestQuarter',\n    },\n    {\n      label: 'MarketCapitalization',\n      field: 'MarketCapitalization',\n    },\n    {\n      label: 'EBITDA',\n      field: 'EBITDA',\n    },\n    {\n      label: 'PERatio',\n      field: 'PERatio',\n    },\n    {\n      label: 'PEGRatio',\n      field: 'PEGRatio',\n    },\n    {\n      label: 'BookValue',\n      field: 'BookValue',\n    },\n    {\n      label: 'DividendPerShare',\n      field: 'DividendPerShare',\n    },\n    {\n      label: 'DividendYield',\n      field: 'DividendYield',\n    },\n    {\n      label: 'EPS',\n      field: 'EPS',\n    },\n    {\n      label: 'RevenuePerShareTTM',\n      field: 'RevenuePerShareTTM',\n    },\n    {\n      label: 'ProfitMargin',\n      field: 'ProfitMargin',\n    },\n    {\n      label: 'OperatingMarginTTM',\n      field: 'OperatingMarginTTM',\n    },\n    {\n      label: 'ReturnOnAssetsTTM',\n      field: 'ReturnOnAssetsTTM',\n    },\n    {\n      label: 'ReturnOnEquityTTM',\n      field: 'ReturnOnEquityTTM',\n    },\n    {\n      label: 'RevenueTTM',\n      field: 'RevenueTTM',\n    },\n    {\n      label: 'GrossProfitTTM',\n      field: 'GrossProfitTTM',\n    },\n    {\n      label: 'DilutedEPSTTM',\n      field: 'DilutedEPSTTM',\n    },\n    {\n      label: 'QuarterlyEarningsGrowthYOY',\n      field: 'QuarterlyEarningsGrowthYOY',\n    },\n    {\n      label: 'AnalystTargetPrice',\n      field: 'AnalystTargetPrice',\n    },\n    {\n      label: 'TrailingPE',\n      field: 'TrailingPE',\n    },\n    {\n      label: 'ForwardPE',\n      field: 'ForwardPE',\n    },\n    {\n      label: 'PriceToSalesRatioTTM',\n      field: 'PriceToSalesRatioTTM',\n    },\n    {\n      label: 'PriceToBookRatio',\n      field: 'PriceToBookRatio',\n    },\n    {\n      label: 'EVToRevenue',\n      field: 'EVToRevenue',\n    },\n    {\n      label: 'EVToEBITDA',\n      field: 'EVToEBITDA',\n    },\n    {\n      label: 'Beta',\n      field: 'Beta',\n    },\n    {\n      label: '52WeekHigh',\n      field: '52WeekHigh',\n    },\n    {\n      label: '50DayMovingAverage',\n      field: '50DayMovingAverage',\n    },\n    {\n      label: '200DayMovingAverage',\n      field: '200DayMovingAverage',\n    },\n    {\n      label: 'SharesOutstanding',\n      field: 'SharesOutstanding',\n    },\n    {\n      label: 'SharesShort',\n      field: 'SharesShort',\n    },\n    {\n      label: 'SharesShortPriorMonth',\n      field: 'SharesShortPriorMonth',\n    },\n    {\n      label: 'ShortRatio',\n      field: 'ShortRatio',\n    },\n    {\n      label: 'ShortPercentOutstanding',\n      field: 'ShortPercentOutstanding',\n    },\n    {\n      label: 'PercentInsiders',\n      field: 'PercentInsiders',\n    },\n    {\n      label: 'PercentInstitutions',\n      field: 'PercentInstitutions',\n    },\n    {\n      label: 'ForwardAnnualDividendRate',\n      field: 'ForwardAnnualDividendRate',\n    },\n    {\n      label: 'ForwardAnnualDividendYield',\n      field: 'ForwardAnnualDividendYield',\n    },\n    {\n      label: 'PayoutRatio',\n      field: 'PayoutRatio',\n    },\n    {\n      label: 'DividendDate',\n      field: 'DividendDate',\n    },\n    {\n      label: 'ExDividendDate',\n      field: 'ExDividendDate',\n    },\n    {\n      label: 'LastSplitFactor',\n      field: 'LastSplitFactor',\n    },\n    {\n      label: 'LastSplitDate',\n      field: 'LastSplitDate',\n    },\n  ]}, [])\n\n  const [datatable, setDatatable] = useDatatable({\n    columns: hearder_columns,\n    rows: [],\n  });\n\n  const updateCsvDownload = useCsvDownloadUpdate();\n\n  const wrapSetDatatable = (data) => {\n    setDatatable(data)\n    updateCsvDownload([...data.rows])\n  }\n\n\n\n  const loadFloatDetails = async (pageNum) => {\n    setLoadingData(true)\n    const floatDetails = await getFloatsDetails(pageNum, pageAmount)\n\n    if (floatDetails) {\n      setWholeRows(floatDetails.page_total)\n      wrapSetDatatable({\n        columns: hearder_columns,\n        rows: floatDetails.floats,\n      })\n    }\n\n    setLoadingData(false)\n  }\n\n  const loadFloatsFilterOption = async () => {\n    const scannerOptions = await getFloatsFilterOptions()\n    if (scannerOptions.success) {\n      const exchanges = [{\n        value: '',\n        label: 'All'\n      }]\n      scannerOptions.result.exchanges.map(exchange => {\n        if (exchange === '') {\n          return null\n        }\n        exchanges.push({\n          value: exchange,\n          label: exchange\n        })\n      })\n\n      const industries = [{\n        value: '',\n        label: 'All'\n      }]\n\n      scannerOptions.result.industry.map(industry => {\n        if (industry !== '' && industry !== null) {\n          industries.push({\n            value: industry,\n            label: industry\n          })\n        }\n      })\n\n      const sectors = [{\n        value: '',\n        label: 'All'\n      }]\n      scannerOptions.result.sector.forEach(sector => {\n        if (sector !== '' && sector !== null) {\n          sectors.push({\n            value: sector,\n            label: sector\n          })\n        }\n      })\n\n      setOptionsExchanges(exchanges)\n      setOptionsIndustry(industries)\n      setOptionsSector(sectors)\n    }\n  }\n\n  useEffect(() => {\n    loadFloatDetails(currentPage)\n    loadFloatsFilterOption()\n  }, [])\n\n  const handleSignout = () => {\n    auth.signout()\n    history.push('/login')\n  }\n\n  const handlePrevClick = () => {\n    setCurrentPage(currentPage - 1)\n    loadFloatDetails(currentPage - 1)\n  }\n\n  const handleNextClick = () => {\n    setCurrentPage(currentPage + 1)\n    loadFloatDetails(currentPage + 1)\n  }\n\n  const handleSectorChange = async (e) => {\n    setLoadingData(true)\n    setSector(e)\n\n    const floatDetails = await getFloatsDetails(currentPage, pageAmount, exchange ? exchange.value : '', industry ? industry.value : '', e.value)\n\n    if (floatDetails) {\n      setWholeRows(floatDetails.page_total)\n      wrapSetDatatable({\n        columns: hearder_columns,\n        rows: floatDetails.floats,\n      })\n    }\n    setLoadingData(false)\n  }\n\n  const handleExchangeChange = async (e) => {\n    setLoadingData(true)\n    setExchange(e)\n\n    const floatDetails = await getFloatsDetails(currentPage, pageAmount, e.value, industry ? industry.value : '', sector ? sector.value : '')\n\n    if (floatDetails) {\n      setWholeRows(floatDetails.page_total)\n      wrapSetDatatable({\n        columns: hearder_columns,\n        rows: floatDetails.floats,\n      })\n    }\n    setLoadingData(false)\n  }\n\n  const handleIndustryChange = async (e) => {\n    setLoadingData(true)\n    setIndustry(e)\n\n    const floatDetails = await getFloatsDetails(currentPage, pageAmount, exchange ? exchange.value : '', e.value, sector ? sector.value : '')\n    setWholeRows(floatDetails.page_total)\n    wrapSetDatatable({\n      columns: hearder_columns,\n      rows: floatDetails.floats,\n    })\n    setLoadingData(false)\n  }\n\n  return (\n    <div className=\"hunter-chart-container\">\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark hunter-nav-bar\">\n        <div className=\"logo-title\">\n          <a href=\"/chart\" className=\"hunter-navbar-brand\">\n            Violette AM - Client Portal\n          </a>\n        </div>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/chart\"} className=\"nav-link\"></Link>\n          </li>\n        </div>\n        <Collapse navbar isOpen={collapseOpen}>\n          <Nav className=\"ml-auto\" navbar>\n            <UncontrolledDropdown nav>\n              <DropdownToggle\n                caret\n                color=\"default\"\n                nav\n                onClick={(e) => e.preventDefault()}\n              >\n                <div className=\"photo\">\n                  <img\n                    alt=\"...\"\n                    src={require(\"assets/img/anime3.png\").default}\n                  />\n                </div>\n                <p className=\"d-lg-none\">Log out</p>\n              </DropdownToggle>\n              <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                <DropdownItem divider tag=\"li\" />\n                <NavLink tag=\"li\">\n                  <DropdownItem className=\"nav-item\" onClick={() => {handleSignout()}}>Log out</DropdownItem>\n                </NavLink>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <li className=\"separator d-lg-none\" />\n          </Nav>\n        </Collapse>\n      </nav>\n      <div className=\"col-sm-12 hunter-data-table-container scanner-page-container\">\n        <div className=\"hunter-data-table-title\">\n          Floats Table\n        </div>\n        <div className=\"hunter-search-filter-area\">\n          <div className=\"select-option\">\n            <Select\n              value={exchange}\n              onChange={handleExchangeChange}\n              options={optionsExchange}\n              placeholder=\"Exchange\"\n            />\n          </div>\n          <div className=\"select-option\">\n            <Select\n              value={sector}\n              onChange={handleSectorChange}\n              options={optionsSector}\n              placeholder=\"Sector\"\n            />\n          </div>\n          <div className=\"select-option\">\n            <Select\n              value={industry}\n              onChange={handleIndustryChange}\n              options={optionsIndustry}\n              placeholder=\"Industry\"\n            />\n          </div>\n          <ButtonCsvDownload filename={\"floats.csv\"}>Csv Download</ButtonCsvDownload>\n        </div>\n        {isLoadingData && <div className=\"hunter-spinner-area\"><span className=\"mr-30\">Loading ...</span>    <Spinner>Loading</Spinner></div>}\n        {!isLoadingData &&\n        <>\n          <MDBTable\n            hover\n            small={true}\n            maxHeight=\"500px\"\n            entries={10}\n            data={datatable}\n            dark={true}\n            small={true}\n            scrollY={true}\n          >\n            <MDBTableHead  className=\"watch-list-data-table-header\">\n              <tr>\n                {hearder_columns.map((item) => (\n                  <th key={item.label} className={`hunter-custom-table-floats-chart-th`}>{item.label}</th>\n                ))}\n              </tr>\n            </MDBTableHead>\n            <MDBTableBody\n                className={\"financial-table-body-1\"}\n              >\n              {datatable.rows.map((item) => (\n                <tr key={`row-${item.symbol}`}>\n                  {hearder_columns.map((column) =>\n                    (\n                      <td\n                        key={`${item.symbol}-${column.field}`}\n                        className={`${column.field === 'Description' ? 'hunter-custom-table-description-td' : ''} hunter-custom-table-td`}\n                      >\n                        {item[column.field]}\n                      </td>\n                    )\n                  )}\n                </tr>\n              ))}\n            </MDBTableBody>\n          </MDBTable>\n          <Pagination>\n            <Pagination.Item>{(currentPage-1)*10 + 1}</Pagination.Item>\n            <Pagination.Item>{(currentPage) * 10}</Pagination.Item>\n            <Pagination.Item> of </Pagination.Item>\n            <Pagination.Item> { wholeRows } </Pagination.Item>\n            <Pagination.Prev disabled={currentPage <= 0} onClick={() => { handlePrevClick() }}/>\n            <Pagination.Next disabled={(currentPage + 1) >= wholeRows / 10} onClick={() => { handleNextClick() }}/>\n          </Pagination>\n        </>\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default FloatsComponent;\n","import React from \"react\";\nimport {\n  Button\n} from \"reactstrap\";\n\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport FloatsComponent from 'components/Floats/FloatsComponent.js'\nimport { CsvDownloadProvider } from \"contexts/CsvDownloadContext\";\n\nimport { routes } from \"routes.js\";\n\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\n\nfunction Floats() {\n  const [isShowSidebar, setShowSidebar] = React.useState(false);\n  const [selectedInstance, setSelectedInstance] = React.useState('floats');\n\n  const handleSidebarChange = () => {\n    setShowSidebar(!isShowSidebar);\n  };\n\n  const handleInstanceChange = (instance) => {\n    setSelectedInstance(instance)\n  }\n\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color }) => (\n        <React.Fragment>\n          <div className=\"wrapper hunter-wrapper\">\n            {!isShowSidebar && (\n              <Button\n                className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\n                onClick={handleSidebarChange}\n              >\n                <i className=\"tim-icons icon-align-left-2\"/>\n              </Button>\n            )}\n            {isShowSidebar && (\n              <Sidebar\n                isAdminPage={false}\n                routes={routes}\n                subInstance={'tradedatatable'}\n                selectedInstance={selectedInstance}\n                handleSidebarChange={handleSidebarChange}\n                handleInstanceChange={handleInstanceChange}\n              />\n            )}\n            <div className=\"col-sm-12\">\n              <CsvDownloadProvider>\n                <FloatsComponent />\n              </CsvDownloadProvider>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nexport default Floats;","import React, { useState } from \"react\";\nimport { validateEmail } from 'utils/helper'\nimport { forgotPassword } from 'api/Api'\n\nconst ForgotPassword = () => {\n  const [email, setEmail] = useState('')\n  const [error, setError] = useState(-1)\n  const [isLoading, setIsLoading] = useState(false)\n  const [message, setMessage] = useState('')\n    \n  const handleEmailChange = (e) => {\n    setEmail(e.target.value)\n  }\n    \n  const handleForgotPassword = async () => {\n    if (!validateEmail(email)) {\n      setError(1)\n      setMessage('Invalid Email!')\n      return\n    }\n    setIsLoading(true)\n    let result = await forgotPassword(email)\n    setIsLoading(false)\n    if ( result.success ) {\n      setError(0)\n      setMessage('Password is sent to your email')\n      return\n    }\n    setError(1)\n    setMessage('Invalid Email!')\n    return\n  }\n\n  const handleModalClose = () => {\n    setError(-1);\n    setMessage('');\n  }\n\n  return (\n    <div className={\"login-form\"}>\n      <div>\n        <h3 className=\"hunter-mb-3\">Forgot Password</h3>\n\n        <div className=\"form-group\">\n          <label>Email</label>\n          <input\n            type=\"text\"\n            className=\"form-control hunter-form-control\"\n            placeholder=\"Enter email\"\n            value={email}\n            onChange={(e) => { handleEmailChange(e)}}\n          />\n        </div>\n          <button\n            className=\"btn btn-dark btn-lg btn-block hunter-signin-button\"\n            onClick={handleForgotPassword}\n          >\n            {isLoading && (\n                <span className=\"spinner-border spinner-border-sm hunter-spinner-button\" role=\"status\" aria-hidden=\"true\"></span>\n            )}\n            Send\n          </button>\n          <div className=\"form-group\">\n            <p className=\"sign-up-area text-right\">\n                <a href=\"/signin\">Sign In?</a>\n            </p>\n          </div>\n      </div>\n      {error !== -1 && \n        <div class=\"alert alert-primary\" role=\"alert\">\n          <div className=\"alert-container\">\n            <div className=\"alert-content\">\n              {message}\n            </div>\n            <button type=\"button\" className=\"btn btn-primary modal-close-button hunter-modal-small-button\" onClick={() => { handleModalClose() }}>Close</button>\n          </div>\n        </div>   \n      }\n    </div>\n  );\n}\n\nexport default ForgotPassword","import React, { useState } from \"react\";\nimport { passwordConfirmReset } from 'api/Api'\nimport { useHistory } from \"react-router-dom\";\n\nconst PasswordResetConfirm = () => {\n  let history = useHistory();\n  const [password1, setPassword1] = useState('')\n  const [password2, setPassword2] = useState('')\n  const [error, setError] = useState(-1)\n  const [isLoading, setIsLoading] = useState(false)\n  const [message, setMessage] = useState('')\n\n  const [pathname] = useState(history.location.pathname)\n\n  const handlePassword1Change = (e) => {\n    setPassword1(e.target.value)\n  }\n  \n  const handlePassword2Change = (e) => {\n    setPassword2(e.target.value)\n  }\n  \n  const delay = ms => new Promise(res => setTimeout(res, ms));\n\n  const handlePasswordResetConfirm = async () => {\n    if (!password1.length || !password2.length) {\n      setError(1)\n      setMessage('password is empty')\n      return\n    }\n\n    if (!password1.length || !password2.length) { \n        setError(1)\n        setMessage('password did not match')\n        return    \n    }\n\n    setIsLoading(true)\n    const res = await passwordConfirmReset(password1, password2, pathname)\n    setIsLoading(false)\n    setError(0)\n    if (res.success) {\n      setMessage(`success: ${res.content}`)  \n      await delay(3000);\n      history.push('/login')\n    } else {\n      setMessage(`error: ${res.content}`)  \n    }\n    return\n  }\n\n  const handleModalClose = () => {\n    setError(-1);\n    setMessage('');\n  }\n\n  return (\n    <div className={\"login-form\"}>\n      <div>\n        <h3 className=\"hunter-mb-3\">Forgot Password</h3>\n\n        <div className=\"form-group\">\n          <label>New Password</label>\n          <input\n            type=\"password\"\n            className=\"form-control hunter-form-control\"\n            placeholder=\"Enter new password\"\n            value={password1}\n            onChange={(e) => { handlePassword1Change(e)}}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Confirm Password</label>\n          <input\n            type=\"password\"\n            className=\"form-control hunter-form-control\"\n            placeholder=\"Enter confirm password\"\n            value={password2}\n            onChange={(e) => { handlePassword2Change(e)}}\n          />\n        </div>\n        <button\n          className=\"btn btn-dark btn-lg btn-block hunter-signin-button\"\n          onClick={handlePasswordResetConfirm}\n        >\n          {isLoading && (\n              <span className=\"spinner-border spinner-border-sm hunter-spinner-button\" role=\"status\" aria-hidden=\"true\"></span>\n          )}\n          Reset\n        </button>\n        <div className=\"form-group\">\n          <p className=\"sign-up-area text-right\">\n            <a href=\"/signin\">Sign In?</a>\n          </p>\n        </div>\n      </div>\n      {error !== -1 && \n        <div class=\"alert alert-primary\" role=\"alert\">\n          <div className=\"alert-container\">\n            <div className=\"alert-content\">\n              {message}\n            </div>\n            <button type=\"button\" className=\"btn btn-primary modal-close-button hunter-modal-small-button\" onClick={() => { handleModalClose() }}>Close</button>\n          </div>\n        </div>   \n      }\n    </div>\n  );\n}\n\nexport default PasswordResetConfirm","import { isNotDefined, isDefined } from \"react-stockcharts/lib/utils\";\n\nexport function saveInteractiveNode(chartId) {\n\treturn node => {\n\t\tthis[`node_${chartId}`] = node;\n\t};\n}\n\nexport function handleSelection(type, chartId) {\n\treturn selectionArray => {\n\t\tconst key = `${type}_${chartId}`;\n\t\tconst interactive = this.state[key].map((each, idx) => {\n\t\t\treturn {\n\t\t\t\t...each,\n\t\t\t\tselected: selectionArray[idx]\n\t\t\t};\n\t\t});\n\t\tthis.setState({\n\t\t\t[key]: interactive\n\t\t});\n\t};\n}\n\nexport function saveInteractiveNodes(type, chartId) {\n\treturn node => {\n\t\tif (isNotDefined(this.interactiveNodes)) {\n\t\t\tthis.interactiveNodes = {};\n\t\t}\n\t\tconst key = `${type}_${chartId}`;\n\t\tif (isDefined(node) || isDefined(this.interactiveNodes[key])) {\n\t\t\t// console.error(node, key)\n\t\t\t// console.log(this.interactiveNodes)\n\t\t\tthis.interactiveNodes = {\n\t\t\t\t...this.interactiveNodes,\n\t\t\t\t[key]: { type, chartId, node },\n\t\t\t};\n\t\t}\n\t};\n}\n\nexport function getInteractiveNodes() {\n\treturn this.interactiveNodes;\n}","\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { format } from \"d3-format\";\nimport { timeFormat } from \"d3-time-format\";\nimport dayjs from \"dayjs\";\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\nimport {\n\tBarSeries,\n} from \"react-stockcharts/lib/series\";\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\nimport {\n\tCrossHairCursor,\n\tMouseCoordinateX,\n\tMouseCoordinateY,\n} from \"react-stockcharts/lib/coordinates\";\n\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\nimport { ema, macd } from \"react-stockcharts/lib/indicator\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\nimport { DrawingObjectSelector } from \"react-stockcharts/lib/interactive\";\nimport { last, toObject } from \"react-stockcharts/lib/utils\";\nimport {\n\tsaveInteractiveNodes,\n\tgetInteractiveNodes,\n} from \"./interactiveutils\";\n\nclass CandleStickChartWithEquidistantChannel extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.onKeyPress = this.onKeyPress.bind(this);\n\t\t// this.onDrawComplete = this.onDrawComplete.bind(this);\n\t\tthis.saveInteractiveNode = this.saveInteractiveNode.bind(this);\n\t\tthis.saveCanvasNode = this.saveCanvasNode.bind(this);\n\t\tthis.handleSelection = this.handleSelection.bind(this);\n\n\t\tthis.saveInteractiveNodes = saveInteractiveNodes.bind(this);\n\t\tthis.getInteractiveNodes = getInteractiveNodes.bind(this);\n\n\t\tthis.state = {\n\t\t\tenableInteractiveObject: true,\n\t\t\tchannels_1: [],\n\t\t\tchannels_3: [],\n\t\t};\n\t}\n\tsaveInteractiveNode(node) {\n\t\tthis.node = node;\n\t}\n\tsaveCanvasNode(node) {\n\t\tthis.canvasNode = node;\n\t}\n\tcomponentDidMount() {\n\t\tdocument.addEventListener(\"keyup\", this.onKeyPress);\n\t}\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener(\"keyup\", this.onKeyPress);\n\t}\n\thandleSelection(interactives) {\n\t\tconst state = toObject(interactives, each => {\n\t\t\treturn [\n\t\t\t\t`channels_${each.chartId}`,\n\t\t\t\teach.objects,\n\t\t\t];\n\t\t});\n\t\tthis.setState(state);\n\t}\n\t// onDrawComplete(channels_1) {\n\t// \t// this gets called on\n\t// \t// 1. draw complete of drawing object\n\t// \t// 2. drag complete of drawing object\n\t// \tthis.setState({\n\t// \t\tenableInteractiveObject: false,\n\t// \t\tchannels_1\n\t// \t});\n\t// }\n\tonKeyPress(e) {\n\t}\n\trender() {\n\t\tconst ema26 = ema()\n\t\t\t.id(0)\n\t\t\t.options({ windowSize: 26 })\n\t\t\t.merge((d, c) => { d.ema26 = c; })\n\t\t\t.accessor(d => d.ema26);\n\n\t\tconst ema12 = ema()\n\t\t\t.id(1)\n\t\t\t.options({ windowSize: 12 })\n\t\t\t.merge((d, c) => {d.ema12 = c;})\n\t\t\t.accessor(d => d.ema12);\n\n\t\tconst macdCalculator = macd()\n\t\t\t.options({\n\t\t\t\tfast: 12,\n\t\t\t\tslow: 26,\n\t\t\t\tsignal: 9,\n\t\t\t})\n\t\t\t.merge((d, c) => {d.macd = c;})\n\t\t\t.accessor(d => d.macd);\n\n\t\tconst { type, data: initialData, width, ratio } = this.props;\n    initialData.dataPoints.forEach(line => {\n\t\t\tline.date = dayjs(line.calendarDate).toDate();\n\t\t});\n\t\tconst { channels_1, channels_3 } = this.state;\n\n\t\tconst calculatedData = macdCalculator(ema12(ema26(initialData.dataPoints)));\n\t\tconst xScaleProvider = discontinuousTimeScaleProvider\n\t\t\t.inputDateAccessor(d => d.date);\n\t\tconst {\n\t\t\tdata,\n\t\t\txScale,\n\t\t\txAccessor,\n\t\t\tdisplayXAccessor,\n\t\t} = xScaleProvider(calculatedData);\n\n\t\tconst start = xAccessor(last(data));\n\t\tconst end = xAccessor(data[Math.max(0, data.length - 150)]);\n\t\tconst xExtents = [start, end];\n\n\t\treturn (\n\t\t\t<ChartCanvas ref={this.saveCanvasNode}\n\t\t\t\theight={50}\n\t\t\t\twidth={width}\n\t\t\t\tratio={ratio}\n\t\t\t\tmargin={{ left: 0, right: 0, top: 20, bottom: 30 }}\n\t\t\t\ttype={type}\n\t\t\t\tseriesName=\"MSFT\"\n\t\t\t\tdata={data}\n\t\t\t\txScale={xScale}\n\t\t\t\txAccessor={xAccessor}\n\t\t\t\tdisplayXAccessor={displayXAccessor}\n\t\t\t\txExtents={xExtents}\n\t\t\t>\n\t\t\t\t\n\t\t\t\t<Chart id={3} height={50}\n\t\t\t\t\tyExtents={[d => d.value]}\n\t\t\t\t\t// origin={(w, h) => [0, h - 300]}\n\t\t\t\t>\n\t\t\t\t\t{/* <XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" ticks={5} tickFormat={format(\".2s\")}/> */}\n\n          \t\t\t{/* <MouseCoordinateX\n\t\t\t\t\t\tat=\"bottom\"\n\t\t\t\t\t\torient=\"bottom\"\n\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"left\"\n\t\t\t\t\t\torient=\"left\"\n\t\t\t\t\t\tdisplayFormat={format(\".4s\")} /> */}\n\n\t\t\t\t\t<BarSeries yAccessor={d => d.value} fill={d => initialData.color} baseAt={(xScale, yScale, d) => yScale(0)} />\n\t\t\t\t</Chart>\n\t\t\t\t\t{/* <CrossHairCursor /> */}\n\t\t\t\t\t{/* <DrawingObjectSelector\n\t\t\t\t\t\tenabled={!this.state.enableInteractiveObject}\n\t\t\t\t\t\tgetInteractiveNodes={this.getInteractiveNodes}\n\t\t\t\t\t\tdrawingObjectMap={{\n\t\t\t\t\t\t\tEquidistantChannel: \"channels\"\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonSelect={this.handleSelection}\n\t\t\t\t\t/> */}\n\t\t\t</ChartCanvas>\n\t\t);\n\t}\n}\n\nCandleStickChartWithEquidistantChannel.propTypes = {\n\tdata: PropTypes.array.isRequired,\n\twidth: PropTypes.number.isRequired,\n\tratio: PropTypes.number.isRequired,\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\n};\n\nCandleStickChartWithEquidistantChannel.defaultProps = {\n\ttype: \"svg\",\n};\n\nCandleStickChartWithEquidistantChannel = fitWidth(CandleStickChartWithEquidistantChannel);\n\nexport default CandleStickChartWithEquidistantChannel;\n","import React, { useState, useEffect } from 'react';\nimport Chart from './Chart';\nimport './SmallBarChart.css'\n\nconst GroupBarChart = (props) => {\n  const { data, chartData, globalAggregationType } = props;\n\n  const [aggregationTypeForOne, setAggregrationTypeForOne] = useState();\n  const [currentData, setCurrentData] = useState();\n\n  const filterByAggregationTyoe = (selectedData) => {\n    if (selectedData) {\n      let filteredData = {...selectedData};\n      const dataPoints = filteredData.dataPoints.filter(\n        (item) => aggregationTypeForOne === \"\" || item.period === aggregationTypeForOne\n      );\n      filteredData['dataPoints'] = dataPoints;\n      return filteredData;\n    }\n    return selectedData;\n  };\n\n  useEffect(() => {\n    setAggregrationTypeForOne(globalAggregationType);\n    const filteredSelectedData = filterByAggregationTyoe(data);\n    setCurrentData(filteredSelectedData);\n  }, [globalAggregationType]);\n\n  useEffect(() => {\n    const filteredSelectedData = filterByAggregationTyoe(data);\n    setCurrentData(filteredSelectedData);\n  }, [aggregationTypeForOne]);\n\n  return (\n    <div className=\"small-bar-chart\">\n      {currentData && (\n        currentData.dataPoints.length > 0 ? (\n          <Chart type={'svg'} data={currentData} />\n        ) : (\n          <div className=\"no-data\">No data...</div>\n        )\n      )}\n    </div>\n  );\n};\n\nexport default GroupBarChart;\n","import \"./style.css\";\nimport Select from 'react-select';\nimport { useEffect, useState } from \"react\";\n\nconst CustomDropDown = (props) => {\n  const { nodes, onChange, inputvalue } = props;\n  const [options, setOptions] = useState();\n  const [selectedNode, setSelectedNode] = useState();\n\n  useEffect(() => {\n    let nodeOptions = [{\n      label: \"All\",\n      value: \"All\",\n    }];\n    nodes.map((node) => {\n      if (\"children\" in node) {\n        node.children.map((child) => {\n          nodeOptions.push({\n            value: child.value,\n            label: child.label,\n          });\n        })\n      }\n    });\n\n    setOptions(nodeOptions);\n\n  }, [nodes]);\n\n  return (\n    <div className=\"dropdown-container\">\n      <Select\n        ref={inputvalue}\n        value={selectedNode}\n        onChange={onChange}\n        options={options}\n        className=\"modal-filter-select-box\"\n        placeholder=\"\"\n      />\n    </div>\n  );\n}\n\nexport default CustomDropDown;\n","import React from \"react\";\nimport CheckboxTree from \"react-checkbox-tree\";\nimport { cloneDeep } from 'lodash';\nimport CustomDropDown from \"./dropDown\";\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\nimport \"./style.css\";\n\nclass Widget extends React.Component {\n  state = {\n    checkedAvailableItem: [],\n    expandedAvailableItem: [],\n    selectedNode: {\n      value: \"\",\n      label: \"\",\n    },\n    nodesFilteredAvailableItem: [],\n    nodesAvailableItem: [],\n\n    restoreAvailableItems: [],\n    restoreCurrentItems: this.props.currentNodes,\n    \n    checkedCurrrentItem: [],\n    expandedCurrrentItem: [],\n    currentNodes: this.props.currentNodes,\n  };\n\n  constructor(props) {\n    super(props);\n    this.onCheckAvailableItem = this.onCheckAvailableItem.bind(this);\n    this.onExpandAvailableItem = this.onExpandAvailableItem.bind(this);\n    this.onFilterChangeAvailableItem = this.onFilterChangeAvailableItem.bind(this);\n\n    this.onCheckCurrentItem = this.onCheckCurrentItem.bind(this);\n    this.onExpandCurrentItem = this.onExpandCurrentItem.bind(this);\n\n    this.onAddItems = this.onAddItems.bind(this);\n    this.onRemoveItems = this.onRemoveItems.bind(this);\n    this.onLoadDefaults = this.onLoadDefaults.bind(this);\n\n    this.onMoveUp = this.onMoveUp.bind(this);\n    this.onMoveDown = this.onMoveDown.bind(this);\n\n    this.onRestoreClicked = this.onRestoreClicked.bind(this);\n    this.onOkClicked = this.onOkClicked.bind(this);\n    this.onCancelClicked = this.onCancelClicked.bind(this);\n\n    this.onGetAvailabelNodes = this.onGetAvailabelNodes.bind(this);\n    this.onLoadTotalNodes = this.onLoadTotalNodes.bind(this);\n    this.isExistItem = this.isExistItem.bind(this);\n\n  }\n\n  onGetAvailabelNodes() {\n    const currentItems = cloneDeep(this.state.currentNodes);\n    const totalNodes = cloneDeep(this.props.totalNodes);\n\n    let availableNodes = [];\n\n    totalNodes.map((totalNode) => {\n      let parentFlag = false;\n      currentItems.map((totalCurrentNode) => {\n        if (totalNode.value === totalCurrentNode.value) {\n          parentFlag = true;\n          if (\"children\" in totalCurrentNode && \"children\" in totalNode) {\n            let totalCurrnetChildrens = [];\n            totalCurrentNode.children.map((totalCurrentChild) => {\n              totalCurrnetChildrens.push(totalCurrentChild.value);\n            });\n            totalNode.children.map((totalChild) => {\n              if (!(totalCurrnetChildrens.includes(totalChild.value))) {\n                let childFlag = false;\n                availableNodes.map((availableNode, index) => {\n                  if (availableNode.value === totalCurrentNode.value) {\n                    availableNodes[index].children.push(totalChild);\n                    childFlag = true;\n                  }\n                })\n\n                if (!childFlag) {\n                  availableNodes.push({ ...totalNode, children: [totalChild] });\n                }\n              }\n            })\n          }\n        }\n      });\n\n      if (!parentFlag) {\n        availableNodes.push(totalNode);\n      }\n    })\n\n    this.setState({\n      nodesAvailableItem: availableNodes,\n      nodesFilteredAvailableItem: availableNodes,\n      restoreAvailableItems: availableNodes,\n    });\n  }\n\n  onCheckAvailableItem(checkedAvailableItem) {\n    this.setState({ checkedAvailableItem });\n  }\n\n  onExpandAvailableItem(expandedAvailableItem) {\n    this.setState({ expandedAvailableItem }, () => {\n      console.log(this.state.expandedAvailableItem);\n    });\n  }\n\n  onCheckCurrentItem(checkedCurrentItem) {\n    this.setState({ checkedCurrentItem });\n  }\n\n  onExpandCurrentItem(expandedCurrentItem) {\n    this.setState({ expandedCurrentItem }, () => {\n      console.log(this.state.expandedCurrentItem);\n    });\n  }\n\n  onFilterChangeAvailableItem(e) {\n    this.setState({ selectedNode: e });\n    let filteredNodes = [];\n    if (e.value === \"All\") {\n      filteredNodes = cloneDeep(this.state.nodesAvailableItem);\n    } else {\n      const availableNodes = cloneDeep(this.state.nodesAvailableItem);\n      if (e.label.includes(\"parent\")) {\n        filteredNodes = availableNodes.filter((node) => node.label === e.label);\n      } else {\n        availableNodes.map((node) => {\n          if (\"children\" in node) {\n            node.children.map((childNode) => {\n              if (childNode.label === e.label) {\n                filteredNodes.push(node);\n              }\n            })\n          }\n        })\n      }\n    }\n    \n    this.setState({\n      nodesFilteredAvailableItem: filteredNodes,\n    })\n  }\n\n  sortNodes(nodes) {\n    let sortedNodes = nodes;\n    // let suffixA, suffixB;\n    \n    // sortedNodes.map((node) => {\n    //   if (\"children\" in node) {\n    //     node.children.sort(function (a, b) {\n    //       suffixA = parseInt(a.value.split(\"_\")[3]);\n    //       suffixB = parseInt(b.value.split(\"_\")[3]);\n    //       return suffixA - suffixB;\n    //     });\n    //   }\n    // })\n\n    // sortedNodes.sort(function (a, b) {\n    //   suffixA = parseInt(a.value.split(\"_\")[2]);\n    //   suffixB = parseInt(b.value.split(\"_\")[2]);\n    //   return suffixA - suffixB;\n    // });\n\n    return sortedNodes;\n  }\n\n  onAddItems() {\n    const checkedItems = cloneDeep(this.state.checkedAvailableItem);\n    const availableItems = cloneDeep(this.state.nodesAvailableItem);\n    const totalNodes = cloneDeep(this.props.totalNodes);\n\n    let availableNodes = [];\n    let newCurrentNodes = [];\n\n    if (checkedItems) {\n      checkedItems.map((value) => {\n        availableItems.map((availableItem) => {\n          if (value.includes(\"child\")) {\n            let currentChildItems = [];\n            if (\"children\" in availableItem) {\n              availableItem.children.map((childItem) => {\n                if (childItem.value === value) {\n                  currentChildItems.push(childItem);\n                }\n              })\n    \n              if (currentChildItems.length > 0) {\n                newCurrentNodes.push({ ...availableItem, children: currentChildItems });\n              }\n            }\n          } else {\n            if (availableItem.value === value) {\n              newCurrentNodes.push(availableItem);\n            }\n          }\n        })\n      });\n\n      \n      // merge the new current nodes into original current nodes\n      const originCurrentNodes = cloneDeep(this.state.currentNodes);\n      let totalNewCurrentNodes = [];\n      newCurrentNodes.map((newCurrentNode) => {\n        let exist = false;\n        originCurrentNodes.map((currentNode) => {\n          if (currentNode.value === newCurrentNode.value) {\n            let currentChildItems = currentNode.children;\n            newCurrentNode.children.map((newChildItem) => {\n              currentChildItems.push(newChildItem);\n            });\n            // totalNewCurrentNodes.push({...currentNode})\n            // totalNewCurrentNodes.push({ ...currentNode, children: currentChildItems });\n            exist = true;\n          }\n        })\n        \n        if (!exist) {\n          let parentExist = false;\n          totalNewCurrentNodes.map((node, index) => {\n            if (node.value === newCurrentNode.value) {\n              totalNewCurrentNodes[index].children.push(newCurrentNode.children[0]);\n              parentExist = true;\n            }\n          })\n          if (!parentExist) {\n            totalNewCurrentNodes.push(newCurrentNode);\n          }\n        }\n      })\n      \n      let totalCurrentNodes = totalNewCurrentNodes;\n      originCurrentNodes.map((originNode) => {\n        let exist = false;\n        totalNewCurrentNodes.map((newNode) => {\n          if (originNode.value === newNode.value) {\n            exist = true;\n          }\n        })\n        if (!exist) {\n          totalCurrentNodes.push(originNode);\n        }\n      });\n\n  \n      totalNodes.map((totalNode) => {\n        let parentFlag = false;\n        totalCurrentNodes.map((totalCurrentNode) => {\n          if (totalNode.value === totalCurrentNode.value) {\n            parentFlag = true;\n            if (\"children\" in totalCurrentNode && \"children\" in totalNode) {\n              let totalCurrnetChildrens = [];\n              totalCurrentNode.children.map((totalCurrentChild) => {\n                totalCurrnetChildrens.push(totalCurrentChild.value);\n              });\n              totalNode.children.map((totalChild) => {\n                if (!(totalCurrnetChildrens.includes(totalChild.value))) {\n                  let childFlag = false;\n                  availableNodes.map((availableNode, index) => {\n                    if (availableNode.value === totalCurrentNode.value) {\n                      availableNodes[index].children.push(totalChild);\n                      childFlag = true;\n                    }\n                  })\n  \n                  if (!childFlag) {\n                    availableNodes.push({ ...totalNode, children: [totalChild] });\n                  }\n                }\n              })\n            }\n          }\n        });\n  \n        if (!parentFlag) {\n          availableNodes.push(totalNode);\n        }\n      })\n\n      this.setState({\n        currentNodes: totalCurrentNodes,\n        nodesAvailableItem: availableNodes,\n        nodesFilteredAvailableItem: availableNodes,\n      });\n      \n    }\n  }\n\n  onRemoveItems() {\n    const checkedItems = cloneDeep(this.state.checkedCurrentItem);\n    const currentItems = cloneDeep(this.state.currentNodes);\n    const totalNodes = cloneDeep(this.props.totalNodes);\n\n    \n    let availableNodes = [];\n    let newCurrentNodes = [];\n    \n    if (checkedItems) {\n      checkedItems.map((value) => {\n        currentItems.map((availableItem) => {\n          if (value.includes(\"child\")) {\n            let currentChildItems = [];\n            if (\"children\" in availableItem) {\n              availableItem.children.map((childItem) => {\n                if (childItem.value === value) {\n                  currentChildItems.push(childItem);\n                }\n              })\n              \n              if (currentChildItems.length > 0) {\n                let filteredNode = newCurrentNodes.filter(node => node.value === availableItem.value)\n                if (filteredNode.length) {\n                  filteredNode[0].children.push( ...currentChildItems );\n                } else {\n                  newCurrentNodes.push({ ...availableItem, children: currentChildItems });\n                }\n              }\n            }\n          } else {\n            if (availableItem.value === value) {\n              newCurrentNodes.push(availableItem);\n            }\n          }\n        })\n      });\n      \n      // merge the new current nodes into original current nodes\n\n      const originCurrentNodes = cloneDeep(this.state.nodesAvailableItem);\n      let totalNewCurrentNodes = [];\n      newCurrentNodes.map((newCurrentNode) => {\n        let exist = false;\n        let currentChildItems\n        originCurrentNodes.map((currentNode) => {\n          \n          if (currentNode.value === newCurrentNode.value) {\n            currentChildItems = currentNode.children;\n            newCurrentNode.children.map((newChildItem) => {\n              currentChildItems.push(newChildItem);\n            });\n            totalNewCurrentNodes.push({ ...currentNode, children: currentChildItems });\n            exist = true;\n          }\n        })\n  \n        if (!exist) {\n          let parentExist = false;\n          totalNewCurrentNodes.map((node, index) => {\n            if (node.value === newCurrentNode.value) {\n              totalNewCurrentNodes[index].children.push(newCurrentNode.children[0]);\n              parentExist = true;\n            }\n          })\n          if (!parentExist) {\n            totalNewCurrentNodes.push(newCurrentNode);\n          }\n        }\n      })\n\n      let totalCurrentNodes = totalNewCurrentNodes;\n      originCurrentNodes.map((originNode) => {\n        let exist = false;\n        totalNewCurrentNodes.map((newNode) => {\n          if (originNode.value === newNode.value) {\n            exist = true;\n          }\n        })\n        if (!exist) {\n          totalCurrentNodes.push(originNode);\n        }\n      });\n  \n      totalNodes.map((totalNode) => {\n        let parentFlag = false;\n        totalCurrentNodes.map((totalCurrentNode) => {\n          if (totalNode.value === totalCurrentNode.value) {\n            parentFlag = true;\n            if (\"children\" in totalCurrentNode && \"children\" in totalNode) {\n              let totalCurrnetChildrens = [];\n              totalCurrentNode.children.map((totalCurrentChild) => {\n                totalCurrnetChildrens.push(totalCurrentChild.value);\n              });\n              totalNode.children.map((totalChild) => {\n                if (!(totalCurrnetChildrens.includes(totalChild.value))) {\n                  let childFlag = false;\n                  availableNodes.map((availableNode, index) => {\n                    if (availableNode.value === totalCurrentNode.value) {\n                      availableNodes[index].children.push(totalChild);\n                      childFlag = true;\n                    }\n                  })\n  \n                  if (!childFlag) {\n                    availableNodes.push({ ...totalNode, children: [totalChild] });\n                  }\n                }\n              })\n            }\n          }\n        });\n  \n        if (!parentFlag) {\n          availableNodes.push(totalNode);\n        }\n      })\n  \n      this.setState({\n        currentNodes: availableNodes,\n        nodesAvailableItem: totalCurrentNodes,\n        nodesFilteredAvailableItem: totalCurrentNodes,\n      });\n    }\n  }\n\n  isExistItem(key, item, currentNodes) {\n    let isExist = false\n    currentNodes.forEach((current) => {\n      if (current.value === key) {\n        current.children.forEach((child) => {\n          if (child.value === item.value) {\n            isExist = true\n            return\n          }\n        })\n      }\n    })\n    return isExist  \n  }\n\n  onLoadTotalNodes() {\n    const totalNodes = this.props.totalNodes;\n    let availableNodes = [];\n\n    if (!this.props.currentNodes) {\n      return\n    }\n\n    totalNodes.map((item) => {\n      let pushItem = {...item};\n      if (\"children\" in pushItem) {\n        if (pushItem.children.length > 0) {\n          let availableChildItems = [];\n          pushItem.children.map((childItem) => {\n            if (!this.isExistItem(pushItem.value, childItem, this.props.currentNodes)) {\n              availableChildItems.push(childItem);\n            }\n          });\n\n          if (availableChildItems.length > 0) {\n            availableNodes.push({...pushItem, children: availableChildItems});\n          }\n        }\n      }\n    });\n    this.setState({\n      nodesAvailableItem: availableNodes,\n      nodesFilteredAvailableItem: availableNodes,\n    });\n  }\n\n  onLoadDefaults() {\n    const totalNodes = this.props.totalNodes;\n    let defaultNodes = [];\n    let availableNodes = [];\n    totalNodes.map((item) => {\n      let pushItem = {...item};\n      if (pushItem.default) {\n        if (\"children\" in pushItem) {\n          if (pushItem.children.length > 0) {\n            let currentChildItems = [];\n            let availableChildItems = [];\n            pushItem.children.map((childItem) => {\n              if (childItem.default) {\n                currentChildItems.push(childItem);\n              } else {\n                availableChildItems.push(childItem);\n              }\n            });\n\n            if (currentChildItems.length > 0) {\n              defaultNodes.push({...pushItem, children: currentChildItems});\n            }\n\n            if (availableChildItems.length > 0) {\n              availableNodes.push({...pushItem, children: availableChildItems});\n            }\n          } else {\n            defaultNodes.push(pushItem);\n          }\n        } else {\n          defaultNodes.push(pushItem);\n        }\n      } else {\n        availableNodes.push(pushItem);\n      }\n    });\n    this.setState({\n      currentNodes: defaultNodes,\n      nodesAvailableItem: availableNodes,\n      nodesFilteredAvailableItem: availableNodes,\n    });\n  }\n\n  moveItem(direction) {\n    const checkedItems = cloneDeep(this.state.checkedCurrentItem);\n    const currentNodes = cloneDeep(this.state.currentNodes);\n\n    if (checkedItems && Array.isArray(checkedItems)) {\n      let moveEnable = true;\n      checkedItems.sort();\n      let parentSuffix = [];\n      let childFlag = false;\n      checkedItems.map((item) => {\n        if (item.includes(\"child\")) {\n          parentSuffix.push(item.split(\"_\")[2]); // push child\n          childFlag = true;\n        }\n        if (item.includes(\"parent\")) {\n          if (parentSuffix.length > 0) {\n            alert (\"Please select one node\");\n            moveEnable = false;\n          } else {\n            parentSuffix.push(item.split(\"_\")[2]); // push parent\n          }\n        }\n      });\n      const uniqParentSuffix = [...new Set(parentSuffix)];\n      if (uniqParentSuffix.length !== 1) {\n        alert (\"Please select one node\");\n        moveEnable = false;\n      } else {\n        let parentValue = '';\n        parentValue = \"parent_value_\" + uniqParentSuffix[0];\n        let nodeIndex;\n        currentNodes.map((node, index) => {\n          if (node.value === parentValue) {\n            if (childFlag) {\n              if (node.children.length === checkedItems.length) {\n                nodeIndex = {\n                  status: 'parent',\n                  parentIndex: index,\n                  childIndex: null,\n                };\n              } else {\n                if (checkedItems.length !== 1) {\n                  alert (\"Please select one node\");\n                  moveEnable = false;\n                } else {\n                  node.children.map((child, childIndex) => {\n                    if (child.value === checkedItems[0]) {\n                      nodeIndex = {\n                        status: 'child',\n                        parentIndex: index,\n                        childIndex: childIndex,\n                      };\n                    }\n                  })\n                }\n              }\n            } else {\n              nodeIndex = {\n                status: 'parent',\n                parentIndex: index,\n                childIndex: null,\n              };\n            }\n          }\n        })\n        \n        if (moveEnable) {\n          if (direction === 'up') {\n            if (nodeIndex.status === 'parent') {\n              if (nodeIndex.parentIndex > 0) {\n                const temp = currentNodes[nodeIndex.parentIndex - 1];\n                currentNodes[nodeIndex.parentIndex - 1] = currentNodes[nodeIndex.parentIndex];\n                currentNodes[nodeIndex.parentIndex] = temp;\n              }\n            } else {\n              if (nodeIndex.childIndex > 0) {\n                const temp = currentNodes[nodeIndex.parentIndex].children[nodeIndex.childIndex - 1];\n                currentNodes[nodeIndex.parentIndex].children[nodeIndex.childIndex - 1] = currentNodes[nodeIndex.parentIndex].children[nodeIndex.childIndex];\n                currentNodes[nodeIndex.parentIndex].children[nodeIndex.childIndex] = temp;\n              }\n            }\n          } else {\n            if (nodeIndex.status === 'parent') {\n              if (nodeIndex.parentIndex < currentNodes.length - 1) {\n                const temp = currentNodes[nodeIndex.parentIndex + 1];\n                currentNodes[nodeIndex.parentIndex + 1] = currentNodes[nodeIndex.parentIndex];\n                currentNodes[nodeIndex.parentIndex] = temp;\n              }\n            } else {\n              if (nodeIndex.childIndex < currentNodes[nodeIndex.parentIndex].children.length - 1) {\n                const temp = currentNodes[nodeIndex.parentIndex].children[nodeIndex.childIndex + 1];\n                currentNodes[nodeIndex.parentIndex].children[nodeIndex.childIndex + 1] = currentNodes[nodeIndex.parentIndex].children[nodeIndex.childIndex];\n                currentNodes[nodeIndex.parentIndex].children[nodeIndex.childIndex] = temp;\n              }\n            }\n          }\n        }\n\n        this.setState({\n          currentNodes: currentNodes,\n        });\n      }\n    } else {\n      alert (\"You didn't select the node\");\n    }\n  }\n\n  onMoveUp() {\n    this.moveItem('up');\n  }\n\n  onMoveDown() {\n    this.moveItem('down');\n  }\n\n  onRestoreClicked() {\n    this.setState({\n      nodesAvailableItem: this.state.restoreAvailableItems,\n      currentNodes: this.state.restoreCurrentItems,\n    });\n  }\n\n  onOkClicked() {\n    this.props.handleCurrentNodesChanged(this.state.currentNodes);\n    this.props.handleVisible(false);\n  }\n\n  onCancelClicked() {\n    this.setState({\n      nodesAvailableItem: this.state.restoreAvailableItems,\n      currentNodes: this.state.restoreCurrentItems,\n    });\n    this.props.handleVisible(false);\n  }\n\n  componentDidMount() {\n    this.onGetAvailabelNodes();\n    this.onLoadTotalNodes();\n  }\n\n  render() {\n    const { checkedAvailableItem, expandedAvailableItem, nodesFilteredAvailableItem } = this.state;\n\n    return (\n      <div className=\"widget-container\">\n        <div className=\"modal-main\">\n          <div className=\"filter-container left-group\">\n            <div className=\"left-box-header\">\n              <span>Available Items</span>\n            </div>\n            <div className=\"items-area\">\n              <CustomDropDown\n                nodes={this.state.nodesAvailableItem}\n                onChange={this.onFilterChangeAvailableItem}\n              />\n              <CheckboxTree\n                checked={checkedAvailableItem}\n                expanded={expandedAvailableItem}\n                nodes={nodesFilteredAvailableItem}\n                onCheck={this.onCheckAvailableItem}\n                onExpand={this.onExpandAvailableItem}\n              />\n            </div>\n            <div className=\"left-box-footer\">\n              <div className=\"modal-btn btn-exchange\" onClick={this.onAddItems}>\n                <span>{\"Add Item(s) >>\"}</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"filter-container right-group\">\n            <div className=\"right-box-header\">\n              <span>Available Items</span>\n            </div>\n            <div className=\"items-container\">\n              <div>\n                <div className=\"items-area\">\n                  <CheckboxTree\n                    checked={this.state.checkedCurrentItem}\n                    expanded={this.state.expandedCurrentItem}\n                    nodes={this.state.currentNodes}\n                    onCheck={this.onCheckCurrentItem}\n                    onExpand={this.onExpandCurrentItem}\n                  />\n                </div>\n              </div>\n              <div className=\"right-box-btn-group\">\n                <div className=\"right-top-btn\">\n                  <div className=\"modal-btn\" onClick={this.onLoadDefaults}>\n                    <span>Load Defaults</span>\n                  </div>\n                </div>\n                <div className=\"right-bottom-btn\">\n                  <div className=\"modal-btn\" onClick={this.onMoveUp}>\n                    <span>Move Up</span>\n                  </div>\n                  <div className=\"modal-btn\" onClick={this.onMoveDown}>\n                    <span>Move Down</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"right-box-footer\">\n              <div className=\"modal-btn btn-exchange\" onClick={this.onRemoveItems}>\n                <span>{\"<< Remove Item(s)\"}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"modal-footer\">\n          <div className=\"modal-footer-left-button-group\">\n            <div className=\"modal-btn restore-btn\" onClick={this.onRestoreClicked}>\n              <span>Restore</span>\n            </div>\n          </div>\n          <div className=\"modal-footer-right-button-group\">\n            <div className=\"modal-btn ok-btn\" onClick={this.onOkClicked}>\n              <span>Ok</span>\n            </div>\n            <div className=\"modal-btn cancel-btn\" onClick={this.onCancelClicked}>\n              <span>Cancel</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Widget;\n","import React, { useEffect, useState } from 'react';\n\nimport Widget from './components/modal/Widget';\n\nimport { getStockModalData } from 'api/Api';\n\nconst WatchListEditColumnWidget = (props) => {\n  const [totalNodes, setTotalNodes] = useState([]);\n  const [currentNodes, setCurrentNodes] = useState(props.selectedColumns);\n  \n  const handleCurrentNodesChanged = (nodes) => {\n    setCurrentNodes(nodes);\n    props.setColumns(nodes)\n  };\n\n  const handleVisible = (visibleStatus) => {\n    props.handleModalClose()\n  };\n\n  useEffect(() => {\n    let nodes = [];\n    let childNodes = [];\n\n    const getModalData = async () => {\n      let res = await getStockModalData();\n      if (res.result) {\n        const stockFinancialsData = res.result.stock_financials;\n        const indicators = res.result.indicators;\n        const tickerNews = res.result.ticker_news;\n        const tickerDetails = res.result.ticker_details;\n\n        // Stock Financials Fields\n        childNodes = [];\n        stockFinancialsData.total.map((node, index) => {\n          childNodes.push({\n            label: node,\n            value: 'child_value_1_' + (index + 1),\n            default: stockFinancialsData.defaults.includes(node) ? true : false,\n          });\n        });\n\n        if (childNodes.length > 0) {\n          nodes.push({\n            label: 'Stock Financials',\n            value: 'parent_value_1',\n            children: childNodes,\n            default: true,\n          });\n        } else {\n          nodes.push({\n            label: 'Stock Financials',\n            value: 'parent_value_1',\n            default: false,\n          });\n        }\n\n        // Indicators\n        childNodes = [];\n        indicators.total.map((node, index) => {\n          childNodes.push({\n            label: node,\n            value: 'child_value_2_' + (index + 1),\n            default: indicators.defaults.includes(node) ? true : false,\n          });\n        });\n\n        if (childNodes.length > 0) {\n          nodes.push({\n            label: 'Indicators',\n            value: 'parent_value_2',\n            children: childNodes,\n            default: true,\n          });\n        } else {\n          nodes.push({\n            label: 'Indicators',\n            value: 'parent_value_2',\n            default: false,\n          });\n        }\n\n        // Ticker News\n        // childNodes = [];\n        // tickerNews.total.map((node, index) => {\n        //   childNodes.push({\n        //     label: node,\n        //     value: 'child_value_3_' + (index + 1),\n        //     default: tickerNews.defaults.includes(node) ? true : false,\n        //   });\n        // });\n\n        // if (childNodes.length > 0) {\n        //   nodes.push({\n        //     label: 'Ticker News',\n        //     value: 'parent_value_3',\n        //     children: childNodes,\n        //     default: true,\n        //   });\n        // } else {\n        //   nodes.push({\n        //     label: 'Ticker News',\n        //     value: 'parent_value_3',\n        //     default: false,\n        //   });\n        // }\n\n        // Ticker Details\n        childNodes = [];\n        tickerDetails.total.map((node, index) => {\n          childNodes.push({\n            label: node,\n            value: 'child_value_4_' + (index + 1),\n            default: tickerDetails.defaults.includes(node) ? true : false,\n          });\n        });\n\n        if (childNodes.length > 0) {\n          nodes.push({\n            label: 'Ticker Details',\n            value: 'parent_value_4',\n            children: childNodes,\n            default: true,\n          });\n        } else {\n          nodes.push({\n            label: 'Ticker Details',\n            value: 'parent_value_4',\n            default: false,\n          });\n        }\n\n        nodes.push({\n          label: \"Ticker Prices\",\n          value: \"parent_value_5\",\n          children: [\n              {\n                  label: \"o\",\n                  value: \"child_value_5_1\",\n                  default: true\n              },\n              {\n                  label: \"h\",\n                  value: \"child_value_5_2\",\n                  default: true\n              },    \n              {\n                  label: \"l\",\n                  value: \"child_value_5_3\",\n                  default: true\n              },    \n              {\n                  label: \"c\",\n                  value: \"child_value_5_4\",\n                  default: true\n              },    \n              {\n                  label: \"v\",\n                  value: \"child_value_5_5\",\n                  default: true\n              },    \n              {\n                  label: \"mark\",\n                  value: \"child_value_5_6\",\n                  default: true\n              }    \n          ]\n        })\n      }\n      setTotalNodes(nodes);\n    };\n    getModalData();\n  }, []);\n\n  return (\n    <div className=\"watch-list-edit-column-widget\">\n      {totalNodes.length > 0 && (\n        <Widget\n          totalNodes={totalNodes}\n          currentNodes={currentNodes}\n          handleCurrentNodesChanged={handleCurrentNodesChanged}\n          handleVisible={handleVisible}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default WatchListEditColumnWidget;\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Button } from 'reactstrap'\nimport Modal from 'react-bootstrap/Modal'\nimport BarChart from 'components/FinancialDashboard/SmallBarChart';\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport WatchListEditColumnWidget from 'components/WatchListEditColumnWidget/WatchListEditColumnWidget'\nimport './WatchListItem.css'\nimport Select from 'react-select'\nimport {\n  getMultiFinancials, getScannerViewData, saveScannerView, getWatchListAll\n} from 'api/Api';\n\nconst WatchListItem = (props) => {\n  const { allViewData, setAllViewData } = props;\n  const [isLoadedWatchListOptions, setIsLoadedWatchListOptions] = useState(true)\n  const [isConnected, setIsConnected] = useState(false)\n  const [selectedColumns, setSelectedColumns] = useState(\n    [\n      {\n        label: \"Indicators\",\n        value: \"parent_value_2\",\n        children: [\n            // {\n            //     label: \"rsi\",\n            //     value: \"child_value_2_1\",\n            //     default: true\n            // },\n            // {\n            //     label: \"rsi2\",\n            //     value: \"child_value_2_2\",\n            //     default: true\n            // },\n            // {\n            //     label: \"rsi3\",\n            //     value: \"child_value_2_3\",\n            //     default: false\n            // },\n            // {\n            //     label: \"heik\",\n            //     value: \"child_value_2_4\",\n            //     default: false\n            // },\n            // {\n            //     label: \"heik2\",\n            //     value: \"child_value_2_5\",\n            //     default: false\n            // }\n        ],\n        \"default\": true\n      }\n    ]\n  );\n  \n  const [chartMultiData, setChartMultiData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [ws, setWs] = useState(null);\n  const [isOpenedEditColumnWidget, setIsOpenedEditColumnWidget] = useState(false)\n  const [selectedWatchList, setSelectedWatchList] = useState(null)\n  const [selectedWatchListOptions, setSelectedWatchListOptions] = useState([])\n  const [selectedAggregationType, setSelectedAggregationType] = useState('QA');\n  const [isUpdatedCols, setIsUpdatedCols] = useState(false)\n  const [columnItems, setColumnItems] = useState([])\n  const [initColumnItems] = useState([\n    {\n      value: 'symbol',\n      label: 'symbol',\n      width: 100,\n    },\n  ])\n  const [isUpdatedWatchList, setIsUpdatedWatchList] = useState(false);\n  const [selectedSymbols, setSelectedSymbols] = useState([])\n  \n  const [columns, setColumns] = useState([\n    {\n      value: 'symbol',\n      label: 'symbol',\n      width: 100,\n    },\n    // {\n    //   value: 'rsi',\n    //   label: 'rsi',\n    //   width: 100,\n    // },\n    // {\n    //   value: 'rsi2',\n    //   label: 'rsi2',\n    //   width: 100,\n    // },\n    // {\n    //   value: 'rsi3',\n    //   label: 'rsi3',\n    //   width: 100,\n    // },\n    // {\n    //   value: 'heik',\n    //   label: 'heik',\n    //   width: 100,\n    // },\n    // {\n    //   value: 'heik2',\n    //   label: 'heik2',\n    //   width: 100,\n    // },\n    {\n      value: 'chart',\n      label: 'chart',\n      width: 100,\n    }\n  ]);\n\n  const [timeFrames, setTimeFrames] = useState([])\n  const [timeFrameOptions, setTimeFrameOptions] = useState([\n    {\n      value: '1d',\n      label: '1d'\n    },\n    {\n      value: '3d',\n      label: '3d'\n    },\n  ])\n  \n  const [watchListData, setWatchListData] = useState([])\n  const [watchListInitData, setWatchListInitData] = useState([])\n\n  const handleColumnsChange = () => {\n    setIsOpenedEditColumnWidget(true)\n  }\n\n  const handleModalClose = () => {\n    setIsOpenedEditColumnWidget(false)\n  }\n\n  const loadWatchListOptions = ( useCallback( async() => {\n    try {\n      const data = await getWatchListAll()\n      const result = data.result.map((o) => ({\n        value: o.name,\n        label: o.name\n      }))\n      setSelectedWatchListOptions(result)\n      setSelectedWatchList(result[0])\n    } catch (e) {\n      console.log(e)\n    }\n  }, []))\n  useEffect(() => {\n    loadWatchListOptions()\n    setIsLoadedWatchListOptions(true)\n  }, [])\n\n  useEffect(() => {\n    const getScannerAvailableFields = async () => {\n      const result = await getScannerViewData(props.chart_number)\n      if (result) {\n        let columns = result.fields;\n        if (columns) {\n          let cols = []\n          let temps = []\n          let colObjects = []\n          Object.keys(columns).forEach((key) => {\n            columns[key].children.forEach((col) => {\n              cols.push(col.label)\n              temps.push(col.label)\n            })\n\n            colObjects.push({\n              [columns[key].label]: temps\n            })\n            temps = []\n          })\n          setColumnItems(cols)\n          setSelectedColumns(columns)\n          setIsUpdatedCols(!isUpdatedCols)\n        }\n      }\n    }\n\n    if (isLoadedWatchListOptions) {\n      getScannerAvailableFields()\n    }\n  \n  }, [isLoadedWatchListOptions])\n\n  useEffect(() => {\n    const loadRows = async () => {\n      const requestOptions = {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          'name': selectedWatchList.value\n        })\n      };\n      let rows = []\n\n      try {\n        await fetch(process.env.REACT_APP_BACKEND_URL + \"/scanner/watchlists/\", requestOptions)\n        .then(response => response.json())\n        .then(async data => {\n          \n          rows = data.result\n\n          const financials = await getMultiFinancials(rows, 'income_statement')\n          loadMultiFinancials(financials)\n\n          // setRowItems(data.tables)\n          // setIsUpdatedRows(true)\n          \n          let realData = [];\n          let symbols = [];\n          rows.forEach((row) => {\n            const object = {}\n            columns.forEach((col) => {\n              if (col.value === 'chart') {\n                object[col.value] = 'fetching ...'\n              } else {\n                object[col.value] = '0.00'\n              }\n            })\n            object.symbol = row\n            symbols.push({\n              value: row,\n              label: row,\n            })\n            realData.push(object);\n          })\n\n          updateChangeSymbol(symbols)\n          setSelectedSymbols(symbols)\n          setWatchListInitData(realData)\n        })  \n      } catch (error) {\n        console.log(error)\n      }\n    }\n    if (selectedWatchList) {\n      setIsLoading(1);\n      loadRows();\n    }\n  }, [selectedWatchList])\n\n  useEffect(() => {\n    const keys = Object.keys(columnItems)\n    if(keys.length) {\n      const columns = [...initColumnItems]\n      columnItems.forEach((value) => {\n        if (value !== 'symbol') {\n          columns.push({\n            value: value,\n            label: value,\n            width: 100,\n          })\n        }\n      })\n      columns.push({\n        value: 'chart',\n        label: 'chart',\n        width: 100,\n      })\n      setColumns(columns)\n    } else {\n      setColumns([\n        {\n          value: 'symbol',\n          label: 'symbol',\n          width: 100,\n        },\n        {\n          value: 'chart',\n          label: 'chart',\n          width: 100,\n        }\n      ])\n    }\n\n  }, [isUpdatedCols])\n\n  const isValidChartData = (symbol) => {\n    if (!chartMultiData.length) {\n      return false\n    }\n    const filtered = chartMultiData.filter((chartData) => { return chartData.symbol === symbol; })\n    if (!filtered.length) {\n      return false\n    }\n    return filtered[0].chartData.length ? true : false\n  }\n\n  const loadMultiFinancials = (financials) => {\n    if (!financials.length) {\n      return\n    }\n\n    financials.forEach((financial) => {\n      getIncomeFromFinancial(financial[1], financial[0])\n    })\n  }\n\n  const getChartDataBySymbol = (symbol, isChild) => {\n    if (!chartMultiData.length) {\n      return []\n    }\n    \n    const filtered = chartMultiData.filter((chartData) => { return chartData.symbol === symbol })\n    if (!filtered.length) {\n      return []\n    }\n    \n    let slicedChartData = filtered[0].chartData.map((chart) => {\n      chart.dataPoints.splice(0, chart.dataPoints.length - 50)//should update whenever\n      return chart\n    })\n\n    if (isChild) {\n      return slicedChartData[0]\n    }\n\n\n    return slicedChartData\n  }\n\n  useEffect(() => {\n    let initData = watchListInitData\n    let newData = []\n    let isValid = true\n\n    initData.forEach((init) => {\n      watchListData.forEach(o => {\n        if (o.symbol === init.symbol) {\n          const newObject = {\n            symbol: o.symbol,\n            ...o.data,\n            chart: \n              <div className=\"container custom-container chart-area hunter-scanner-page-chart-area\">\n                <div className=\"row justify-content-center hunter-scanner-page-chart-area-wrap\">\n                  {isValidChartData(o.symbol) ? (\n                    <BarChart\n                      data={getChartDataBySymbol(o.symbol, true)}\n                      chartData={getChartDataBySymbol(o.symbol, false)}\n                      globalAggregationType={selectedAggregationType}\n                    />\n                  ) : isLoading === 2 ? (\n                    <div className=\"no-data\">No data</div>\n                  ) : (\n                    <div className=\"no-data\">Fetching...</div>\n                  )}\n                </div>\n              </div>,\n          }\n          newData.push(newObject)\n          isValid = false\n        }\n      })\n      if (isValid) {\n        newData.push(init)\n      }\n      isValid = true\n    })\n\n    setWatchListInitData(newData)\n    setIsUpdatedWatchList(false)\n  }, [isUpdatedWatchList])\n\n  useEffect(() => {\n    \n    let cols = []\n    let temps = []\n    let colObjects = []\n\n    Object.keys(selectedColumns).forEach((key) => {\n      selectedColumns[key].children.forEach((col) => {\n        cols.push(col.label)\n        temps.push(col.label)\n      })\n\n      colObjects.push({\n        [selectedColumns[key].label]: temps\n      })\n      temps = []\n    })\n    \n    if (isConnected) {\n      const symbols = selectedSymbols.map( (o) => o.value )\n      \n      const content = {\n        action: 'create_fields',\n        chart_number: props.chart_number,\n        symbols,\n        symbol_type: (selectedWatchList.value === 'crypto' || selectedWatchList.value === 'bigCryptos') ? 'crypto' : 'stock',\n        fields: colObjects,\n      }\n\n      ws.send(JSON.stringify(content));\n      console.log('First Connection options sent to BE', content)\n    }  \n  }, [isConnected])\n\n  const updateChangeSymbol = (symbolList) => {\n    let cols = []\n    let temps = []\n    let colObjects = []\n    const columns = selectedColumns\n    Object.keys(columns).forEach((key) => {\n      columns[key].children.forEach((col) => {\n        cols.push(col.label)\n        temps.push(col.label)\n      })\n\n      colObjects.push({\n        [columns[key].label]: temps\n      })\n      temps = []\n    })\n    // setIsUpdatedCols(!isUpdatedCols)\n    // setColumnItems(cols)\n    // setSelectedColumns(columns)\n    \n    if (isConnected) {\n      const symbols = symbolList.map( (o) => o.value )\n      \n      const content = {\n        action: selectedWatchList.value === 'crypto' ? 'create_fields' : 'change_fields',\n        chart_number: props.chart_number,\n        symbols,\n        symbol_type: (selectedWatchList.value === 'crypto' || selectedWatchList.value === 'bigCryptos') ? 'crypto' : 'stock',\n        fields: colObjects,\n      }\n      \n      ws.send(JSON.stringify(content));\n    }  \n  }\n\n  const loadview = async () => {\n    const result = await getScannerViewData(props.chart_number)\n    if (result) {\n      let columns = result.fields;\n      if (columns) {\n        let cols = []\n        let temps = []\n        let colObjects = []\n        Object.keys(columns).forEach((key) => {\n          columns[key].children.forEach((col) => {\n            cols.push(col.label)\n            temps.push(col.label)\n          })\n\n          colObjects.push({\n            [columns[key].label]: temps\n          })\n          temps = []\n        })\n        setColumnItems(cols)\n        setSelectedColumns(columns)\n        setIsUpdatedCols(!isUpdatedCols)\n\n        allViewData.forEach(view => {\n          if (view.chart_number === props.chart_number) {\n            view.fields = [...columns]\n          }\n        })\n      }\n    }\n  }\n\n  const handleColumnSet = (columns) => {\n    let cols = []\n    let temps = []\n    let colObjects = []\n    Object.keys(columns).forEach((key) => {\n      columns[key].children.forEach((col) => {\n        cols.push(col.label)\n        temps.push(col.label)\n      })\n\n      colObjects.push({\n        [columns[key].label]: temps\n      })\n      temps = []\n    })\n    setIsUpdatedCols(!isUpdatedCols)\n    setColumnItems(cols)\n    setSelectedColumns(columns)\n    if (isConnected) {\n      const symbols = selectedSymbols.map( (o) => o.value )\n      \n      const content = {\n        action: 'change_fields',\n        chart_number: props.chart_number,\n        symbols,\n        symbol_type: (selectedWatchList.value === 'crypto' || selectedWatchList.value === 'bigCryptos') ? 'crypto' : 'stock',\n        fields: colObjects,\n      }\n\n      allViewData.forEach(view => {\n        if (view.chart_number === props.chart_number) {\n          view.symbols = content.symbols\n          view.fields = [...columns]\n        }\n      })\n\n      ws.send(JSON.stringify(content));\n    }\n  }\n\n  const indicatorStyle = (key, item) => {\n    let bgColor;\n    const indicators = ['rsi', 'rsi2', 'rsi3', 'heik', 'heik2']\n    if (indicators.includes(key)) {\n      switch (key) {\n        case 'rsi':\n          bgColor = item.rsi_side === 'buy'\n          ? 'background-pink-color' : item.rsi_side === 'sell'\n          ? 'background-orange-color' : item.rsi_side === 'hold'\n          ? 'background-light-green-color' : 'background-red-color'\n          return bgColor\n        case 'rsi2':\n          bgColor = item.rsi2_color === 'l_g'\n            ? 'background-light-green' : item.rsi2_color === 'd_g'\n            ? 'background-dark-green' : item.rsi2_color === 'l_r'\n            ? 'background-light-red' : 'background-dark-red'\n          return bgColor\n        case 'rsi3':\n          bgColor = item.rsi3_color === 'l_g'\n            ? 'background-light-green' : item.rsi3_color === 'd_g'\n            ? 'background-dark-green' : item.rsi3_color === 'l_r'\n            ? 'background-light-red' : 'background-dark-red'\n          return bgColor\n        case 'heik':\n          bgColor = item.heik1_color === 'l_g'\n            ? 'background-light-green' : item.heik_color === 'd_g'\n            ? 'background-dark-green' : item.heik_color === 'l_r'\n            ? 'background-light-red' : 'background-dark-red'\n          return bgColor\n        case 'heik2':\n          bgColor = item.heik2_color === 'l_g'\n            ? 'background-light-green' : item.heik2_color === 'd_g'\n            ? 'background-dark-green' : item.heik2_color === 'l_r'\n            ? 'background-light-red' : 'background-dark-red'\n          return bgColor\n        default:\n          return ''\n      }\n    }\n    return ''\n  }\n\n  const handleTimeFrameChange = (e) => {\n    setTimeFrames(e)\n  }\n  \n  const handleWatchListChange = async (e) => {\n    await createWebSocket(true)\n    setIsUpdatedWatchList(true)\n    setSelectedWatchList(e)\n  }\n\n  const getIncomeFromFinancial = async (financial, symbol) => {\n    let revenus = {\n      label: 'Revenue',\n      group: 0,\n      color: 'rgb(25, 185, 154)',\n      dataPoints: [],\n    };\n    let costOfRevenue = {\n      label: 'Cost of Revenue',\n      group: 0,\n      color: 'rgb(8, 64, 129)',\n      dataPoints: [],\n    };\n    let grossProfit = {\n      label: 'Gross Profit',\n      group: 0,\n      color: 'rgb(127, 0, 0)',\n      dataPoints: [],\n    };\n    let EBITDAMargin = {\n      label: 'Ebit',\n      group: 0,\n      color: 'rgb(89, 201, 108)',\n      dataPoints: [],\n    };\n    let NetIncome = {\n      label: 'Net Income',\n      group: 0,\n      color: 'rgb(75, 87, 74)',\n      dataPoints: [],\n    };\n    let earningsPerBasicShare = {\n      label: 'Earnings per Basic Share',\n      group: 0,\n      color: 'rgb(226, 71, 130)',\n      dataPoints: [],\n    };\n    \n    if (financial && financial.length) {\n      financial.forEach((item) => {\n        revenus.dataPoints.push({\n          calendarDate: item.calendarDate,\n          period: item.period,\n          value: item.revenues,\n        });\n        costOfRevenue.dataPoints.push({\n          calendarDate: item.calendarDate,\n          period: item.period,\n          value: item.costOfRevenue,\n        });\n        grossProfit.dataPoints.push({\n          calendarDate: item.calendarDate,\n          period: item.period,\n          value: item.grossProfit,\n        });\n        EBITDAMargin.dataPoints.push({\n          calendarDate: item.calendarDate,\n          period: item.period,\n          value: item.EBITDAMargin,\n        });\n        NetIncome.dataPoints.push({\n          calendarDate: item.calendarDate,\n          period: item.period,\n          value: item.netIncome,\n        });\n        earningsPerBasicShare.dataPoints.push({\n          calendarDate: item.calendarDate,\n          period: item.period,\n          value: item.earningsPerBasicShare,\n        });\n      });\n    }\n\n    const multiCharts = chartMultiData;\n    multiCharts.push({\n      symbol: symbol,\n      chartData: [\n        sortDataPointsByDate(revenus),\n        sortDataPointsByDate(costOfRevenue),\n        sortDataPointsByDate(grossProfit),\n        sortDataPointsByDate(EBITDAMargin),\n        sortDataPointsByDate(NetIncome),\n        sortDataPointsByDate(earningsPerBasicShare),\n      ]\n    })\n\n    setChartMultiData(multiCharts)\n    setIsLoading(2);\n  };\n\n  const createWebSocket = ( async (isUpdate) => {\n    if (ws) {\n      if (isUpdate) {\n        ws.close()\n      } else {\n        return\n      }\n    }\n\n    const socket = new WebSocket(process.env.REACT_APP_SOCKET_URL);\n    setWs(socket)\n    \n    socket.onopen = () => {\n      setIsConnected(true);\n      console.log('Opened Connection!')\n    };\n  \n    socket.onmessage = (event) => {\n      try {\n        const msg = JSON.parse(event.data)\n        setWatchListData(msg)\n        setIsUpdatedWatchList(true)\n      } catch (error) {\n        console.log(error)  \n      }\n    };\n    \n    socket.onclose = () => {\n      console.log('Closed Connection!')\n    };\n  })\n\n  useEffect (() => {\n    if (isLoading === 2) {\n      createWebSocket(false)\n    }\n  }, [isLoading])\n\n  const sortDataPointsByDate = (data) => {\n    let sortedData = { ...data };\n    if (sortedData.dataPoints.length > 0) {\n      sortedData.dataPoints.sort(function (a, b) {\n        let valueA = a['calendarDate'];\n        let valueB = b['calendarDate'];\n        if (typeof a['calendarDate'] != 'string') {\n          valueA = valueA.toString();\n        }\n        if (typeof b['calendarDate'] != 'string') {\n          valueB = valueB.toString();\n        }\n        return valueA.localeCompare(valueB);\n      });\n    }\n    return sortedData;\n  };\n\n  const isSelectedSymbol = (symbol) => {\n    const filtered = selectedSymbols.filter(o => o.value === symbol)\n    return filtered.length ? true : false\n  }\n\n  const isValidNUmber = (number) => {\n    if (isNaN(parseFloat(number))) {\n      return false\n    }\n\n    return true\n  }\n\n  return (\n    <div className=\"watch-list-item-container\">\n      <Modal show={isOpenedEditColumnWidget} className=\"hunter-widget-modal\" onHide={() => handleModalClose()}>\n        <WatchListEditColumnWidget\n          handleModalClose={handleModalClose}\n          setColumns={handleColumnSet}\n          selectedColumns={selectedColumns}\n        />\n      </Modal>\n      <div className=\"watch-list-item-wrap hunter-watch-list-item-wrap\">\n        <div className=\"watch-list-item-header\">\n          <div className=\"select-multi-option mr-1 ml-1 market-select-options\">\n            <Select\n              name=\"filters\"\n              placeholder=\"Time Frame\"\n              value={timeFrames}\n              onChange={handleTimeFrameChange}\n              options={timeFrameOptions}\n            />\n          </div>\n          <div className=\"select-multi-option mr-1 market-select-options\">\n            <Select\n              name=\"filters\"\n              placeholder=\"Watch List\"\n              value={selectedWatchList}\n              onChange={handleWatchListChange}\n              options={selectedWatchListOptions}\n            />\n          </div>\n          <Button\n            size=\"sm\"\n            className=\"\"\n            onClick={() => {handleColumnsChange()}}\n          >\n            change columns\n          </Button>\n          <Button\n            size=\"sm\"\n            className=\"\"\n            onClick={async () => {\n              const symbols = selectedSymbols.map(symbol => symbol.value)\n              const result = await saveScannerView(props.chart_number, symbols, selectedColumns)\n              alert('Fields saved successfully!!!')\n            }}\n          >\n            save view\n          </Button>\n          <Button\n            size=\"sm\"\n            className=\"\"\n            onClick={async () => {\n              loadview()\n            }}\n          >\n            load view\n          </Button>\n        </div>\n        <div className=\"watch-list-item-content\">\n          <MDBTable\n            hover\n            dark={true}\n            maxHeight='100%'\n            height={`${(props.chartColumn === 1 || props.chartColumn === 2) ? '800px' : '100%'}`}\n            noBottomColumns={true}\n            striped={true}\n            scrollX={true}\n            scrollY={true}\n          >\n            <MDBTableHead  className=\"watch-list-data-table-header\">\n              <tr>\n                {columns.map((item) => (\n                  <th key={item.label} className={`${item.value === 'chart' ? 'hunter-custom-table-chart-th' : ''}`}>{item.label}</th>\n                ))}\n              </tr>\n            </MDBTableHead>\n            <MDBTableBody\n              className={\"financial-table-body-1\"}\n            >\n              {watchListInitData && watchListInitData.map((item) => (\n                isSelectedSymbol(item.symbol) && \n                <tr key={`row-${item.symbol}`}>\n                  {columns.map((column) => \n                    (\n                      <td \n                        key={`${item.symbol}-${column.value}`}\n                        className={`hunter-financial-table-column ${column.value === 'chart' ? 'table-chart-column' : ''} ${indicatorStyle(column.value, item)}`}\n                      >\n                        {isValidNUmber(item[column.value]) ? (item[column.value] || item[column.value] === '' ? parseFloat(item[column.value]).toFixed(2): '') : item[column.value]}\n                      </td>\n                    )\n                  )}\n                </tr>\n              ))}\n            </MDBTableBody>\n          </MDBTable>\n        </div>  \n      </div>\n    </div>\n  )\n}\n\nexport default WatchListItem;","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Select from 'react-select'\nimport \"react-datetime/css/react-datetime.css\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  NavLink,\n  Nav,\n  Button,\n} from \"reactstrap\";\nimport { useAuth } from 'contexts/authContext';\nimport disableScroll from 'disable-scroll';\nimport WatchListItem from 'components/WatchListItem/WatchListItem'\nimport {\n  saveScannerAllViewData, getScannerAllViewData\n} from 'api/Api';\n\nconst WatchList = (props) => {\n\n  const auth = useAuth();\n  const { selectedInstance } = props\n  const history = useHistory();\n  const [collapseOpen,] = React.useState(false)\n  const [chartColumn, setChartColumn] = useState({ value: 6, label: '6' })\n  const [user] = useState(JSON.parse(localStorage.getItem('user-info')));\n  const optionsColumn = [\n    {\n      value: 1, label: '1',\n    },\n    {\n      value: 2, label: '2',\n    },\n    {\n      value: 4, label: '4',\n    },\n    {\n      value: 6, label: '6',\n    }\n  ]\n\n  const defaultViewFields = [\n    {\n      label: \"Indicators\",\n      value: \"parent_value_2\",\n      children: [\n          {\n              label: \"rsi\",\n              value: \"child_value_2_1\",\n              default: true\n          },\n          {\n              label: \"rsi2\",\n              value: \"child_value_2_2\",\n              default: true\n          },\n          {\n              label: \"rsi3\",\n              value: \"child_value_2_3\",\n              default: false\n          },\n          {\n              label: \"heik\",\n              value: \"child_value_2_4\",\n              default: false\n          },\n          {\n              label: \"heik2\",\n              value: \"child_value_2_5\",\n              default: false\n          }\n      ],\n      \"default\": true\n    }\n  ];\n\n  const allViewDataDefault = [\n    {\n      \"chart_number\": 1,\n      \"symbols\": [],\n      \"fields\": defaultViewFields,\n    },\n    {\n      \"chart_number\": 2,\n      \"symbols\": [],\n      \"fields\": defaultViewFields,\n    },\n    {\n      \"chart_number\": 3,\n      \"symbols\": [],\n      \"fields\": defaultViewFields,\n    },\n    {\n      \"chart_number\": 4,\n      \"symbols\": [],\n      \"fields\": defaultViewFields,\n    },\n    {\n      \"chart_number\": 5,\n      \"symbols\": [],\n      \"fields\": defaultViewFields,\n    },\n    {\n      \"chart_number\": 6,\n      \"symbols\": [],\n      \"fields\": defaultViewFields,\n    }\n  ];\n\n  const [allViewData, setAllViewData] = useState(allViewDataDefault);\n\n  const loadLayout = async () => {\n    const result = await getScannerAllViewData();\n    if (!result.success || result.data == undefined) return;\n\n    const validViewDatas = result.data.filter(d => d.fields);\n    const chartNumbers = validViewDatas.map(d => d.chart_number);\n    const allViewDataFiltered = allViewData.filter(d => !chartNumbers.includes(d.chart_number));\n    const newAllViewData = [...allViewDataFiltered, ...validViewDatas];\n\n    setAllViewData(newAllViewData);\n  }\n\n  useEffect(() => {\n    disableScroll.on();\n    loadLayout()\n    return () => {\n      disableScroll.off();\n    }\n  }, [])\n  \n  const handleChartsColumnChange = (option) => {\n    setChartColumn(option)\n  }\n\n  const calculateHeightStyle = () => {\n    if (chartColumn.value === 1 || chartColumn.value === 2) {\n      return 'full-height'\n    }\n    return 'half-height'\n  }\n\n  const calculateGridColumn = () => {\n    if (chartColumn.value === 1) {\n      return 12\n    } else if ((chartColumn.value === 2) || (chartColumn.value === 4)) {\n      return 6\n    }\n    return 4\n  }\n\n  const handleSignout = () => {\n    auth.signout()\n    history.push('/login')\n  }\n\n  const displayChart = () => {\n    return (\n      <div className={`row ${calculateHeightStyle()}`}>\n        <div className={`watch-list col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\n          <WatchListItem \n            chart_number={1}\n            chartColumn={chartColumn.value}\n            allViewData={allViewData}\n            setAllViewData={setAllViewData}\n          />\n        </div>\n        <div className={`watch-list col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\n          <WatchListItem \n            chart_number={2}\n            chartColumn={chartColumn.value}\n            allViewData={allViewData}\n            setAllViewData={setAllViewData}\n          />\n        </div>\n        <div className={`watch-list col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\n          <WatchListItem\n            chart_number={3}\n            chartColumn={chartColumn.value}\n            allViewData={allViewData}\n            setAllViewData={setAllViewData}\n          />\n        </div>\n        <div className={`watch-list col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\n          <WatchListItem \n            chart_number={4}\n            chartColumn={chartColumn.value}\n            allViewData={allViewData}\n            setAllViewData={setAllViewData}\n          />\n        </div>\n        <div className={`watch-list col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\n          <WatchListItem\n            chart_number={5}\n            chartColumn={chartColumn.value}\n            allViewData={allViewData}\n            setAllViewData={setAllViewData}\n          />\n        </div>\n        <div className={`watch-list col-sm-12 col-md-${calculateGridColumn()} graph-container`} >\n          <WatchListItem\n            chart_number={6}\n            chartColumn={chartColumn.value}\n            allViewData={allViewData}\n            setAllViewData={setAllViewData}\n          />\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"hunter-chart-container\">\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark hunter-nav-bar\">\n        <div className=\"logo-title\">\n          <a href=\"/chart\" className=\"hunter-navbar-brand\">\n            Violette AM - Client Portal\n          </a>\n        </div>\n        {(user.is_admin || (user.role?.length)) && (\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/chart\"} className=\"nav-link\"></Link>\n            </li>\n            <div className=\"select-option\">\n              <Select\n                value={chartColumn}\n                onChange={handleChartsColumnChange}\n                options={optionsColumn}\n                placeholder=\"Columns\"\n              />\n            </div>\n            <div className=\"watch-list-nav-item\">\n              <Button\n                size=\"sm\"\n                color=\"danger\"\n                onClick={async () => {\n                  const result = await saveScannerAllViewData(allViewData);\n                  if (result.success) alert('All fields saved successfully!!!');\n                }}\n              >\n                save layout\n              </Button>\n\n              <Button\n                size=\"sm\"\n                color=\"danger\"\n                onClick={() => {\n                  window.location.reload();\n                }}\n              >\n                load layout\n              </Button>\n            </div>\n          </div>\n        )}\n        <Collapse navbar isOpen={collapseOpen}>\n            <Nav className=\"ml-auto\" navbar>\n              <UncontrolledDropdown>\n                <DropdownToggle\n                  caret\n                  color=\"default\"\n                  nav\n                  onClick={(e) => e.preventDefault()}\n                >\n                  <div className=\"photo\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/anime3.png\").default}\n                    />\n                  </div>\n                  <p className=\"d-lg-none\">Log out</p>\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                  <DropdownItem divider tag=\"li\" />\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\" onClick={() => {\n                      handleSignout()\n                    }}>Log out</DropdownItem>\n                  </NavLink>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <li className=\"separator d-lg-none\" />\n            </Nav>\n          </Collapse>    \n      </nav>\n      {!user.is_admin && !user?.role.length\n        ? (<div className=\"development-in-content dark\">\n            No Permission\n          </div>)\n        : selectedInstance === 'stress_test' || selectedInstance === 'optimization' \n        ? (<div className=\"development-in-content dark\">\n          In development\n        </div>)\n        : (<div className=\"graphs-container dark\">\n          {displayChart()}\n        </div>)\n      }\n    </div>\n  );\n};\n\nexport default WatchList;","import React from \"react\";\nimport {\n  Button\n} from \"reactstrap\";\n\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport WatchList from \"components/WatchList\"\n\nimport { routes } from \"routes.js\";\n\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\n\nfunction MarketWatch() {\n  const [isShowSidebar, setShowSidebar] = React.useState(false);\n  const [selectedInstance, setSelectedInstance] = React.useState('market_watch');\n\n  const handleSidebarChange = () => {\n    setShowSidebar(!isShowSidebar);\n  };\n\n  const handleInstanceChange = (instance) => {\n    setSelectedInstance(instance)\n  }\n\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color }) => (\n        <React.Fragment>\n          <div className=\"wrapper hunter-wrapper\">\n          {!isShowSidebar && (\n            <Button\n              className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\n              onClick={handleSidebarChange}\n            >\n              <i className=\"tim-icons icon-align-left-2\"/>\n            </Button>\n          )}\n          {isShowSidebar && (\n              <Sidebar\n                isAdminPage={false}\n                routes={routes}\n                selectedInstance={selectedInstance}\n                handleSidebarChange={handleSidebarChange}\n                handleInstanceChange={handleInstanceChange}\n              />\n            )}\n            <div className=\"col-sm-12 hunter-watch-list-area\">\n                <WatchList />\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nexport default MarketWatch;","import React, { useState, useEffect, useMemo } from \"react\";\nimport Select from 'react-select'\nimport { Link } from \"react-router-dom\";\nimport \"react-datetime/css/react-datetime.css\";\n\nimport {\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  NavLink,\n  Nav,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { MDBDataTableV5 } from 'mdbreact';\nimport Pagination from 'react-bootstrap/Pagination'\nimport { useAuth } from 'contexts/authContext';\nimport { getScannerDetails, getTickerScannerOptions } from 'api/Api'\nimport { useCsvDownloadUpdate } from \"contexts/CsvDownloadContext\";\nimport ButtonCsvDownload from 'components/ButtonCsvDownload'\nimport { useDatatable, useDatatableLoading } from \"contexts/DatatableContext\";\nimport Spinner from 'components/Spinner'\n\nconst ScannerComponent = () => {\n  const auth = useAuth();\n  const history = useHistory();\n  const [collapseOpen,] = React.useState(false)\n  const [exchange, setExchange] = React.useState(null)\n  const [sector, setSector] = useState(null);\n  const [industry, setIndustry] = useState(null);\n  const [optionsExchange, setOptionsExchanges] = useState([])\n  const [optionsSector, setOptionsSector] = useState([])\n  const [optionsIndustry, setOptionsIndustry] = useState([])\n\n  const [pageAmount, setPageAmount] = useState(10)\n  const [currentPage, setCurrentPage] = useState(1);\n  const [wholeRows, setWholeRows] = useState(0);\n  const [isLoadingData, setLoadingData] = useDatatableLoading()\n\n  const hearder_columns = useMemo(() => {\n    return [\n    {\n      label: 'Industry',\n      field: 'industry',\n      width: 200,\n      attributes: {\n        'aria-controls': 'DataTable',\n        'aria-label': 'symbol',\n      },\n    },\n    {\n      label: 'Sector',\n      field: 'sector',\n      width: 200,\n    },\n    {\n      label: 'Exchange',\n      field: 'exchange',\n      width: 200,\n    },\n    {\n      label: 'Country',\n      field: 'country',\n      width: 200,\n    },\n    {\n      label: 'Market Cap',\n      field: 'marketcap',\n      width: 200,\n    },\n    {\n      label: 'Symbol',\n      field: 'symbol',\n      width: 200,\n    },\n    {\n      label: 'Cik Id',\n      field: 'cik',\n    },\n  ]}, [])\n\n  const [datatable, setDatatable] = useDatatable({\n    columns: hearder_columns,\n    rows: [],\n  });\n\n  const updateCsvDownload = useCsvDownloadUpdate();\n\n  const wrapSetDatatable = (data) => {\n    setDatatable(data)\n    updateCsvDownload([...data.rows])\n  }\n\n  useEffect(() => {\n    const loadWholeOptions = async () => {\n      setLoadingData(true)\n      const scannerDetails = await getScannerDetails('', '', '', currentPage, pageAmount)\n\n      if (scannerDetails.success) {\n        wrapSetDatatable({\n          columns: hearder_columns,\n          rows: scannerDetails.result,\n        })\n        setWholeRows(scannerDetails.page_total)\n      }\n\n      const scannerOptions = await getTickerScannerOptions()\n      if (scannerOptions.success) {\n        const exchanges = [{\n          value: '',\n          label: 'All'\n        }]\n\n        scannerOptions.result.exchanges.map(exchange => {\n          if (exchange === '') {\n            return null\n          }\n          exchanges.push({\n            value: exchange,\n            label: exchange\n          })\n        })\n\n        const industries = [{\n          value: '',\n          label: 'All'\n        }]\n\n        scannerOptions.result.industry.map(industry => {\n          if (industry !== '' && industry !== null) {\n            industries.push({\n              value: industry,\n              label: industry\n            })\n          }\n        })\n\n        const sectors = [{\n          value: '',\n          label: 'All'\n        }]\n\n        scannerOptions.result.sector.forEach(sector => {\n          if (sector !== '' && sector !== null) {\n            sectors.push({\n              value: sector,\n              label: sector\n            })\n          }\n        })\n\n        setOptionsExchanges(exchanges)\n        setOptionsIndustry(industries)\n        setOptionsSector(sectors)\n      }\n      setLoadingData(false)\n    }\n\n    loadWholeOptions()\n  }, [])\n\n  const handleSignout = () => {\n    auth.signout()\n    history.push('/login')\n  }\n\n  const handleSectorChange = async (e) => {\n    setSector(e)\n\n    setLoadingData(true)\n    const scannerDetails = await getScannerDetails(exchange ? exchange.value : '', industry ? industry.value : '', e.value, currentPage, pageAmount)\n\n    if (scannerDetails.success) {\n      wrapSetDatatable({\n        columns: hearder_columns,\n        rows: scannerDetails.result,\n      })\n      setWholeRows(scannerDetails.page_total)\n    }\n    setLoadingData(false)\n  }\n\n  const handleExchangeChange = async (e) => {\n    setExchange(e)\n\n    setLoadingData(true)\n    const scannerDetails = await getScannerDetails(exchange ? exchange.value : '', industry ? industry.value : '', e.value, currentPage, pageAmount)\n\n    if (scannerDetails.success) {\n      wrapSetDatatable({\n        columns: hearder_columns,\n        rows: scannerDetails.result,\n      })\n      setWholeRows(scannerDetails.page_total)\n    }\n    setLoadingData(false)\n  }\n\n  const handleIndustryChange = async (e) => {\n    setIndustry(e)\n\n    setLoadingData(true)\n    const scannerDetails = await getScannerDetails(exchange ? exchange.value : '', e.value, sector ? sector.value : '')\n\n    wrapSetDatatable({\n      columns: hearder_columns,\n      rows: scannerDetails.result,\n    })\n    setLoadingData(false)\n  }\n\n  const loadScannerDetails = async () => {\n    setLoadingData(true)\n    const scannerDetails = await getScannerDetails(exchange ? exchange.value : '', industry ? industry.value : '', sector ? sector.value : '', currentPage, pageAmount)\n\n    wrapSetDatatable({\n      columns: hearder_columns,\n      rows: scannerDetails.result,\n    })\n    setWholeRows(scannerDetails.page_total)\n    setLoadingData(false)\n  }\n\n  const handlePrevClick = () => {\n    setCurrentPage(currentPage - 1)\n    loadScannerDetails(currentPage - 1)\n  }\n\n  const handleNextClick = () => {\n    setCurrentPage(currentPage + 1)\n    loadScannerDetails(currentPage + 1)\n  }\n\n  return (\n    <div className=\"hunter-chart-container\">\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark hunter-nav-bar\">\n        <div className=\"logo-title\">\n          <a href=\"/chart\" className=\"hunter-navbar-brand\">\n            Violette AM - Client Portal\n          </a>\n        </div>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/chart\"} className=\"nav-link\"></Link>\n          </li>\n        </div>\n        <Collapse navbar isOpen={collapseOpen}>\n          <Nav className=\"ml-auto\" navbar>\n            <UncontrolledDropdown nav>\n              <DropdownToggle\n                caret\n                color=\"default\"\n                nav\n                onClick={(e) => e.preventDefault()}\n              >\n                <div className=\"photo\">\n                  <img\n                    alt=\"...\"\n                    src={require(\"assets/img/anime3.png\").default}\n                  />\n                </div>\n                <p className=\"d-lg-none\">Log out</p>\n              </DropdownToggle>\n              <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                <DropdownItem divider tag=\"li\" />\n                <NavLink tag=\"li\">\n                  <DropdownItem className=\"nav-item\" onClick={() => {handleSignout()}}>Log out</DropdownItem>\n                </NavLink>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <li className=\"separator d-lg-none\" />\n          </Nav>\n        </Collapse>\n      </nav>\n      <div className=\"col-sm-12 hunter-data-table-container scanner-page-container\">\n        <div className=\"hunter-data-table-title\">\n          Scanner Table\n        </div>\n        <div className=\"hunter-search-filter-area\">\n          <div className=\"select-option\">\n            <Select\n              value={exchange}\n              onChange={handleExchangeChange}\n              options={optionsExchange}\n              placeholder=\"Exchange\"\n            />\n          </div>\n          <div className=\"select-option\">\n            <Select\n              value={sector}\n              onChange={handleSectorChange}\n              options={optionsSector}\n              placeholder=\"Sector\"\n            />\n          </div>\n          <div className=\"select-option\">\n            <Select\n              value={industry}\n              onChange={handleIndustryChange}\n              options={optionsIndustry}\n              placeholder=\"Industry\"\n            />\n          </div>\n          <div className='input-group date hunter-date-time-picker' id='datetimepicker1'>\n            <ButtonCsvDownload filename={\"scanner.csv\"}>Csv Download</ButtonCsvDownload>\n          </div>\n        </div>\n        {isLoadingData && <div className=\"hunter-spinner-area\"><span className=\"mr-30\">Loading ...</span>    <Spinner>Loading</Spinner></div>}\n        {!isLoadingData && <>\n          <MDBDataTableV5\n            hover\n            maxHeight=\"500px\"\n            entriesOptions={[10, 25, 50, 100]}\n            entries={10}\n            pagesAmount={4}\n            data={datatable}\n            dark={true}\n            noBottomColumns={true}\n            small={true}\n            striped={true}\n            scrollY={true}\n          />;\n          <Pagination>\n            <Pagination.Item>{(currentPage-1)*10 + 1}</Pagination.Item>\n            <Pagination.Item>{(currentPage) * 10}</Pagination.Item>\n            <Pagination.Item> of </Pagination.Item>\n            <Pagination.Item> { wholeRows } </Pagination.Item>\n            <Pagination.Prev disabled={currentPage <= 0} onClick={() => { handlePrevClick() }}/>\n            <Pagination.Next disabled={(currentPage + 1) >= wholeRows / 10} onClick={() => { handleNextClick() }}/>\n          </Pagination>\n        </>}\n      </div>\n    </div>\n  );\n};\n\nexport default ScannerComponent;\n","import React from \"react\";\nimport {\n  Button\n} from \"reactstrap\";\n\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport ScannerComponent from 'components/Scanner/ScannerComponent.js'\n\nimport { routes } from \"routes.js\";\n\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\nimport { CsvDownloadProvider } from \"contexts/CsvDownloadContext\";\n\nfunction Scanner() {\n  const [isShowSidebar, setShowSidebar] = React.useState(false);\n  const [selectedInstance, setSelectedInstance] = React.useState('scanner');\n\n  const handleSidebarChange = () => {\n    setShowSidebar(!isShowSidebar);\n  };\n\n  const handleInstanceChange = (instance) => {\n    setSelectedInstance(instance)\n  }\n\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color }) => (\n        <React.Fragment>\n          <div className=\"wrapper hunter-wrapper\">\n            {!isShowSidebar && (\n              <Button\n                className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\n                onClick={handleSidebarChange}\n              >\n                <i className=\"tim-icons icon-align-left-2\"/>\n              </Button>\n            )}\n            {isShowSidebar && (\n              <Sidebar\n                isAdminPage={false}\n                routes={routes}\n                subInstance={'tradedatatable'}\n                selectedInstance={selectedInstance}\n                handleSidebarChange={handleSidebarChange}\n                handleInstanceChange={handleInstanceChange}\n              />\n            )}\n            <div className=\"col-sm-12\">\n              <CsvDownloadProvider>\n                <ScannerComponent />\n              </CsvDownloadProvider>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nexport default Scanner;","import React from 'react'\nimport Chart from 'react-apexcharts'\nimport moment from \"moment\";\n\nexport class MultiLineChart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      series: this.getSeries(),\n      options: {\n        chart: {\n          height: 350,\n          type: 'line',\n          zoom: {\n            enabled: false\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          show: true,\n          curve: 'smooth',\n          lineCap: 'butt',\n          colors: undefined,\n          width: 2,\n          dashArray: 0,\n        },\n        title: {\n          text: props.isPercent ? 'Percent Gain/Lost' : 'Efficiency',\n          align: 'left',\n          style: {\n            fontSize:  '18px',\n            fontWeight:  'bold',\n            color: '#FFFFFF'\n          },\n        },\n        grid: {\n          show: false\n        },\n        xaxis: {\n          categories: this.getCategories(),\n          labels: {\n            show: true,\n            style: {\n              colors: '#FFFFFF',\n            },\n            formatter: (val, opt) =>\n              moment.utc(val).format(\"MM/DD hh:mm\")\n          },\n          datetimeUTC: true,\n        },\n        yaxis: {\n          labels: {\n            show: true,\n            style: {\n              colors: '#FFFFFF',\n            },\n            formatter: (value) => { return (value)?value.toFixed(5):0 },\n          },\n          axisBorder: {\n            show: true,\n          },\n          min: this.getMinValue(),\n          max: this.getMaxValue(),\n        },\n        legend: {\n          show: true,\n          labels: {\n            colors: ['#FFFFFF']\n          },\n          position: 'top'\n        }\n      },\n    };\n  }\n\n  getSeries() {\n    const series = []\n    this.props.chartData.map((data) => {\n      for (const property in data) {\n        series.push({\n          name: property,\n          data: data[property].map((o) => this.props.isPercent ? o.percent : o.efficiency)\n        })\n      }\n      return null\n    })\n    return series\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.chartData !== this.props.chartData) {\n      this.setState({\n        series: this.getSeries(),\n        options: {\n          xaxis: {\n            categories: this.getCategories(),\n            labels: {\n              show: true,\n              style: {\n                  colors: '#FFFFFF',\n              },\n              formatter: (val) =>\n                moment.utc(val).format(\"MM/DD\")\n            },\n            datetimeUTC: true,\n          },\n          yaxis: {\n            labels: {\n              show: true,\n              style: {\n                colors: '#FFFFFF',\n              },\n              formatter: (value) => value,\n              min: this.getMinValue(),\n              max: this.getMaxValue(),\n            },\n            axisBorder: {\n              show: true,\n            },\n          }\n        },\n      })\n    }\n  }\n\n  getMinValue() {\n    let series = [];\n    this.props.chartData.map((data) => {\n      for (const property in data) {\n        const rows = data[property].map(o => this.props.isPercent ? o.percent : o.efficiency)\n        series.push(Math.min(...rows))\n      }\n\n      return null\n    })\n    const min = Math.min(...series)\n    return min;\n  }\n\n  getMaxValue() {\n    let series = [];\n    this.props.chartData.map((data) => {\n      for (const property in data) {\n        const rows = data[property].map(o => this.props.isPercent ? o.percent : o.efficiency)\n        series.push(Math.max(...rows))\n      }\n      return null\n    })\n    const max = Math.max(...series)\n    return max;\n  }\n\n  getCategories() {\n    const categories = this.props.chartData.map((data) => {\n      for (const property in data) {\n        return data[property].map((o) => o.date)\n      }\n      return []\n    })\n\n    return categories[0]\n  }\n\n  render() {\n    return (\n      <div id=\"chart\">\n        <Chart options={this.state.options} series={this.state.series} type=\"line\" height={350} />\n      </div>\n    )\n  }\n}","import React, { useEffect, useState } from 'react'\nimport ReactApexChart from 'react-apexcharts'\n\nconst HeatMapChart = (props) => {\n  const generateData = (count, period) => {\n    const randomArray = []\n    for (let i = 0;i < count; i ++) {\n      const min = Math.ceil(period.min)\n      const max = Math.floor(period.max)\n      randomArray.push(Math.floor(Math.random() * (max - min) + min))\n    }\n    return randomArray\n  }\n\n  const [series, setSeries] = useState([])\n\n  const [chartOptions, setChartOptions] = useState(\n    {\n      chart: {\n        height: 350,\n        type: 'heatmap',\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        width: 1\n      },\n      colors: [\"#008FFB\"],\n      title: {\n        align: 'center',\n        text: 'HeatMap Chart Per Symbols',\n        style: {\n          color: '#FFFFFF'\n        }\n      },\n    },\n  )\n\n  useEffect(() => {\n    if (props.multiSymbol && props.multiSymbol.length) {\n      const seriesBuffer = props.multiSymbol.map((symbol) => {\n        return {\n          name: symbol.value,\n          data: generateData(20, {\n            min: -30,\n            max: 55\n          })\n        }\n      }) \n      console.log('props.symbols', seriesBuffer)\n      setSeries(seriesBuffer)\n    }\n  }, [props.multiSymbol])\n\n  return (\n    <div id='chart'>\n      <ReactApexChart\n        options={chartOptions}\n        series={series}\n        type='heatmap'\n        height={350}\n      />\n    </div>\n  )\n}\n\nexport default HeatMapChart","import React, { useState, useEffect } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nconst getWiningData = (chartData, isAverage) => {\n  return chartData.map((d) => isAverage ? d.avgWinning / 100 : d.winning )\n}\n\nconst getLosingData = (chartData, isAverage) => {\n  return chartData.map((d) => isAverage ? d.avgLosing / 100 : d.losing)\n}\n\nconst getSymbols = (chartData) => {\n  return chartData.map((d) => d.symbol)\n}\n\nconst optionCreator = (chartData, isAverage) => {\n  return {\n    chart: {\n      type: \"bar\",\n      width: \"100%\",\n      toolbar: {\n        show: false\n      },\n      events: {\n        click: function (event, chartContext, config) {\n          console.log(\"clicked\");\n        }\n      }\n    },\n    states: {\n      normal: {\n        filter: {\n          type: \"none\"\n        }\n      },\n      active: {\n        filter: {\n          type: \"darken\",\n          value: 0.35\n        }\n      }\n    },\n    colors: [\"#00ff00\", `rgba(255,0,0, ${1 ? 0.5 : 1})`],\n    title: {\n      text: isAverage ? \"Winning & Losing Avg Percent\" : \"Wining & Losing Trades\",\n      align: \"left\",\n      offsetX: 8,\n      offsetY: -2,\n      style: {\n        fontSize: \"16px\",\n        color: '#FFFFFF'\n      }\n    },\n    plotOptions: {\n      bar: {\n        endingShape: \"rounded\",\n        columnWidth: \"75%\",\n        barHeight: \"100%\",\n        dataLabels: {\n          position: \"top\"\n        }\n      }\n    },\n    dataLabels: {\n      enabled: true,\n      offsetY: -20,\n      style: {\n        fontSize: \"16px\",\n        colors: [\"#FFFFFF\", \"#FFFFFF\"]\n      },\n      formatter: (value, opts) => {\n        return isAverage ? value.toFixed(3) : value\n      },\n    },\n    stroke: {\n      show: true,\n      width: 1,\n      colors: [\"#fff\"]\n    },\n    xaxis: {\n      categories: getSymbols(chartData),\n      labels: {\n        show: true,\n        style: {\n            colors: '#FFFFFF',\n        },\n      },\n    },\n    grid: {\n      show: false\n    },\n    yaxis: {\n      labels: {\n        show: true,\n        style: {\n            colors: '#FFFFFF',\n        },\n        formatter: (value) => { return isAverage ? value.toFixed(5) : value },\n      },\n      axisBorder: {\n        show: true,\n      },\n    },\n    tooltip: {\n      enabled: true\n    },\n    legend: {\n      position: \"top\",\n      horizontalAlign: \"right\",\n      offsetY: -50,\n      fontSize: \"14px\",\n      labels: {\n        colors: \"#FFFFFF\"\n      },\n      markers: {\n        width: 16,\n        height: 16,\n        radius: 4\n      },\n      itemMargin: {\n        horizontal: 5,\n        vertical: 5\n      },\n      onItemHover: {\n        highlightDataSeries: true\n      }\n    }\n  };\n};\n\nexport default function GroupApexBar(props) {\n  const { data: chartData, isAverage } = props;\n  const [options, setOptions] = useState(optionCreator(chartData, isAverage));\n  const [series, setSeries] = useState([\n    {\n      data: getWiningData(chartData, isAverage)\n    },\n    {\n      data: getLosingData(chartData, isAverage)\n    }\n  ]);\n\n  useEffect(() => {\n    setOptions(optionCreator(chartData, isAverage))\n    setSeries([\n      {\n        name: isAverage ? 'Winning Average' : 'Winning',\n        data: getWiningData(chartData, isAverage)\n      },\n      {\n        name: isAverage ? 'Losing Average' : 'Losing',\n        data: getLosingData(chartData, isAverage)\n      }\n    ])\n  }, [chartData, isAverage])\n\n  return (\n    <div id=\"chart\">\n      <ReactApexChart\n        options={options}\n        series={series}\n        type=\"bar\"\n        width={'100%'}\n        height={400}\n      />\n    </div>\n  );\n}","import { MultiLineChart } from './MultiLineChart'\nimport HeatMapChart from './HeatMapChart'\nimport GroupApexBar from './GroupBarChart'\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\nclass OptimizationChartItem extends React.Component {\n\trender() {\n    const { data: mainData, multiSymbol } = this.props;\n\n\t\tif (mainData == null) {\n\t\t\treturn <div>Loading...</div>\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<HeatMapChart multiSymbol={multiSymbol}/>\n\t\t\t\t<MultiLineChart chartData={mainData.percentEfficiency} isPercent={true}/>\n\t\t\t\t<TypeChooser>\n\t\t\t\t\t{type => <GroupApexBar type={type} data={mainData.winningLosing} isAverage={false}/>}\n\t\t\t\t</TypeChooser>\n\t\t\t\t<TypeChooser>\n\t\t\t\t\t{type => <GroupApexBar type={type} data={mainData.winningLosingAvg} isAverage={true}/>}\n\t\t\t\t</TypeChooser>\n\t\t\t\t<MultiLineChart chartData={mainData.percentEfficiency} isPercent={false}/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nOptimizationChartItem.propTypes = {\n\tdata: PropTypes.array.isRequired,\n\twidth: PropTypes.number.isRequired,\n\tratio: PropTypes.number.isRequired,\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\n};\n\nOptimizationChartItem.defaultProps = {\n\ttype: \"svg\",\n};\nOptimizationChartItem = fitWidth(OptimizationChartItem);\n\nexport default OptimizationChartItem;","import React, { useState, useEffect } from \"react\";\nimport OptimizationChartItem from './OptimizationChartItem'\n\nconst OptimizationChart = (props) => {\n  const { \n    strategy,\n    chartPeriod,\n    multiSymbol,\n    microStrategy,\n    startDate,\n    endDate,\n  } = props;\n\n  const [exchange, setExchange] = useState('')\n  const [chartData, setChartData] = useState(null)\n\t\n  useEffect(() => {\n    const get_data = () => {\n      const symbols = multiSymbol.map((symbol) => symbol.value);\n      if (!symbols.length | !microStrategy) {\n        return;\n      }\n      \n      const requestOptions = {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          'symbols': symbols,\n          \"macro\": strategy.value,\n          \"micro\": microStrategy.value,\n          'start_date': startDate,\n          'end_date': endDate,\n        })\n      };\n      try {\n        fetch(process.env.REACT_APP_BACKEND_URL+'/api/get_backtesting_result', requestOptions)\n          .then(response => response.json())\n          .then(data => {\n            setChartData(data['chart_data'])\n            setExchange(data['exchange'])\n          })    \n      } catch (error) {\n        console.log(error)\n      }\n    }\n    \n    if (multiSymbol.length) {\n      get_data()\n    }\n  }, [multiSymbol, microStrategy, startDate, endDate, strategy])\n    \n  const displayPerformanceChart = (type) => {\n    return (\n      <OptimizationChartItem type={type} data={chartData} multiSymbol={multiSymbol}/>\n    )\n  }\n\n  return (\n\t\t<>\n      {\n\t\t\t\tchartData == null ? <div>Loading...</div> :\n          <>\n            <div className=\"select-wrape\">\n              <div>\n                <strong>{chartPeriod}{exchange}</strong>\n                {/* [NASDAQ] */}\n              </div>\n            </div>\n            {displayPerformanceChart()}\n          </>\n        }\n\t\t</>\n  )\n}\n\nexport default OptimizationChart","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport Select from 'react-select'\nimport \"react-datetime/css/react-datetime.css\";\nimport OptimizationChart from \"components/optimization-chart/OptimizationChart\"\nimport disableScroll from 'disable-scroll';\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\nimport MultiRangeSlider from 'components/MultiRangeSlider/MultiRangeSlider'\n\nimport {\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  NavLink,\n  Nav,\n} from \"reactstrap\";\n\nimport { useAuth } from 'contexts/authContext';\n\nconst OptimizationChartPage = () => {\n  \n  const auth = useAuth();\n  const history = useHistory();\n  const [collapseOpen,] = React.useState(false)\n  const [timeFrame, setTimeFrame] = useState({\n    value: '2min',\n    label: '2min',\n  })\n  \n  const [optionsTimeFrame] = useState([\n    {\n      value: '2min',\n      label: '2min',\n    },\n    {\n      value: '12min',\n      label: '12min',\n    }\n  ])\n\n  const [selectedInstance] = useState({\n      value: 'Optimization',\n      label: 'Optimization'\n  })\n  \n  const [multiSymbol, setMultiSymbol] = useState([])\n  const [strategy, setStrategy] = useState(null)\n  const [symbolList, setSymbolList] = useState([])\n  const [microStrategy, setMicroStrategy] = useState(null)\n  const [apiFlag, setApiFlag] = useState(false)\n  const [tradeStartDate, setTradeStartDate] = useState('')\n  const [tradeEndDate, setTradeEndDate] = useState('')\n  const [strategyList, setStrategyList] = useState([]);\n  \n  const [optionsMicroStrategy, setOptionsMicroStrategy] = useState([])\n  \n  const [optionsStratgy, setOptionsStrategy] = useState([])\n\n  const  handleTimeFrameChange = (e) => {\n    setTimeFrame(e)\n  }\n\n  const getStrategyList = useCallback(\n    () => {\n      fetch(process.env.REACT_APP_BACKEND_URL + \"/api/get_strategy_list\")\n        .then(response => response.json())\n        .then(data => {\n          setStrategyList(data.result);\n          const strategyOptions = data.result.map((o => {\n            return {\n              value: o.macro,\n              label: o.macro,\n            }\n          }))\n          setOptionsStrategy(strategyOptions);\n          setStrategy( strategyOptions[0] )\n          \n          if (data.result.length) {\n            data.result.forEach((item) => {\n              if (item.macro) {\n                const microStrategyOptions = item.micro.map(o => {\n                  return {\n                    value: o,\n                    label: o,\n                  }\n                })\n                \n                setOptionsMicroStrategy( microStrategyOptions )\n                setMicroStrategy( microStrategyOptions[0] )\n                \n                const symbolOptions = item.symbols.map(o => {\n                  return {\n                    value: o,\n                    label: o,\n                  }\n                })\n                setSymbolList(symbolOptions)\n              }\n            })\n          }\n        })   \n    },\n    [],\n  )\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('user-info'))\n    if (user.is_admin || user.role.length) {\n      getStrategyList();\n    }\n    disableScroll.on();\n    return () => {\n      disableScroll.off();\n    }\n  }, [getStrategyList])\n  \n  useEffect(() => {\n    const get_tables = () => {\n      const requestOptions = {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          'strategy': strategy.value\n        })\n      };\n      fetch(process.env.REACT_APP_BACKEND_URL + \"/api/tables\", requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          let temp_data = []\n          data.tables.map((x) => {\n            temp_data.push({\n              value: x,\n              label: x\n            });\n            return null\n          })\n          setSymbolList(temp_data)\n          setMultiSymbol([temp_data[0]])\n        })\n    }\n    \n    if (!apiFlag && strategy) {\n      get_tables();\n      setApiFlag(true)\n    }\n  }, [apiFlag, setApiFlag, strategy])\n\n  const handlMultiSymbolChange = (e) => {\n    setMultiSymbol(e)\n  }\n\n  const handleStrategyChange = async (e) => {\n    if (e) {\n      setStrategy(e)\n      if (strategyList.length) {\n        strategyList.forEach((item) => {\n          if (item.macro === e.value) {\n            const microStrategyOptions = item.micro.map(o => {\n              return {\n                value: o,\n                label: o,\n              }\n            })\n            setOptionsMicroStrategy( microStrategyOptions )\n            const is_2m = microStrategyOptions.filter((o => o.value === '2m'))\n            if (is_2m.length) {\n              setMicroStrategy({\n                value: '2m',\n                label: '2m'\n              })\n            } else {\n              setMicroStrategy(microStrategyOptions[2])\n            }\n\n            const symbolOptions = item.symbols.map(o => {\n              return {\n                value: o,\n                label: o,\n              }\n            })\n            setSymbolList(symbolOptions)\n            setMultiSymbol([symbolOptions[0]])\n          }\n        })\n      }\n    }\n  }\n\n  const handleMicroStrategyChange = (e) => {\n    setMicroStrategy(e);\n  }\n\n  const selectDateRange = (startDate, endDate) => {\n    setTradeStartDate(startDate)\n    setTradeEndDate(endDate)\n  }\n\n  const handleSignout = () => {\n    auth.signout()\n    history.push('/login')\n  }\n\n  return (\n    <div className=\"hunter-chart-container\">\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark hunter-nav-bar\">\n        <div className=\"logo-title\">\n          <a href=\"/chart\" className=\"hunter-navbar-brand\">\n            Violette AM - Client Portal \n          </a>\n        </div>\n        <div className=\"navbar-nav ma-auto hunter-nav-bar-nav\">\n          <li className=\"nav-item\">\n            <Link to={\"/chart\"} className=\"nav-link\"></Link>\n          </li>\n          <div className=\"select-option\">\n            <Select\n              value={timeFrame}\n              onChange={handleTimeFrameChange}\n              options={optionsTimeFrame}\n              placeholder=\"Time Frame\"\n            />\n          </div>\n          <div className=\"select-multi-option hunter-multi-select-checkboxes\">\n            <ReactMultiSelectCheckboxes\n              options={symbolList}\n              value={multiSymbol}\n              onChange={handlMultiSymbolChange}\n            />\n          </div>\n          <div className=\"select-option\">\n            <Select\n              value={strategy}\n              onChange={handleStrategyChange}\n              options={optionsStratgy}\n              placeholder=\"Macro Strategy\"\n            />\n          </div>\n          <div className=\"select-option\">\n            <Select\n              name=\"filters\"\n              placeholder=\"Micro Strategy\"\n              value={microStrategy}\n              onChange={handleMicroStrategyChange}\n              options={optionsMicroStrategy}\n            />\n          </div>\n          <div className='date hunter-item-chart hunter-date-time-picker' id='datetimepicker1'>\n            <MultiRangeSlider\n              selectDateRange={selectDateRange}\n            />\n          </div>\n        </div>\n        <Collapse navbar isOpen={collapseOpen}>\n          <Nav className=\"ml-auto\" navbar>\n            <UncontrolledDropdown>\n              <DropdownToggle\n                caret\n                color=\"default\"\n                nav\n                onClick={(e) => e.preventDefault()}\n              >\n                <div className=\"photo\">\n                  <img\n                    alt=\"...\"\n                    src={require(\"assets/img/anime3.png\").default}\n                  />\n                </div>\n                <p className=\"d-lg-none\">Log out</p>\n              </DropdownToggle>\n              <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                <DropdownItem divider tag=\"li\" />\n                <NavLink tag=\"li\">\n                  <DropdownItem className=\"nav-item\" onClick={() => {\n                    handleSignout()\n                  }}>Log out</DropdownItem>\n                </NavLink>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <li className=\"separator d-lg-none\" />\n          </Nav>\n        </Collapse>\n      </nav>\n      <div className=\"graphs-container dark\">\n        {microStrategy && (\n          < OptimizationChart\n            selectedInstance ={selectedInstance.value}\n            microStrategy={microStrategy}\n            multiSymbol={multiSymbol}\n            strategy={strategy}\n            isHomePage={false}\n            startDate={tradeStartDate}\n            endDate={tradeEndDate}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default OptimizationChartPage;\n","import React from \"react\";\nimport {\n  Button\n} from \"reactstrap\";\n\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport OptimizationChartPage from \"components/optimization-chart/OptimizationChartPage\"\nimport { routes } from \"routes.js\";\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\n\nfunction Optimization() {\n  const [isShowSidebar, setShowSidebar] = React.useState(false);\n  const [selectedInstance, setSelectedInstance] = React.useState('market_watch');\n\n  const handleSidebarChange = () => {\n    setShowSidebar(!isShowSidebar);\n  };\n\n  const handleInstanceChange = (instance) => {\n    setSelectedInstance(instance)\n  }\n\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color }) => (\n        <React.Fragment>\n          <div className=\"wrapper hunter-wrapper\">\n          {!isShowSidebar && (\n            <Button\n              className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\n              onClick={handleSidebarChange}\n            >\n              <i className=\"tim-icons icon-align-left-2\"/>\n            </Button>\n          )}\n          {isShowSidebar && (\n            <Sidebar\n              isAdminPage={false}\n              routes={routes}\n              selectedInstance={selectedInstance}\n              handleSidebarChange={handleSidebarChange}\n              handleInstanceChange={handleInstanceChange}\n            />\n            )}\n            <div className=\"col-sm-12 hunter-watch-list-area\">\n              <OptimizationChartPage />\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nexport default Optimization;","import React, {useState, useEffect, useContext} from 'react'\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { apiGetDatabases, apiDeleteDatabase, apiCreateBackup, apiExecuteBackup, apiStopBackup } from \"api/Api\"\r\n\r\nexport const DBDashboardContext = React.createContext()\r\nexport const DBDashboardUpdateContext = React.createContext()\r\nexport const DBDashboardLoadingContext = React.createContext()\r\nexport const DBDatabaseExportContext = React.createContext()\r\nexport const DBDatabaseDeleteContext = React.createContext()\r\nexport const DBBackupContext = React.createContext()\r\n\r\n\r\nexport function useBackupStatus() {\r\n  return useContext(DBBackupContext)\r\n}\r\n\r\nexport function useDBDashboard() {\r\n  return useContext(DBDashboardContext)\r\n}\r\n\r\nexport function useDBDashboardUpdate() {\r\n  return useContext(DBDashboardUpdateContext)\r\n}\r\n\r\nexport function useDBDashboardLoading() {\r\n  return useContext(DBDashboardLoadingContext)\r\n}\r\n\r\nexport const useActiveDatabase = () => {\r\n  const {hash} = useLocation()\r\n  const activeDatabase = hash.substring(1)\r\n\r\n  return activeDatabase\r\n}\r\n\r\nexport const useExportDatabase = () => {\r\n  return useContext(DBDatabaseExportContext)\r\n}\r\n\r\nexport const useDeleteDatabase = () => {\r\n  return useContext(DBDatabaseDeleteContext)\r\n}\r\n\r\nexport function DBDashboardProvider({children}) {\r\n  const [isLoading, setLoading] = useState(false)\r\n  const [databases, setDatabases] = useState([])\r\n  const [isBackupRunning, setBackupRunning] = useState(false)\r\n  const [currentBackupId, setCurrentBackupId] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    apiGetDatabases().then((response) => {\r\n      setDatabases(response.data)\r\n      setLoading(false)\r\n    })\r\n  }, [setDatabases])\r\n\r\n  const history = useHistory()\r\n\r\n  const updateDatabases = function(data) {\r\n    setDatabases(data)\r\n  }\r\n\r\n  const deleteDatabase = (databaseName) => {\r\n    const confirmed = window.confirm(`Are you sure to delete the database \"${databaseName}\"?`);\r\n\r\n    if (confirmed) {\r\n      apiDeleteDatabase(databaseName).then((response) => {\r\n        const updatedDatabases = databases.filter((filteredDatabase) => {\r\n          return filteredDatabase != databaseName\r\n        });\r\n        setDatabases(updatedDatabases)\r\n        history.push('/db_management')\r\n      })\r\n    }\r\n  }\r\n\r\n  const exportDatabase = (databaseName, collectionName='') => {\r\n    setBackupRunning(true)\r\n    apiCreateBackup(databaseName, collectionName)\r\n      .then(data => {\r\n        setCurrentBackupId(data.id)\r\n\r\n        // execute backup\r\n        apiExecuteBackup(data).then(data => {\r\n          setBackupRunning(false)\r\n        })\r\n\r\n      })\r\n  }\r\n\r\n  const stopExportDatabase = () => {\r\n    setBackupRunning(false)\r\n    if (currentBackupId) {\r\n      apiStopBackup({'id':currentBackupId}).then(data => {\r\n        setBackupRunning(false)\r\n        setCurrentBackupId(false)\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <DBDashboardLoadingContext.Provider value={isLoading}>\r\n      <DBBackupContext.Provider value={isBackupRunning}>\r\n        <DBDashboardContext.Provider value={databases}>\r\n          <DBDashboardUpdateContext.Provider value={updateDatabases}>\r\n            <DBDatabaseExportContext.Provider value={[exportDatabase, stopExportDatabase]}>\r\n              <DBDatabaseDeleteContext.Provider value={deleteDatabase}>\r\n                {children}\r\n              </DBDatabaseDeleteContext.Provider>\r\n            </DBDatabaseExportContext.Provider>\r\n          </DBDashboardUpdateContext.Provider>\r\n        </DBDashboardContext.Provider>\r\n      </DBBackupContext.Provider>\r\n    </DBDashboardLoadingContext.Provider>\r\n  )\r\n}","import React from 'react';\r\nimport { MDBLink, MDBIcon } from 'mdbreact';\r\nimport { useThemeColors } from 'contexts/ThemeContext'\r\nimport { useBackupStatus, useExportDatabase } from 'contexts/DBDashboardContext'\r\n\r\nfunction DBCollection(props) {\r\n  const colors = useThemeColors()\r\n  const dbName = props.dbname\r\n  const collectionName = props.name\r\n\r\n  const buttonStyle = {\r\n    color: colors.actionButtonColor,\r\n    backgroundColor: colors.actionButtonBg,\r\n  }\r\n\r\n  const textStyle = {\r\n    color: colors.tableTextColor,\r\n  }\r\n\r\n  const rowStyle = {\r\n    backgroundColor: colors.white,\r\n  }\r\n\r\n  const isBackupRunning = useBackupStatus()\r\n  const [handleBackup, ] = useExportDatabase()\r\n\r\n\r\n  return (\r\n    <>\r\n      <tr style={rowStyle}>\r\n        <td><span style={textStyle}>{props.index}.</span></td>\r\n        <td><span style={textStyle}>{props.name}</span></td>\r\n        <td>\r\n          <div class=\"d-flex align-items-center\">\r\n            <MDBLink disabled={isBackupRunning} onClick={(e) => {e.preventDefault(); props.onDeleteClick(); }} style={{...buttonStyle, color: colors.red}}><MDBIcon icon=\"trash\" /></MDBLink>\r\n            <MDBLink disabled={isBackupRunning} onClick={(e) => {e.preventDefault(); handleBackup(dbName, collectionName); }} style={buttonStyle}><MDBIcon icon=\"file-export\" /></MDBLink>\r\n            {isBackupRunning && <span class=\"ml-1 spinner-border spinner-border-sm text-primary\" role=\"status\" aria-hidden=\"true\"></span>}\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DBCollection;","import React, { useEffect, useState } from 'react';\r\nimport { apiGetCollections, apiDeleteCollection } from \"api/Api\"\r\nimport { useActiveDatabase } from 'contexts/DBDashboardContext'\r\nimport DBCollection from './Collection';\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\nimport Spinner from 'components/Spinner'\r\n\r\nfunction DBCollectionList() {\r\n  const [collections, setCollections] = useState([])\r\n  const dbName = useActiveDatabase()\r\n\r\n  const [isLoading, setLoading] = useState(true)\r\n\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    setCollections([])\r\n    apiGetCollections(dbName).then((response) => {\r\n      setCollections(response.data)\r\n      setLoading(false)\r\n    })\r\n  }, [useActiveDatabase()])\r\n\r\n  const deleteCollection = (collectionName) => {\r\n    const confirmed = window.confirm(`Are you sure to delete the collection \"${collectionName}\"?`);\r\n\r\n    if (confirmed) {\r\n      apiDeleteCollection(dbName, collectionName).then((response) => {\r\n        const updatedCollections = collections.filter((filteredCollection) => {\r\n          return filteredCollection != collectionName\r\n        });\r\n        setCollections(updatedCollections)\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  let index = 1\r\n\r\n\r\n  return (\r\n    <>\r\n      <MDBTable className=\"table table-hover\">\r\n        <MDBTableHead>\r\n          <tr>\r\n            <th width=\"2%\">#</th>\r\n            <th>Collection Name</th>\r\n            <td width=\"5%\"></td>\r\n          </tr>\r\n        </MDBTableHead>\r\n        <MDBTableBody>\r\n          {isLoading && <Spinner color=\"info\" />}\r\n          {collections && collections.map((collectionName) => {\r\n            return (\r\n              <DBCollection index={index++} key={collectionName} dbname={dbName} name={collectionName}\r\n                onDeleteClick={() => deleteCollection(collectionName)}\r\n              />\r\n            )\r\n          })}\r\n        </MDBTableBody>\r\n      </MDBTable>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DBCollectionList","import { MDBBtn, MDBIcon } from 'mdbreact'\r\nimport React from 'react'\r\nimport {useThemeColors} from 'contexts/ThemeContext'\r\nimport { useActiveDatabase, useBackupStatus, useDeleteDatabase, useExportDatabase } from 'contexts/DBDashboardContext'\r\n\r\nexport default function DBDatabaseActions() {\r\n  const dbName = useActiveDatabase()\r\n  const colors = useThemeColors()\r\n\r\n  const handleDelete = useDeleteDatabase()\r\n  const [handleBackup, ] = useExportDatabase()\r\n  const isBackupRunning = useBackupStatus()\r\n\r\n  return (\r\n    <>\r\n      {dbName &&\r\n      <div class=\"d-flex\">\r\n        <MDBBtn color=\"white\" onClick={(e) => {e.preventDefault(); handleDelete(dbName); }}><MDBIcon icon=\"trash\" style={{color: colors.white}} /></MDBBtn>\r\n        <MDBBtn disabled={isBackupRunning} className=\"d-flex flex-nowrap align-items-center\" color=\"primary\" onClick={(e) => {e.preventDefault(); handleBackup(dbName); }}>\r\n          <MDBIcon icon=\"file-export\" style={{color: colors.white}} /> <span class=\"ml-1\">Backup</span>\r\n          {isBackupRunning && <span class=\"ml-1 spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>}\r\n        </MDBBtn>\r\n      </div>}\r\n    </>\r\n  )\r\n}\r\n","import { MDBBox, MDBBreadcrumb, MDBBreadcrumbItem, MDBLink } from 'mdbreact';\r\nimport React from 'react';\r\nimport { useActiveDatabase } from 'contexts/DBDashboardContext'\r\n\r\nfunction DBPathway(props) {\r\n  const dbName = useActiveDatabase()\r\n  return (\r\n    <>\r\n      <MDBBreadcrumb style={{backgroundColor: 'transparent'}} className=\"mb-0\">\r\n        <MDBBreadcrumbItem>\r\n            Databases\r\n        </MDBBreadcrumbItem>\r\n        <MDBBreadcrumbItem active>\r\n            {dbName}\r\n        </MDBBreadcrumbItem>\r\n      </MDBBreadcrumb>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DBPathway;","import { MDBBox, MDBContainer } from 'mdbreact';\r\nimport DBDatabaseActions from './DatabaseActions';\r\nimport DBPathway from './Pathway';\r\nimport {useThemeColors} from 'contexts/ThemeContext'\r\n\r\nfunction DBControlBar(props) {\r\n  const colors = useThemeColors()\r\n  return (\r\n    <MDBBox class=\"d-flex justify-content-between align-items-center\" style={{backgroundColor: colors.darkBlue}}>\r\n      <DBPathway />\r\n      <DBDatabaseActions />\r\n    </MDBBox>\r\n  );\r\n}\r\n\r\nexport default DBControlBar;","import React from 'react';\r\nimport { MDBLink, MDBIcon } from 'mdbreact';\r\nimport { useThemeColors } from 'contexts/ThemeContext'\r\n\r\nfunction DBDatabase(props) {\r\n  const colors = useThemeColors()\r\n  const buttonStyle = {\r\n    color: colors.actionButtonColor,\r\n    backgroundColor: colors.actionButtonBg,\r\n  }\r\n\r\n  const textStyle = {\r\n    color: colors.tableTextColor,\r\n  }\r\n\r\n  const rowStyle = {\r\n    backgroundColor: colors.white,\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <tr style={rowStyle}>\r\n        <td><span style={textStyle}>{props.index}.</span></td>\r\n        <td><span style={textStyle}>{props.name}</span></td>\r\n        <td>\r\n          <div class=\"d-flex\">\r\n            <MDBLink onClick={(e) => {e.preventDefault(); props.onDeleteClick(); }} style={{...buttonStyle, color: colors.red}}><MDBIcon icon=\"trash\" /></MDBLink>\r\n            <MDBLink onClick={(e) => {e.preventDefault(); props.onSaveClick(); }} style={buttonStyle}><MDBIcon icon=\"file-export\" /></MDBLink>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DBDatabase","import React, { useEffect, useState } from 'react';\r\nimport { useDBDashboardLoading, useDBDashboard, useDeleteDatabase, useExportDatabase } from 'contexts/DBDashboardContext'\r\nimport DBDatabase from './Database';\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\nimport Spinner from 'components/Spinner'\r\n\r\nfunction DBDatabaseList() {\r\n  const databases = useDBDashboard()\r\n\r\n  const handleDelete = useDeleteDatabase()\r\n  const handleBackup = useExportDatabase()\r\n  const isLoading = useDBDashboardLoading()\r\n\r\n  let index = 1\r\n\r\n  return (\r\n    <>\r\n      <MDBTable className=\"table table-hover\">\r\n        <MDBTableHead>\r\n          <tr>\r\n            <th width=\"2%\">#</th>\r\n            <th>Database Name</th>\r\n            <td width=\"5%\"></td>\r\n          </tr>\r\n        </MDBTableHead>\r\n        <MDBTableBody>\r\n          {isLoading && <Spinner color=\"info\" />}\r\n          {databases && databases.map((databaseName) => {\r\n            return (\r\n              <DBDatabase index={index++} key={databaseName} name={databaseName}\r\n                onDeleteClick={() => handleDelete(databaseName)}\r\n                onSaveClick={() => handleBackup(databaseName)}\r\n              />\r\n            )\r\n          })}\r\n        </MDBTableBody>\r\n      </MDBTable>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DBDatabaseList","import { MDBCard, MDBCardBody, MDBCardHeader, MDBNav, MDBNavItem } from 'mdbreact';\r\nimport React from 'react';\r\nimport DBCollectionList from 'components/DBManagement/CollectionList'\r\nimport {useThemeColors } from 'contexts/ThemeContext'\r\nimport DBControlBar from './ControlBar';\r\nimport { useActiveDatabase } from 'contexts/DBDashboardContext';\r\nimport DBDatabaseList from './DatabaseList';\r\n\r\nfunction DBContent(props) {\r\n  const colors = useThemeColors()\r\n  const currentDb = useActiveDatabase()\r\n  console.log('currentDb')\r\n  console.log(currentDb)\r\n  console.log(colors)\r\n  return (\r\n    <>\r\n      <DBControlBar />\r\n      <MDBCard style={{backgroundColor: colors.lightBlue}}>\r\n        <MDBCardBody style={{ overflowY: 'auto' }}>\r\n          {currentDb && <DBCollectionList />}\r\n          {!currentDb && <DBDatabaseList />}\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DBContent;","import { MDBSpinner, MDBCard, MDBCardBody, MDBCardHeader, MDBIcon, MDBNav, MDBNavItem, MDBNavLink } from \"mdbreact\"\r\nimport { useActiveDatabase, useDBDashboard, useDBDashboardLoading } from \"contexts/DBDashboardContext\"\r\nimport Spinner from 'components/Spinner'\r\n\r\nconst DBSidebar = () => {\r\n  const activeDatabase = useActiveDatabase()\r\n  const databases = useDBDashboard()\r\n  const isLoading = useDBDashboardLoading()\r\n\r\n  return (\r\n    <>\r\n      <MDBCard style={{backgroundColor: '#343a40'}}>\r\n        <MDBCardHeader>DATABASES</MDBCardHeader>\r\n        <MDBCardBody style={{ overflowY: 'auto'}}>\r\n          <MDBNav>\r\n            <MDBNavItem>\r\n              {isLoading && <Spinner color=\"info\" />}\r\n              {databases && databases.map(name => {\r\n                return (\r\n                  <MDBNavLink key={name} disabled={name === activeDatabase} to={'#'+name} style={(name===activeDatabase)?{color: 'lightgray'}:{color: 'white'}}>\r\n                    <MDBIcon icon=\"database\" />{\" \"}{name}\r\n                  </MDBNavLink>\r\n                )\r\n              })}\r\n            </MDBNavItem>\r\n          </MDBNav>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DBSidebar","import DBContent from \"./Content\"\r\nimport DBSidebar from \"./Sidebar\"\r\nimport { useBackupStatus, useExportDatabase } from 'contexts/DBDashboardContext'\r\nimport { useThemeColors } from 'contexts/ThemeContext'\r\nimport Spinner from 'components/Spinner'\r\nimport { MDBBtn } from 'mdbreact'\r\n\r\nconst { MDBContainer, MDBRow, MDBCol } = require(\"mdbreact\")\r\n\r\n\r\nconst DBDashboard = () => {\r\n  const isBackupRunning = useBackupStatus()\r\n  const [, stopBackup] = useExportDatabase()\r\n  console.log('isBackupRunning')\r\n  console.log(isBackupRunning)\r\n\r\n  const colors = useThemeColors()\r\n\r\n  return (\r\n    <>\r\n      <MDBContainer fluid={true}>\r\n        <MDBRow>\r\n          <MDBCol><div className=\"hunter-data-table-title\">DB Management</div></MDBCol>\r\n        </MDBRow>\r\n        <MDBRow>\r\n          <MDBCol size=\"3\"><DBSidebar /></MDBCol>\r\n          <MDBCol><DBContent /></MDBCol>\r\n        </MDBRow>\r\n      </MDBContainer>\r\n\r\n      {isBackupRunning &&\r\n        (<div className=\"d-flex position-fixed align-items-center justify-content-center\" style={{\r\n            left: 0,\r\n            right: 0,\r\n            top: 0,\r\n            bottom: 0,\r\n            background: 'rgba(0,0,0,0.9)',\r\n            zIndex: 9999,\r\n          }}>\r\n            <div class=\"d-flex flex-column align-items-center justify-content-center px-5 py-3 pt-5 rounded rounded-5\" style={{background: colors.white}}>\r\n              <div className=\"mb-5\"><Spinner>Loading</Spinner><span class=\"ml-2\" style={{color: colors.darkBlue}}>Processing...</span></div>\r\n              <MDBBtn color=\"red\" onClick={(e) => {e.preventDefault(); stopBackup(); }}>Stop</MDBBtn>\r\n            </div>\r\n        </div>)\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DBDashboard","import React, { useState, useEffect } from 'react'\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\r\nimport { routes } from \"routes.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar\";\r\nimport DBDashboard from \"components/DBManagement/Dashboard\";\r\nimport {\r\n  Button\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DBDashboardProvider } from 'contexts/DBDashboardContext'\r\n\r\nconst DashboardWrapper = () => {\r\n  const history = useHistory();\r\n  const [isShowSidebar, setShowSidebar] = React.useState(false);\r\n  const [selectedInstance, setSelectedInstance] = React.useState('admin_tab');\r\n  const [user] = useState(JSON.parse(localStorage.getItem('user-info')));\r\n\r\n\r\n  const handleSidebarChange = () => {\r\n    setShowSidebar(!isShowSidebar);\r\n  };\r\n\r\n  const handleInstanceChange = (instance) => {\r\n    setSelectedInstance(instance)\r\n  }\r\n\r\n  useEffect (() => {\r\n    console.log('user.is_admin???', user.is_admin)\r\n    if (!user.is_admin) {\r\n      history.pushState('/')\r\n    }\r\n  }, [user, history])\r\n\r\n  return (\r\n    <DBDashboardProvider>\r\n      <React.Fragment>\r\n        <AdminNavbar nav=\"true\"/>\r\n        <div className=\"dashboard-wrapper\">\r\n            {!isShowSidebar && (\r\n              <Button\r\n                className ={\"show-sidebar-toggle-area show-sidebar-icon\"}\r\n                onClick={handleSidebarChange}\r\n              >\r\n                <i className=\"tim-icons icon-align-left-2\"/>\r\n              </Button>\r\n            )}\r\n            {isShowSidebar && (\r\n              <Sidebar\r\n                isAdminPage={false}\r\n                routes={routes}\r\n                subInstance={'systemfilemanager'}\r\n                handleSidebarChange={handleSidebarChange}\r\n                selectedInstance={selectedInstance}\r\n                handleInstanceChange={handleInstanceChange}\r\n              />\r\n            )}\r\n            <div className=\"col-sm-12 hunter-data-table-container\">\r\n              <DBDashboard></DBDashboard>\r\n            </div>\r\n        </div>\r\n      </React.Fragment>\r\n    </DBDashboardProvider>\r\n  )\r\n}\r\n\r\nexport default DashboardWrapper","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport HomePage from \"layouts/User/HomePage\"\nimport Login from \"layouts/User/Login\"\nimport AdminLayout from \"layouts/Admin/Admin.js\";\nimport UserManage from \"layouts/Admin/UserManage.js\";\nimport LinkManage from \"layouts/Admin/LinkManage\";\nimport PriceData from \"layouts/User/PriceData\";\nimport TradeData from \"layouts/User/TradeData\";\nimport HybridView from \"layouts/User/HybridView\";\nimport FinancialDashboard from \"layouts/User/FinancialDashboard\";\n\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport \"assets/scss/black-dashboard-react.scss\";\nimport \"assets/demo/demo.css\";\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport \"./App.css\";\nimport \"assets/css/nucleo-icons.css\";\n\nimport FileManager from \"components/SystemFileManager/FileManager\";\nimport ThemeContextWrapper from \"./components/ThemeWrapper/ThemeWrapper\";\nimport BackgroundColorWrapper from \"./components/BackgroundColorWrapper/BackgroundColorWrapper\";\nimport ProvideAuth from 'contexts/authContext'\nimport PrivateRoute from 'layouts/Auth/PrivateRoute'\nimport SignUp from 'layouts/User/SignUp'\nimport Verify from 'layouts/User/Verify'\nimport Floats from \"layouts/User/Floats\";\nimport ForgotPassword from 'layouts/User/ForgotPassword'\nimport PasswordResetConfirm from 'layouts/User/PasswordResetConfirm'\nimport MarketWatch from 'layouts/User/MarketWatch'\nimport Scanner from 'layouts/User/Scanner'\nimport Optimization from 'layouts/User/Optimization'\nimport DBManagementDashboardWrapper from './components/DBManagement/DashboardWrapper'\nimport { DatatableProvider } from \"contexts/DatatableContext\";\n\nReactDOM.render(\n  <ThemeContextWrapper>\n    <BackgroundColorWrapper>\n      <ProvideAuth>\n        <BrowserRouter>\n          <Switch>\n            <PrivateRoute path=\"/admin/usermanage\">\n              <UserManage />\n            </PrivateRoute>\n            <PrivateRoute path=\"/admin/linkmanage\">\n              <LinkManage />\n            </PrivateRoute>\n            <PrivateRoute path=\"/admin\">\n              <UserManage />\n            </PrivateRoute>\n            <Route path=\"/login\" render={(props) => <Login {...props} />} />\n            <Route path=\"/signup\" render={(props) => <SignUp {...props} />} />\n            <Route path=\"/verify\" render={(props) => <Verify {...props} />} />\n            <Route path=\"/forgot_password\" render={(props) => <ForgotPassword {...props} />} />\n            <Route path=\"/password-reset-confirm/:uuid/:token\" render={(props) => <PasswordResetConfirm {...props} />} />\n            <PrivateRoute path=\"/botmanagement\">\n              <FileManager/>\n            </PrivateRoute>\n            <PrivateRoute path=\"/floats\">\n              <DatatableProvider>\n                <Floats />\n              </DatatableProvider>\n            </PrivateRoute>\n            <PrivateRoute path=\"/market_watch\">\n              <MarketWatch />\n            </PrivateRoute>\n            <PrivateRoute path=\"/optimization\">\n              <Optimization />\n            </PrivateRoute>\n            <PrivateRoute path=\"/pricedatatable\">\n              <PriceData />\n            </PrivateRoute>\n            <PrivateRoute path=\"/tradedatatable\">\n              <DatatableProvider>\n                <TradeData />\n              </DatatableProvider>\n            </PrivateRoute>\n            <PrivateRoute path=\"/hybrid_view\">\n              <HybridView />\n            </PrivateRoute>\n            <PrivateRoute path=\"/financial_data\">\n              <DatatableProvider>\n                <FinancialDashboard />\n              </DatatableProvider>\n            </PrivateRoute>\n            <PrivateRoute path=\"/scanner\">\n              <DatatableProvider>\n                <Scanner />\n              </DatatableProvider>\n            </PrivateRoute>\n            <PrivateRoute path=\"/db_management\">\n              <DBManagementDashboardWrapper />\n            </PrivateRoute>\n            <PrivateRoute path=\"/\">\n              <HomePage />\n            </PrivateRoute>\n          </Switch>\n        </BrowserRouter>\n      </ProvideAuth>\n    </BackgroundColorWrapper>\n  </ThemeContextWrapper>,\n  document.getElementById(\"root\")\n);\n","export default __webpack_public_path__ + \"static/media/anime3.4438e506.png\";"],"sourceRoot":""}