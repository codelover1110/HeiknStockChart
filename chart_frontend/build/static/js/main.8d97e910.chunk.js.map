{"version":3,"sources":["http-common.js","components/Interactiveutils.js","components/Chart.js","components/1D2MStockChart.js","components/4D12MStockChart.js","components/30D1HStockChart.js","components/90D4HStockChart.js","components/90D12HStockChart.js","components/1Y1DStockChart.js","components/TimeChart.js","components/ItemComponent.js","App.js","reportWebVitals.js","actions/types.js","reducers/tutorials.js","reducers/index.js","store.js","index.js"],"names":["axios","create","baseURL","headers","saveInteractiveNodes","type","chartId","node","isNotDefined","interactiveNodes","getInteractiveNodes","this","macdAppearance","stroke","macd","signal","fill","divergence","CandleStickChartWithEquidistantChannel","props","onKeyPress","bind","onDrawComplete","saveInteractiveNode","saveCanvasNode","handleSelection","state","enableInteractiveObject","channels_1","channels_3","canvasNode","document","addEventListener","removeEventListener","interactives","toObject","each","objects","setState","e","keyCode","which","console","log","filter","selected","cancelDrag","terminate","ema26","ema","id","options","windowSize","merge","d","c","accessor","ema12","macdCalculator","fast","slow","initialData","data","width","ratio","calculatedData","discontinuousTimeScaleProvider","inputDateAccessor","date","xScaleProvider","xScale","xAccessor","displayXAccessor","xExtents","last","Math","max","length","ref","height","margin","left","right","top","bottom","seriesName","yExtents","high","low","padding","axisAt","orient","showTicks","outerTickSize","ticks","at","displayFormat","format","yAccessor","itemType","edgeAt","close","open","origin","onClick","enabled","onStart","onComplete","channels","volume","w","h","tickFormat","timeFormat","appearance","drawingObjectMap","EquidistantChannel","onSelect","React","Component","defaultProps","fitWidth","ChartComponent","useState","chartData","setChartData","selectedOptionTable","setSelectedOptionTable","getDataFlag","setGetDataFlag","optionsTable","setOptionsTable","useEffect","get_tables","get_data","fetch","then","response","json","temp_data","tables","map","x","push","value","label","table_name","requestOptions","method","body","JSON","stringify","converDate","Date","className","onChange","Chart","TutorialsList","history","useHistory","href","to","pathname","location","App","exact","path","component","TimeChart","ItemComponent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","CREATE_TUTORIAL","RETRIEVE_TUTORIALS","UPDATE_TUTORIAL","DELETE_TUTORIAL","DELETE_ALL_TUTORIALS","initialState","tutorialReducer","tutorials","action","payload","tutorial","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8d97e910.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:8080/api\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});\n","import { isNotDefined, isDefined } from \"react-stockcharts/lib/utils\";\r\n\r\nexport function saveInteractiveNode(chartId) {\r\n\treturn node => {\r\n\t\tthis[`node_${chartId}`] = node;\r\n\t};\r\n}\r\n\r\nexport function handleSelection(type, chartId) {\r\n\treturn selectionArray => {\r\n\t\tconst key = `${type}_${chartId}`;\r\n\t\tconst interactive = this.state[key].map((each, idx) => {\r\n\t\t\treturn {\r\n\t\t\t\t...each,\r\n\t\t\t\tselected: selectionArray[idx]\r\n\t\t\t};\r\n\t\t});\r\n\t\tthis.setState({\r\n\t\t\t[key]: interactive\r\n\t\t});\r\n\t};\r\n}\r\n\r\nexport function saveInteractiveNodes(type, chartId) {\r\n\treturn node => {\r\n\t\tif (isNotDefined(this.interactiveNodes)) {\r\n\t\t\tthis.interactiveNodes = {};\r\n\t\t}\r\n\t\tconst key = `${type}_${chartId}`;\r\n\t\t// // if (isDefined(node) || isDefined(this.interactiveNodes[key])) {\r\n\t\t// // \t// console.error(node, key)\r\n\t\t// // \t// console.log(this.interactiveNodes)\r\n\t\t// // \t// eslint-disable-next-line fp/no-mutation\r\n\t\t// // \tthis.interactiveNodes = {\r\n\t\t// // \t\t...this.interactiveNodes,\r\n\t\t// // \t\t[key]: { type, chartId, node },\r\n\t\t// // \t};\r\n\t\t// }\r\n\t};\r\n}\r\n\r\nexport function getInteractiveNodes() {\r\n\treturn this.interactiveNodes;\r\n}","\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { format } from \"d3-format\";\r\nimport { timeFormat } from \"d3-time-format\";\r\n\r\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\r\nimport {\r\n\tBarSeries,\r\n\tCandlestickSeries,\r\n\tLineSeries,\r\n\tMACDSeries,\r\n} from \"react-stockcharts/lib/series\";\r\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\r\nimport {\r\n\tCrossHairCursor,\r\n\tEdgeIndicator,\r\n\tCurrentCoordinate,\r\n\tMouseCoordinateX,\r\n\tMouseCoordinateY,\r\n} from \"react-stockcharts/lib/coordinates\";\r\n\r\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\r\nimport {\r\n\tOHLCTooltip,\r\n\tMovingAverageTooltip,\r\n\tMACDTooltip,\r\n} from \"react-stockcharts/lib/tooltip\";\r\nimport { ema, macd } from \"react-stockcharts/lib/indicator\";\r\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\r\nimport { EquidistantChannel, DrawingObjectSelector } from \"react-stockcharts/lib/interactive\";\r\nimport { last, toObject } from \"react-stockcharts/lib/utils\";\r\nimport {\r\n\tsaveInteractiveNodes,\r\n\tgetInteractiveNodes,\r\n} from \"./Interactiveutils\";\r\n\r\nconst macdAppearance = {\r\n\tstroke: {\r\n\t\tmacd: \"#FF0000\",\r\n\t\tsignal: \"#00F300\",\r\n\t},\r\n\tfill: {\r\n\t\tdivergence: \"#4682B4\"\r\n\t},\r\n};\r\n\r\nclass CandleStickChartWithEquidistantChannel extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.onKeyPress = this.onKeyPress.bind(this);\r\n\t\tthis.onDrawComplete = this.onDrawComplete.bind(this);\r\n\t\tthis.saveInteractiveNode = this.saveInteractiveNode.bind(this);\r\n\t\tthis.saveCanvasNode = this.saveCanvasNode.bind(this);\r\n\t\tthis.handleSelection = this.handleSelection.bind(this);\r\n\r\n\t\tthis.saveInteractiveNodes = saveInteractiveNodes.bind(this);\r\n\t\tthis.getInteractiveNodes = getInteractiveNodes.bind(this);\r\n\r\n\t\tthis.state = {\r\n\t\t\tenableInteractiveObject: true,\r\n\t\t\tchannels_1: [],\r\n\t\t\tchannels_3: [],\r\n\t\t};\r\n\t}\r\n\tsaveInteractiveNode(node) {\r\n\t\tthis.node = node;\r\n\t}\r\n\tsaveCanvasNode(node) {\r\n\t\tthis.canvasNode = node;\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tdocument.addEventListener(\"keyup\", this.onKeyPress);\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tdocument.removeEventListener(\"keyup\", this.onKeyPress);\r\n\t}\r\n\thandleSelection(interactives) {\r\n\t\tconst state = toObject(interactives, each => {\r\n\t\t\treturn [\r\n\t\t\t\t`channels_${each.chartId}`,\r\n\t\t\t\teach.objects,\r\n\t\t\t];\r\n\t\t});\r\n\t\tthis.setState(state);\r\n\t}\r\n\tonDrawComplete(channels_1) {\r\n\t\t// this gets called on\r\n\t\t// 1. draw complete of drawing object\r\n\t\t// 2. drag complete of drawing object\r\n\t\tthis.setState({\r\n\t\t\tenableInteractiveObject: false,\r\n\t\t\tchannels_1\r\n\t\t});\r\n\t}\r\n\tonKeyPress(e) {\r\n\t\tconst keyCode = e.which;\r\n\t\tconsole.log(keyCode);\r\n\t\tswitch (keyCode) {\r\n\t\tcase 46: { // DEL\r\n\r\n\t\t\tconst channels_1 = this.state.channels_1\r\n\t\t\t\t.filter(each => !each.selected);\r\n\t\t\tconst channels_3 = this.state.channels_3\r\n\t\t\t\t.filter(each => !each.selected);\r\n\r\n\t\t\tthis.canvasNode.cancelDrag();\r\n\t\t\tthis.setState({\r\n\t\t\t\tchannels_1,\r\n\t\t\t\tchannels_3,\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 27: { // ESC\r\n\t\t\tthis.node.terminate();\r\n\t\t\tthis.canvasNode.cancelDrag();\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tenableInteractiveObject: false\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 68:   // D - Draw drawing object\r\n\t\tcase 69: { // E - Enable drawing object\r\n\t\t\tthis.setState({\r\n\t\t\t\tenableInteractiveObject: true\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tconst ema26 = ema()\r\n\t\t\t.id(0)\r\n\t\t\t.options({ windowSize: 26 })\r\n\t\t\t.merge((d, c) => { d.ema26 = c; })\r\n\t\t\t.accessor(d => d.ema26);\r\n\r\n\t\tconst ema12 = ema()\r\n\t\t\t.id(1)\r\n\t\t\t.options({ windowSize: 12 })\r\n\t\t\t.merge((d, c) => {d.ema12 = c;})\r\n\t\t\t.accessor(d => d.ema12);\r\n\r\n\t\tconst macdCalculator = macd()\r\n\t\t\t.options({\r\n\t\t\t\tfast: 12,\r\n\t\t\t\tslow: 26,\r\n\t\t\t\tsignal: 9,\r\n\t\t\t})\r\n\t\t\t.merge((d, c) => {d.macd = c;})\r\n\t\t\t.accessor(d => d.macd);\r\n\r\n\t\tconst { type, data: initialData, width, ratio } = this.props;\r\n\t\tconst { channels_1, channels_3 } = this.state;\r\n\r\n\t\tconst calculatedData = macdCalculator(ema12(ema26(initialData)));\r\n\t\tconst xScaleProvider = discontinuousTimeScaleProvider\r\n\t\t\t.inputDateAccessor(d => d.date);\r\n\t\tconst {\r\n\t\t\tdata,\r\n\t\t\txScale,\r\n\t\t\txAccessor,\r\n\t\t\tdisplayXAccessor,\r\n\t\t} = xScaleProvider(calculatedData);\r\n\r\n\t\tconst start = xAccessor(last(data));\r\n\t\tconst end = xAccessor(data[Math.max(0, data.length - 150)]);\r\n\t\tconst xExtents = [start, end];\r\n\r\n\t\treturn (\r\n\t\t\t<ChartCanvas ref={this.saveCanvasNode}\r\n\t\t\t\theight={600}\r\n\t\t\t\twidth={width}\r\n\t\t\t\tratio={ratio}\r\n\t\t\t\tmargin={{ left: 70, right: 70, top: 20, bottom: 30 }}\r\n\t\t\t\ttype={type}\r\n\t\t\t\tseriesName=\"MSFT\"\r\n\t\t\t\tdata={data}\r\n\t\t\t\txScale={xScale}\r\n\t\t\t\txAccessor={xAccessor}\r\n\t\t\t\tdisplayXAccessor={displayXAccessor}\r\n\t\t\t\txExtents={xExtents}\r\n\t\t\t>\r\n\t\t\t\t<Chart id={1} height={400}\r\n\t\t\t\t\tyExtents={[d => [d.high, d.low], ema26.accessor(), ema12.accessor()]}\r\n\t\t\t\t\tpadding={{ top: 10, bottom: 20 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" showTicks={false} outerTickSize={0} />\r\n\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\r\n\t\t\t\t\t<MouseCoordinateY\r\n\t\t\t\t\t\tat=\"right\"\r\n\t\t\t\t\t\torient=\"right\"\r\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\r\n\r\n\t\t\t\t\t<CandlestickSeries />\r\n\t\t\t\t\t<LineSeries yAccessor={ema26.accessor()} stroke={ema26.stroke()}/>\r\n\t\t\t\t\t<LineSeries yAccessor={ema12.accessor()} stroke={ema12.stroke()}/>\r\n\r\n\t\t\t\t\t<CurrentCoordinate yAccessor={ema26.accessor()} fill={ema26.stroke()} />\r\n\t\t\t\t\t<CurrentCoordinate yAccessor={ema12.accessor()} fill={ema12.stroke()} />\r\n\r\n\t\t\t\t\t<EdgeIndicator itemType=\"last\" orient=\"right\" edgeAt=\"right\"\r\n\t\t\t\t\t\tyAccessor={d => d.close} fill={d => d.close > d.open ? \"#6BA583\" : \"#FF0000\"}/>\r\n\r\n\t\t\t\t\t<OHLCTooltip origin={[-40, 0]}/>\r\n\r\n\t\t\t\t\t<MovingAverageTooltip\r\n\t\t\t\t\t\tonClick={e => console.log(e)}\r\n\t\t\t\t\t\torigin={[-38, 15]}\r\n\t\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tyAccessor: ema26.accessor(),\r\n\t\t\t\t\t\t\t\ttype: ema26.type(),\r\n\t\t\t\t\t\t\t\tstroke: ema26.stroke(),\r\n\t\t\t\t\t\t\t\twindowSize: ema26.options().windowSize,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tyAccessor: ema12.accessor(),\r\n\t\t\t\t\t\t\t\ttype: ema12.type(),\r\n\t\t\t\t\t\t\t\tstroke: ema12.stroke(),\r\n\t\t\t\t\t\t\t\twindowSize: ema12.options().windowSize,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<EquidistantChannel\r\n\t\t\t\t\t\tref={this.saveInteractiveNodes(\"EquidistantChannel\", 1)}\r\n\t\t\t\t\t\tenabled={this.state.enableInteractiveObject}\r\n\t\t\t\t\t\tonStart={() => console.log(\"START\")}\r\n\t\t\t\t\t\tonComplete={this.onDrawComplete}\r\n\t\t\t\t\t\tchannels={channels_1}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Chart>\r\n\t\t\t\t<Chart id={2} height={150}\r\n\t\t\t\t\tyExtents={[d => d.volume]}\r\n\t\t\t\t\torigin={(w, h) => [0, h - 300]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" ticks={5} tickFormat={format(\".2s\")}/>\r\n\r\n\t\t\t\t\t<MouseCoordinateY\r\n\t\t\t\t\t\tat=\"left\"\r\n\t\t\t\t\t\torient=\"left\"\r\n\t\t\t\t\t\tdisplayFormat={format(\".4s\")} />\r\n\r\n\t\t\t\t\t<BarSeries yAccessor={d => d.volume} fill={d => d.close > d.open ? \"#6BA583\" : \"#FF0000\"} />\r\n\t\t\t\t</Chart>\r\n\t\t\t\t<Chart id={3} height={150}\r\n\t\t\t\t\tyExtents={macdCalculator.accessor()}\r\n\t\t\t\t\torigin={(w, h) => [0, h - 150]} padding={{ top: 10, bottom: 10 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\r\n\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={2} />\r\n\r\n\t\t\t\t\t<MouseCoordinateX\r\n\t\t\t\t\t\tat=\"bottom\"\r\n\t\t\t\t\t\torient=\"bottom\"\r\n\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\r\n\t\t\t\t\t<MouseCoordinateY\r\n\t\t\t\t\t\tat=\"right\"\r\n\t\t\t\t\t\torient=\"right\"\r\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\r\n\r\n\t\t\t\t\t<MACDSeries yAccessor={d => d.macd}\r\n\t\t\t\t\t\t{...macdAppearance} />\r\n\t\t\t\t\t<MACDTooltip\r\n\t\t\t\t\t\torigin={[-38, 15]}\r\n\t\t\t\t\t\tyAccessor={d => d.macd}\r\n\t\t\t\t\t\toptions={macdCalculator.options()}\r\n\t\t\t\t\t\tappearance={macdAppearance}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Chart>\r\n\t\t\t\t<CrossHairCursor />\r\n\t\t\t\t<DrawingObjectSelector\r\n\t\t\t\t\tenabled={!this.state.enableInteractiveObject}\r\n\t\t\t\t\tgetInteractiveNodes={this.getInteractiveNodes}\r\n\t\t\t\t\tdrawingObjectMap={{\r\n\t\t\t\t\t\tEquidistantChannel: \"channels\"\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonSelect={this.handleSelection}\r\n\t\t\t\t/>\r\n\t\t\t</ChartCanvas>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nCandleStickChartWithEquidistantChannel.propTypes = {\r\n\tdata: PropTypes.array.isRequired,\r\n\twidth: PropTypes.number.isRequired,\r\n\tratio: PropTypes.number.isRequired,\r\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\r\n};\r\n\r\nCandleStickChartWithEquidistantChannel.defaultProps = {\r\n\ttype: \"svg\",\r\n};\r\n\r\nCandleStickChartWithEquidistantChannel = fitWidth(CandleStickChartWithEquidistantChannel);\r\n\r\nexport default CandleStickChartWithEquidistantChannel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { render } from 'react-dom';\r\nimport Chart from './Chart';\r\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\r\nimport Select from 'react-select'\r\nimport 'react-select/dist/react-select.css';\r\n\r\nconst ChartComponent = () => {\r\n\tconst [chartData, setChartData] = useState(null)\r\n\tconst [selectedOptionTable, setSelectedOptionTable] = useState('AAPL');\r\n\tconst [getDataFlag, setGetDataFlag] = useState(false)\r\n\tconst [optionsTable, setOptionsTable] = useState([])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!getDataFlag) {\r\n\t\t\tget_tables()\r\n\t\t\t// get_data('2_minute_AAL')\r\n\t\t\tget_data('2_minute_AAPL')\r\n\t\t\tsetGetDataFlag(true)\r\n\t\t}\r\n\r\n\t}, [chartData])\r\n\r\n\tconst get_tables = () => {\r\n\t\tfetch(\"https://675eb930ade5.ngrok.io/api/tables\")\r\n\t\t\t\t.then(response => response.json())\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tlet temp_data = []\r\n\t\t\t\t\tdata.tables.map((x) => {\r\n\t\t\t\t\t\ttemp_data.push({\r\n\t\t\t\t\t\t\tvalue: x,\r\n\t\t\t\t\t\t\tlabel: x\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\tsetOptionsTable(temp_data)\r\n\t\t\t\t})\r\n\t}\r\n\r\n\tconst handleChangeTable = (value) => {\r\n\t\tsetSelectedOptionTable(value)\r\n\t\tif (value) {\r\n\t\t\tlet table_name = '2_minute_' + value.value\r\n\t\t\tget_data(table_name)\r\n\t\t}\r\n\t}\r\n\r\n\tconst get_data = (table_name) => {\r\n\t\tconst requestOptions = {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t'db_name': '2m_stocks',\r\n\t\t\t\t'table_name': table_name\r\n\t\t\t})\r\n\t\t};\r\n\r\n\t\tfetch('https://675eb930ade5.ngrok.io/api/get_data', requestOptions)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tdata['chart_data']['columns'] = [\"date\", \"open\", \"high\", \"low\", \"close\", \"volume\", \"split\", \"dividend\", \"absoluteChange\", \"percentChange\"]\r\n\t\t\t\tlet temp_data = []\r\n\t\t\t\tdata['chart_data'].map((x) => {\r\n\t\t\t\t\tlet converDate = new Date(x.date)\r\n\t\t\t\t\tx.date = converDate\r\n\t\t\t\t})\r\n\t\t\t\tsetChartData(data['chart_data'])\r\n\t\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{\r\n\t\t\t\tchartData == null ? <div>Loading...</div> :\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"select-wrape\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tvalue={selectedOptionTable}\r\n\t\t\t\t\t\t\t\tonChange={handleChangeTable}\r\n\t\t\t\t\t\t\t\toptions={optionsTable}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<strong>1D 2m [NASDAQ]</strong>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<TypeChooser >\r\n\t\t\t\t\t\t\t{type => <Chart type={type} data={chartData} />}\r\n\t\t\t\t\t\t</TypeChooser>\r\n\t\t\t\t\t</>\r\n\r\n\t\t\t}\r\n\t\t</>\r\n\r\n\t)\r\n}\r\n\r\nexport default ChartComponent","import React, { useState, useEffect } from \"react\";\r\nimport { render } from 'react-dom';\r\nimport Chart from './Chart';\r\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\r\nimport Select from 'react-select'\r\nimport 'react-select/dist/react-select.css';\r\n\r\nconst ChartComponent = () => {\r\n\tconst [chartData, setChartData] = useState(null)\r\n\tconst [selectedOptionTable, setSelectedOptionTable] = useState('AAPL');\r\n\tconst [getDataFlag, setGetDataFlag] = useState(false)\r\n\tconst [optionsTable, setOptionsTable] = useState([])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!getDataFlag) {\r\n\t\t\tget_tables()\r\n\t\t\t// get_data('2_minute_AAL')\r\n\t\t\tget_data('12_minute_AAPL')\r\n\t\t\tsetGetDataFlag(true)\r\n\t\t}\r\n\r\n\t}, [chartData])\r\n\r\n\tconst get_tables = () => {\r\n\t\tfetch(\"https://675eb930ade5.ngrok.io/api/tables\")\r\n\t\t\t\t.then(response => response.json())\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tlet temp_data = []\r\n\t\t\t\t\tdata.tables.map((x) => {\r\n\t\t\t\t\t\ttemp_data.push({\r\n\t\t\t\t\t\t\tvalue: x,\r\n\t\t\t\t\t\t\tlabel: x\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\tsetOptionsTable(temp_data)\r\n\t\t\t\t})\r\n\t}\r\n\r\n\tconst handleChangeTable = (value) => {\r\n\t\tsetSelectedOptionTable(value)\r\n        if (value) {\r\n            let table_name = '12_minute_' + value.value\r\n            get_data(table_name)\r\n        }\r\n\r\n\t}\r\n\r\n\tconst get_data = (table_name) => {\r\n\t\tconst requestOptions = {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t'db_name': '12m_stocks',\r\n\t\t\t\t'table_name': table_name\r\n\t\t\t})\r\n\t\t};\r\n\r\n\t\tfetch('https://675eb930ade5.ngrok.io/api/get_data', requestOptions)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tdata['chart_data']['columns'] = [\"date\", \"open\", \"high\", \"low\", \"close\", \"volume\", \"split\", \"dividend\", \"absoluteChange\", \"percentChange\"]\r\n\t\t\t\tlet temp_data = []\r\n\t\t\t\tdata['chart_data'].map((x) => {\r\n\t\t\t\t\tlet converDate = new Date(x.date)\r\n\t\t\t\t\tx.date = converDate\r\n\t\t\t\t})\r\n\t\t\t\tsetChartData(data['chart_data'])\r\n\t\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{\r\n\t\t\t\tchartData == null ? <div>Loading...</div> :\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"select-wrape\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tvalue={selectedOptionTable}\r\n\t\t\t\t\t\t\t\tonChange={handleChangeTable}\r\n\t\t\t\t\t\t\t\toptions={optionsTable}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<strong>4D 12m [NASDAQ]</strong>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<TypeChooser >\r\n\t\t\t\t\t\t\t{type => <Chart type={type} data={chartData} />}\r\n\t\t\t\t\t\t</TypeChooser>\r\n\t\t\t\t\t</>\r\n\r\n\t\t\t}\r\n\t\t</>\r\n\r\n\t)\r\n}\r\n\r\nexport default ChartComponent","import React, { useState, useEffect } from \"react\";\r\nimport { render } from 'react-dom';\r\nimport Chart from './Chart';\r\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\r\nimport Select from 'react-select'\r\nimport 'react-select/dist/react-select.css';\r\n\r\nconst ChartComponent = () => {\r\n\tconst [chartData, setChartData] = useState(null)\r\n\tconst [selectedOptionTable, setSelectedOptionTable] = useState('AAPL');\r\n\tconst [getDataFlag, setGetDataFlag] = useState(false)\r\n\tconst [optionsTable, setOptionsTable] = useState([])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!getDataFlag) {\r\n\t\t\tget_tables()\r\n\t\t\t// get_data('2_minute_AAL')\r\n\t\t\tget_data('1_hour_AAPL')\r\n\t\t\tsetGetDataFlag(true)\r\n\t\t}\r\n\r\n\t}, [chartData])\r\n\r\n\tconst get_tables = () => {\r\n\t\tfetch(\"https://675eb930ade5.ngrok.io/api/tables\")\r\n\t\t\t\t.then(response => response.json())\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tlet temp_data = []\r\n\t\t\t\t\tdata.tables.map((x) => {\r\n\t\t\t\t\t\ttemp_data.push({\r\n\t\t\t\t\t\t\tvalue: x,\r\n\t\t\t\t\t\t\tlabel: x\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\tsetOptionsTable(temp_data)\r\n\t\t\t\t})\r\n\t}\r\n\r\n\tconst handleChangeTable = (value) => {\r\n\t\tsetSelectedOptionTable(value)\r\n        if (value) {\r\n            let table_name = '1_hour_' + value.value\r\n            get_data(table_name)\r\n        }\r\n\r\n\t}\r\n\r\n\tconst get_data = (table_name) => {\r\n\t\tconst requestOptions = {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t'db_name': '1h_stocks',\r\n\t\t\t\t'table_name': table_name\r\n\t\t\t})\r\n\t\t};\r\n\r\n\t\tfetch('https://675eb930ade5.ngrok.io/api/get_data', requestOptions)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tdata['chart_data']['columns'] = [\"date\", \"open\", \"high\", \"low\", \"close\", \"volume\", \"split\", \"dividend\", \"absoluteChange\", \"percentChange\"]\r\n\t\t\t\tlet temp_data = []\r\n\t\t\t\tdata['chart_data'].map((x) => {\r\n\t\t\t\t\tlet converDate = new Date(x.date)\r\n\t\t\t\t\tx.date = converDate\r\n\t\t\t\t})\r\n\t\t\t\tsetChartData(data['chart_data'])\r\n\t\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{\r\n\t\t\t\tchartData == null ? <div>Loading...</div> :\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"select-wrape\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tvalue={selectedOptionTable}\r\n\t\t\t\t\t\t\t\tonChange={handleChangeTable}\r\n\t\t\t\t\t\t\t\toptions={optionsTable}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<strong>30D 1h [NASDAQ]</strong>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<TypeChooser >\r\n\t\t\t\t\t\t\t{type => <Chart type={type} data={chartData} />}\r\n\t\t\t\t\t\t</TypeChooser>\r\n\t\t\t\t\t</>\r\n\r\n\t\t\t}\r\n\t\t</>\r\n\r\n\t)\r\n}\r\n\r\nexport default ChartComponent","import React, { useState, useEffect } from \"react\";\r\nimport { render } from 'react-dom';\r\nimport Chart from './Chart';\r\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\r\nimport Select from 'react-select'\r\nimport 'react-select/dist/react-select.css';\r\n\r\nconst ChartComponent = () => {\r\n\tconst [chartData, setChartData] = useState(null)\r\n\tconst [selectedOptionTable, setSelectedOptionTable] = useState('AAPL');\r\n\tconst [getDataFlag, setGetDataFlag] = useState(false)\r\n\tconst [optionsTable, setOptionsTable] = useState([])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!getDataFlag) {\r\n\t\t\tget_tables()\r\n\t\t\t// get_data('2_minute_AAL')\r\n\t\t\tget_data('4_hour_AAPL')\r\n\t\t\tsetGetDataFlag(true)\r\n\t\t}\r\n\r\n\t}, [chartData])\r\n\r\n\tconst get_tables = () => {\r\n\t\tfetch(\"https://675eb930ade5.ngrok.io/api/tables\")\r\n\t\t\t\t.then(response => response.json())\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tlet temp_data = []\r\n\t\t\t\t\tdata.tables.map((x) => {\r\n\t\t\t\t\t\ttemp_data.push({\r\n\t\t\t\t\t\t\tvalue: x,\r\n\t\t\t\t\t\t\tlabel: x\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\tsetOptionsTable(temp_data)\r\n\t\t\t\t})\r\n\t}\r\n\r\n\tconst handleChangeTable = (value) => {\r\n        setSelectedOptionTable(value)\r\n        if (value) {\r\n            let table_name = '4_hour_' + value.value\r\n            get_data(table_name)\r\n        }\r\n\t\r\n\r\n\t}\r\n\r\n\tconst get_data = (table_name) => {\r\n\t\tconst requestOptions = {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t'db_name': '4h_stocks',\r\n\t\t\t\t'table_name': table_name\r\n\t\t\t})\r\n\t\t};\r\n\r\n\t\tfetch('https://675eb930ade5.ngrok.io/api/get_data', requestOptions)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tdata['chart_data']['columns'] = [\"date\", \"open\", \"high\", \"low\", \"close\", \"volume\", \"split\", \"dividend\", \"absoluteChange\", \"percentChange\"]\r\n\t\t\t\tlet temp_data = []\r\n\t\t\t\tdata['chart_data'].map((x) => {\r\n\t\t\t\t\tlet converDate = new Date(x.date)\r\n\t\t\t\t\tx.date = converDate\r\n\t\t\t\t})\r\n\t\t\t\tsetChartData(data['chart_data'])\r\n\t\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{\r\n\t\t\t\tchartData == null ? <div>Loading...</div> :\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"select-wrape\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tvalue={selectedOptionTable}\r\n\t\t\t\t\t\t\t\tonChange={handleChangeTable}\r\n\t\t\t\t\t\t\t\toptions={optionsTable}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<strong>90D 4h [NASDAQ]</strong>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<TypeChooser >\r\n\t\t\t\t\t\t\t{type => <Chart type={type} data={chartData} />}\r\n\t\t\t\t\t\t</TypeChooser>\r\n\t\t\t\t\t</>\r\n\r\n\t\t\t}\r\n\t\t</>\r\n\r\n\t)\r\n}\r\n\r\nexport default ChartComponent","import React, { useState, useEffect } from \"react\";\r\nimport { render } from 'react-dom';\r\nimport Chart from './Chart';\r\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\r\nimport Select from 'react-select'\r\nimport 'react-select/dist/react-select.css';\r\n\r\nconst ChartComponent = () => {\r\n\tconst [chartData, setChartData] = useState(null)\r\n\tconst [selectedOptionTable, setSelectedOptionTable] = useState('AAPL');\r\n\tconst [getDataFlag, setGetDataFlag] = useState(false)\r\n\tconst [optionsTable, setOptionsTable] = useState([])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!getDataFlag) {\r\n\t\t\tget_tables()\r\n\t\t\t// get_data('2_minute_AAL')\r\n\t\t\tget_data('12_hour_AAPL')\r\n\t\t\tsetGetDataFlag(true)\r\n\t\t}\r\n\r\n\t}, [chartData])\r\n\r\n\tconst get_tables = () => {\r\n\t\tfetch(\"https://675eb930ade5.ngrok.io/api/tables\")\r\n\t\t\t\t.then(response => response.json())\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tlet temp_data = []\r\n\t\t\t\t\tdata.tables.map((x) => {\r\n\t\t\t\t\t\ttemp_data.push({\r\n\t\t\t\t\t\t\tvalue: x,\r\n\t\t\t\t\t\t\tlabel: x\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\tsetOptionsTable(temp_data)\r\n\t\t\t\t})\r\n\t}\r\n\r\n\tconst handleChangeTable = (value) => {\r\n        setSelectedOptionTable(value)\r\n        if (value) {\r\n            let table_name = '12_hour_' + value.value\r\n            get_data(table_name)\r\n        }\r\n\t}\r\n\r\n\tconst get_data = (table_name) => {\r\n\t\tconst requestOptions = {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t'db_name': '12h_stocks',\r\n\t\t\t\t'table_name': table_name\r\n\t\t\t})\r\n\t\t};\r\n\r\n\t\tfetch('https://675eb930ade5.ngrok.io/api/get_data', requestOptions)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tdata['chart_data']['columns'] = [\"date\", \"open\", \"high\", \"low\", \"close\", \"volume\", \"split\", \"dividend\", \"absoluteChange\", \"percentChange\"]\r\n\t\t\t\tlet temp_data = []\r\n\t\t\t\tdata['chart_data'].map((x) => {\r\n\t\t\t\t\tlet converDate = new Date(x.date)\r\n\t\t\t\t\tx.date = converDate\r\n\t\t\t\t})\r\n\t\t\t\tsetChartData(data['chart_data'])\r\n\t\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{\r\n\t\t\t\tchartData == null ? <div>Loading...</div> :\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"select-wrape\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tvalue={selectedOptionTable}\r\n\t\t\t\t\t\t\t\tonChange={handleChangeTable}\r\n\t\t\t\t\t\t\t\toptions={optionsTable}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<strong>90D 12h [NASDAQ]</strong>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<TypeChooser >\r\n\t\t\t\t\t\t\t{type => <Chart type={type} data={chartData} />}\r\n\t\t\t\t\t\t</TypeChooser>\r\n\t\t\t\t\t</>\r\n\r\n\t\t\t}\r\n\t\t</>\r\n\r\n\t)\r\n}\r\n\r\nexport default ChartComponent","import React, { useState, useEffect } from \"react\";\r\nimport { render } from 'react-dom';\r\nimport Chart from './Chart';\r\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\r\nimport Select from 'react-select'\r\nimport 'react-select/dist/react-select.css';\r\n\r\nconst ChartComponent = () => {\r\n\tconst [chartData, setChartData] = useState(null)\r\n\tconst [selectedOptionTable, setSelectedOptionTable] = useState('AAPL');\r\n\tconst [getDataFlag, setGetDataFlag] = useState(false)\r\n\tconst [optionsTable, setOptionsTable] = useState([])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!getDataFlag) {\r\n\t\t\tget_tables()\r\n\t\t\t// get_data('2_minute_AAL')\r\n\t\t\tget_data('1_day_AAPL')\r\n\t\t\tsetGetDataFlag(true)\r\n\t\t}\r\n\r\n\t}, [chartData])\r\n\r\n\tconst get_tables = () => {\r\n\t\tfetch(\"https://675eb930ade5.ngrok.io/api/tables\")\r\n\t\t\t\t.then(response => response.json())\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tlet temp_data = []\r\n\t\t\t\t\tdata.tables.map((x) => {\r\n\t\t\t\t\t\ttemp_data.push({\r\n\t\t\t\t\t\t\tvalue: x,\r\n\t\t\t\t\t\t\tlabel: x\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\tsetOptionsTable(temp_data)\r\n\t\t\t\t})\r\n\t}\r\n\r\n\tconst handleChangeTable = (value) => {\r\n        setSelectedOptionTable(value)\r\n        if (value) {\r\n            let table_name = '1_day_' + value.value\r\n            get_data(table_name)\r\n        }\r\n\t\r\n\r\n\t}\r\n\r\n\tconst get_data = (table_name) => {\r\n\t\tconst requestOptions = {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t'db_name': '1d_stocks',\r\n\t\t\t\t'table_name': table_name\r\n\t\t\t})\r\n\t\t};\r\n\r\n\t\tfetch('https://675eb930ade5.ngrok.io/api/get_data', requestOptions)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tdata['chart_data']['columns'] = [\"date\", \"open\", \"high\", \"low\", \"close\", \"volume\", \"split\", \"dividend\", \"absoluteChange\", \"percentChange\"]\r\n\t\t\t\tlet temp_data = []\r\n\t\t\t\tdata['chart_data'].map((x) => {\r\n\t\t\t\t\tlet converDate = new Date(x.date)\r\n\t\t\t\t\tx.date = converDate\r\n\t\t\t\t})\r\n\t\t\t\tsetChartData(data['chart_data'])\r\n\t\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{\r\n\t\t\t\tchartData == null ? <div>Loading...</div> :\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"select-wrape\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tvalue={selectedOptionTable}\r\n\t\t\t\t\t\t\t\tonChange={handleChangeTable}\r\n\t\t\t\t\t\t\t\toptions={optionsTable}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<strong>1Y 1D [NASDAQ]</strong>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<TypeChooser >\r\n\t\t\t\t\t\t\t{type => <Chart type={type} data={chartData} />}\r\n\t\t\t\t\t\t</TypeChooser>\r\n\t\t\t\t\t</>\r\n\r\n\t\t\t}\r\n\t\t</>\r\n\r\n\t)\r\n}\r\n\r\nexport default ChartComponent","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport http from \"../http-common\";\nimport axios from \"axios\";\nimport Select from 'react-select'\nimport 'react-select/dist/react-select.css';\n\nimport _ from \"underscore\";\nimport moment from \"moment\";\n\nimport { TimeSeries, Index } from \"pondjs\";\nimport Datetime from 'react-datetime';\nimport \"react-datetime/css/react-datetime.css\";\n\nimport { tsvParse, csvParse } from \"d3-dsv\";\nimport { timeParse } from \"d3-time-format\";\nimport StockChart1D2M from \"./1D2MStockChart\";\nimport StockChart4D12M from \"./4D12MStockChart\";\nimport StockChart30D1H from \"./30D1HStockChart\";\nimport StockChart90D4H from \"./90D4HStockChart\";\nimport StockChart90D12H from \"./90D12HStockChart\";\nimport StockChart1Y1D from \"./1Y1DStockChart\";\n\nimport { useHistory } from \"react-router-dom\";\n\nconst TutorialsList = () => {\n  const history = useHistory();\n  const [selectedOptionTable, setSelectedOptionTable] = useState(null)\n  const optionsTable = [\n    { value: '1D_2m', label: '1D_2m' },\n    { value: '4D_12m', label: '4D_12m' },\n    { value: '30D_1h', label: '30D_1h' },\n    { value: '90D_4h', label: '90D_4h' },\n    { value: '90D_12h', label: '90D_12h' },\n    { value: '1Y_1D', label: '1Y_1D' }\n  ]\n\n  const handleChangeTable = (value) => {\n    setSelectedOptionTable(value)\n    if (value) {\n      history.push({\n        pathname: '/itemComponent',\n        state: value,\n      });\n    }\n  \n  }\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <a href=\"/chart\" className=\"navbar-brand\">\n          Hunter Violette - HeikinAshi\n        </a>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/chart\"} className=\"nav-link\"></Link>\n          </li>\n          <div className=\"select-option\">\n            <Select\n              value={selectedOptionTable}\n              onChange={handleChangeTable}\n              options={optionsTable}\n            />\n          </div>\n        </div>\n      </nav>\n      <div className=\"graphs-container\">\n        <div className=\"row\">\n          <div className=\"col-md-4 graph-container\" >\n            < StockChart1D2M />\n          </div>\n          <div className=\"col-md-4 graph-container\">\n            <StockChart4D12M />\n          </div>\n          <div className=\"col-md-4 graph-container\">\n            <StockChart30D1H />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-4 graph-container\">\n            <StockChart90D4H />\n          </div>\n          <div className=\"col-md-4 graph-container\">\n            <StockChart90D12H />\n          </div>\n          <div className=\"col-md-4 graph-container\">\n            <StockChart1Y1D />\n          </div>\n        </div>\n      </div>\n    </div>\n\n  );\n};\n\nexport default TutorialsList;\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport http from \"../http-common\";\r\nimport axios from \"axios\";\r\nimport Select from 'react-select'\r\nimport 'react-select/dist/react-select.css';\r\n\r\nimport _ from \"underscore\";\r\nimport moment from \"moment\";\r\n\r\nimport { TimeSeries, Index } from \"pondjs\";\r\nimport Datetime from 'react-datetime';\r\nimport \"react-datetime/css/react-datetime.css\";\r\n\r\nimport { tsvParse, csvParse } from \"d3-dsv\";\r\nimport { timeParse } from \"d3-time-format\";\r\nimport StockChart1D2M from \"./1D2MStockChart\";\r\nimport StockChart4D12M from \"./4D12MStockChart\";\r\nimport StockChart30D1H from \"./30D1HStockChart\";\r\nimport StockChart90D4H from \"./90D4HStockChart\";\r\nimport StockChart90D12H from \"./90D12HStockChart\";\r\nimport StockChart1Y1D from \"./1Y1DStockChart\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst TutorialsList = (props) => {\r\n    useEffect(() => {\r\n        console.log(\"----------------------------\")\r\n        setSelectedOptionTable(props.location.state.value)\r\n    })\r\n    const history = useHistory();\r\n    const [selectedOptionTable, setSelectedOptionTable] = useState(null)\r\n    const optionsTable = [\r\n        { value: '1D_2m', label: '1D_2m' },\r\n        { value: '4D_12m', label: '4D_12m' },\r\n        { value: '30D_1h', label: '30D_1h' },\r\n        { value: '90D_4h', label: '90D_4h' },\r\n        { value: '90D_12h', label: '90D_12h' },\r\n        { value: '1Y_1D', label: '1Y_1D' }\r\n    ]\r\n    // const handleClick = () => history.push('/goodbye');\r\n    const handleClick = () => history.push('/goodbye');\r\n\r\n    const handleChangeTable = (value) => {\r\n        setSelectedOptionTable(value)\r\n        if (value) {\r\n            history.push({\r\n                pathname: '/itemComponent',\r\n                state: value,\r\n            });\r\n        }\r\n       \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n                <a href=\"/chart\" className=\"navbar-brand\">\r\n                    Hunter Violette - HeikinAshi\r\n                </a>\r\n                <div className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link to={\"/chart\"} className=\"nav-link\"></Link>\r\n                    </li>\r\n                    <div className=\"select-option\">\r\n                        <Select\r\n                            value={selectedOptionTable}\r\n                            onChange={handleChangeTable}\r\n                            options={optionsTable}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <div className=\"graphs-container\">\r\n                {\r\n                    selectedOptionTable === '1D_2m' \r\n                    ? <StockChart1D2M />\r\n                    : selectedOptionTable === '4D_12m' \r\n                    ? <StockChart4D12M />\r\n                    : selectedOptionTable === '30D_1h' \r\n                    ? <StockChart30D1H />\r\n                    : selectedOptionTable === '90D_4h' \r\n                    ? <StockChart90D4H />\r\n                    : selectedOptionTable === '90D_12h' \r\n                    ? <StockChart90D12H />\r\n                    : <StockChart1Y1D />\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default TutorialsList;\r\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect  } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport TimeChart from \"./components/TimeChart\";\nimport Select from 'react-select'\nimport 'react-select/dist/react-select.css';\n\nimport ItemComponent from './components/ItemComponent';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path={[\"/\", \"/chart\"]} component={TimeChart} />\n          <Route exact path=\"/itemComponent\" component={ItemComponent} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const CREATE_TUTORIAL = \"CREATE_TUTORIAL\";\nexport const RETRIEVE_TUTORIALS = \"RETRIEVE_TUTORIALS\";\nexport const UPDATE_TUTORIAL = \"UPDATE_TUTORIAL\";\nexport const DELETE_TUTORIAL = \"DELETE_TUTORIAL\";\nexport const DELETE_ALL_TUTORIALS = \"DELETE_ALL_TUTORIALS\";","import {\n  CREATE_TUTORIAL,\n  RETRIEVE_TUTORIALS,\n  UPDATE_TUTORIAL,\n  DELETE_TUTORIAL,\n  DELETE_ALL_TUTORIALS,\n} from \"../actions/types\";\n\nconst initialState = [];\n\nconst tutorialReducer = (tutorials = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case CREATE_TUTORIAL:\n      return [...tutorials, payload];\n\n    case RETRIEVE_TUTORIALS:\n      return payload;\n\n    case UPDATE_TUTORIAL:\n      return tutorials.map((tutorial) => {\n        if (tutorial.id === payload.id) {\n          return {\n            ...tutorial,\n            ...payload,\n          };\n        } else {\n          return tutorial;\n        }\n      });\n\n    case DELETE_TUTORIAL:\n      return tutorials.filter(({ id }) => id !== payload.id);\n\n    case DELETE_ALL_TUTORIALS:\n      return [];\n\n    default:\n      return tutorials;\n  }\n};\n\nexport default tutorialReducer;","import { combineReducers } from \"redux\";\nimport tutorials from \"./tutorials\";\n\nexport default combineReducers({\n  tutorials,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}